pragma ever-solidity >= 0.62.0;

pragma AbiHeader time;
pragma AbiHeader expire;
pragma AbiHeader pubkey;

import "@broxus/contracts/contracts/libraries/MsgFlag.tsol";
import "./structures/IOrderFeeParams.tsol";

contract OrderPlatform is IOrderFeeParams{
	address static factory;
	address static spentToken;
	TvmCell static params;

	constructor(
		TvmCell code,
		uint32 version,
		uint32 versionOrder,
		OrderFeeParams fee,
		address sendGasTo
	) public {
		if (msg.sender.value != 0 && msg.sender == factory) {
			initialize(code, version, versionOrder, fee, sendGasTo);
		} else {
			sendGasTo.transfer({
				value: 0,
				flag: MsgFlag.ALL_NOT_RESERVED + MsgFlag.DESTROY_IF_ZERO,
				bounce: false
			});
		}
	}

	function initialize(
		TvmCell code,
		uint32 version,
		uint32 versionOrder,
		OrderFeeParams fee,
		address sendGasTo
	) private {
		TvmCell data = abi.encode(
			factory, spentToken, uint32(0), version, versionOrder,
			sendGasTo, fee, params
		);

		tvm.setcode(code);
		tvm.setCurrentCode(code);

		onCodeUpgrade(data);
	}

	function onCodeUpgrade(TvmCell data) private {}
}
