.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
ENDS
; constructor DexAccount
THROW 100
; end constructor DexAccount
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro receive_macro
; function receive
THROW 100
; end function receive
IFREF {
	CALL $c7_to_c4$
}

.macro fallback_macro
; function fallback
THROW 100
; end function fallback
IFREF {
	CALL $c7_to_c4$
}

.macro resetGas
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode receiver
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: receiver
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function resetGas
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
; end function resetGas
; end modifier onlyOwner
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getRoot
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
; function getRoot
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier root
GETGLOB 10
; end function getRoot
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xf441a21e
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getOwner
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
; function getOwner
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier owner
GETGLOB 14
; end function getOwner
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xe2c3961c
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getVersion
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
; function getVersion
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier current_version
GETGLOB 12
; end function getVersion
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xada94d2f
	PUSH S1
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STUR 32
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getVault
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
; function getVault
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier vault
GETGLOB 11
; end function getVault
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbd1bd325
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getWalletData
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: token_root
;; ret param: wallet
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: balance
PUSHINT 0
; function getWalletData
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; map.exists
;; push identifier token_root
PUSH S2
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
PUSHCONT {
	;; map.at
	;; push identifier token_root
	PUSH S2
	;; push identifier _wallets
	GETGLOB 16
	PUSHINT 267
	DICTGET
	THROWIFNOT 50
}
PUSHCONT {
	;; address.makeAddrStd()
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
;; map.exists
;; push identifier token_root
PUSH S3
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
PUSHCONT {
	;; map.at
	;; push identifier token_root
	PUSH S3
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	THROWIFNOT 50
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
BLKDROP2 2, 2
; end function getWalletData
BLKDROP2 1, 2
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xd8e91dbe
	PUSH S2
	STSLICER
	PUSH S1
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STSLICER
	PUSH S1
	STUR 128
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getWallets
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function getWallets
;; return
;; push identifier _wallets
GETGLOB 16
; end function getWallets
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xdde687f1
	PUSH S1
	SWAP
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getBalances
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; function getBalances
;; return
;; push identifier _balances
GETGLOB 17
; end function getBalances
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x851e0c43
	PUSH S1
	SWAP
	STDICT
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro tokensReceivedCallback
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode token_wallet
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode tokens_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode 
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode 
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode sender_wallet
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode original_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode 
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: token_wallet
;; param: token_root
;; param: tokens_amount
;; param: 
;; param: 
;; param: sender_wallet
;; param: original_gas_to
;; param: 
;; param: payload
; function tokensReceivedCallback
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; push identifier payload
DUP
CTOS
;; decl: payloadSlice
;; push identifier payloadSlice
DUP
SREFS
;; >=
PUSHINT 1
GEQ
;; decl: notify_cancel
NEWC
ENDC
;; decl: cancel_payload
;; if
;; push identifier notify_cancel
PUSH S1
PUSHCONT {
	; expValue
	PUSH S2
	; end expValue
	LDREF
	; colValue
	POP S4
	; end colValue
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
}
IF
;; end if
;; if
;; map.exists
;; push identifier token_root
PUSH S10
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; get member sender
	GETGLOB 9
	;; index
	;; push identifier token_root
	PUSH S11
	;; push identifier _wallets
	GETGLOB 16
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	IFNOT
	SDEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member sender
		GETGLOB 9
		;; push identifier token_wallet
		PUSH S12
		SDEQ
	}
	IF
}
IF
PUSHCONT {
	;; if
	;; map.exists
	;; push identifier token_root
	PUSH S10
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
	PUSHCONT {
		;; push identifier tokens_amount
		PUSH S9
		; expValue
		;; fetch _balances
		GETGLOB 17
		;; push identifier token_root
		PUSH S12
		SWAP
		PUSH2 S1, S0
		PUSHINT 267
		DICTGET
		PUSHCONT {
			PLDU 128
		}
		PUSHCONT {
			PUSHINT 0
		}
		IFELSE
		; end expValue
		BLKSWAP 1, 3
		ADD
		UFITS 128
		; colValue
		NEWC
		STU 128
		ROTREV
		PUSHINT 267
		DICTSETB
		SETGLOB 17
		; end colValue
	}
	PUSHCONT {
		; expValue
		;; fetch _balances
		GETGLOB 17
		;; push identifier token_root
		PUSH S11
		SWAP
		; end expValue
		;; push identifier tokens_amount
		PUSH S11
		; colValue
		NEWC
		STU 128
		ROTREV
		PUSHINT 267
		DICTSETB
		SETGLOB 17
		; end colValue
	}
	IFELSE
	;; end if
	;; emit TokensReceived
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6f6f65e8
	;; token_root
	;; push identifier token_root
	PUSH S11
	STSLICER
	;; tokens_amount
	;; push identifier tokens_amount
	PUSH S10
	STUR 128
	;; balance
	;; index
	;; push identifier token_root
	PUSH S11
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 128
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	STUR 128
	;; sender_wallet
	;; push identifier sender_wallet
	PUSH S7
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
	NEWC
	ENDC
	;; decl: empty
	;; Remote call ITONTokenWallet.transferToRecipient
	;; push identifier token_wallet
	PUSH S12
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x3f10d1ab
	;; recipient_public_key
	PUSHINT 0
	STUR 256
	;; recipient_address
	;; push identifier vault
	GETGLOB 11
	STSLICER
	;; tokens
	;; push identifier tokens_amount
	PUSH S12
	STUR 128
	;; deploy_grams
	PUSHINT 0
	STUR 128
	;; transfer_grams
	PUSHINT 0
	STUR 128
	NEWC
	;; send_gas_to
	;; push identifier original_gas_to
	PUSH S9
	STSLICER
	;; notify_receiver
	FALSE
	STIR 1
	;; payload
	;; push identifier empty
	PUSH S3
	STREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
	DROP
}
PUSHCONT {
	;; Remote call ITONTokenWallet.transfer
	;; push identifier token_wallet
	PUSH S11
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x4bf160e2
	;; to
	;; push identifier sender_wallet
	PUSH S8
	STSLICER
	;; tokens
	;; push identifier tokens_amount
	PUSH S11
	STUR 128
	;; grams
	PUSHINT 0
	STUR 128
	;; send_gas_to
	;; push identifier original_gas_to
	PUSH S7
	STSLICER
	;; notify_receiver
	;; push identifier notify_cancel
	PUSH S3
	STIR 1
	;; payload
	;; push identifier cancel_payload
	PUSH S2
	STREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
IFELSE
;; end if
BLKDROP 3
; end function tokensReceivedCallback
BLKDROP 9
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro withdraw
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode recipient_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode recipient_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode deploy_wallet_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: amount
;; param: token_root
;; param: recipient_public_key
;; param: recipient_address
;; param: deploy_wallet_grams
;; param: send_gas_to
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function withdraw
;; !
;; map.exists
;; push identifier token_root
PUSH S4
;; push identifier _tmp_withdrawals
GETGLOB 22
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
NOT
THROWIFNOT 122
;; push identifier amount
PUSH S5
GTINT 0
THROWIFNOT 116
;; get member value
;; push identifier recipient_address
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier recipient_public_key
	PUSH S3
	EQINT 0
}
IFNOT
THROWIFNOT 128
;; get member value
;; push identifier recipient_address
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier recipient_public_key
	PUSH S3
	NEQINT 0
}
IFNOT
THROWIFNOT 128
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
PUSHINT 1000000000
;; +
;; push identifier deploy_wallet_grams
PUSH S3
ADD
UFITS 128
GEQ
THROWIFNOT 103
;; map.exists
;; push identifier token_root
PUSH S4
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; map.exists
	;; push identifier token_root
	PUSH S4
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
}
IF
THROWIFNOT 117
;; index
;; push identifier token_root
PUSH S4
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; >=
;; push identifier amount
PUSH S6
GEQ
THROWIFNOT 118
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; push identifier amount
PUSH S5
; expValue
;; fetch _balances
GETGLOB 17
;; push identifier token_root
PUSH S6
SWAP
PUSH2 S1, S0
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
; end expValue
BLKSWAP 1, 3
SUB
UFITS 128
; colValue
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
; end colValue
;; emit WithdrawTokens
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x7edc3e6a
;; root
;; push identifier token_root
PUSH S5
STSLICER
;; amount
;; push identifier amount
PUSH S6
STUR 128
;; balance
;; index
;; push identifier token_root
PUSH S5
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
STUR 128
ENDC
PUSHINT 0
SENDRAWMSG
;; get member value
;; push identifier send_gas_to
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
PUSHCONT {
	;; push identifier owner
	GETGLOB 14
}
PUSHCONT {
	;; push identifier send_gas_to
	DUP
}
IFELSE
;; decl: send_gas_to_
;; ++
; expValue
;; fetch _nonce
GETGLOB 15
; end expValue
INC
UFITS 64
; colValue
SETGLOB 15
; end colValue
PUSHINT 1
NEWDICT
;; push identifier amount
PUSH S8
;; push identifier token_root
PUSH S8
TUPLE 2
UNTUPLE 2
NEWC
PUSH S2
STUR 128
PUSH S1
STSLICER
BLKDROP2 2, 1
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PAIR
; expValue
;; fetch _tmp_operations
GETGLOB 19
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
ROT
; colValue
NEWC
SWAP
UNPAIR
ROTREV
STUR 32
STDICT
ROTREV
PUSHINT 64
DICTUSETB
SETGLOB 19
; end colValue
; expValue
;; fetch _tmp_send_gas_to
GETGLOB 20
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier send_gas_to_
PUSH S2
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 20
; end colValue
; expValue
;; fetch _tmp_expected_callback_sender
GETGLOB 21
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier vault
GETGLOB 11
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 21
; end colValue
;; push identifier _nonce
GETGLOB 15
;; push identifier recipient_public_key
PUSH S5
;; push identifier recipient_address
PUSH S5
;; push identifier deploy_wallet_grams
PUSH S5
TUPLE 4
; expValue
;; fetch _tmp_withdrawals
GETGLOB 22
;; push identifier token_root
PUSH S7
SWAP
; end expValue
ROT
; colValue
UNTUPLE 4
NEWC
PUSH S4
STUR 64
PUSH S3
STUR 256
PUSH S2
STSLICER
PUSH S1
STUR 128
BLKDROP2 4, 1
ENDC
ROTREV
PUSHINT 267
DICTSETREF
SETGLOB 22
; end colValue
;; Remote call IRootTokenContract.sendExpectedWalletAddress
;; push identifier token_root
PUSH S5
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x55b3a9fb
;; wallet_public_key_
PUSHINT 0
STUR 256
;; owner_address_
;; push identifier vault
GETGLOB 11
STSLICER
;; to
MYADDR
STSLICER
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function withdraw
; end modifier onlyOwner
BLKDROP 6
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro transfer
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode to_dex_account
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode willing_to_deploy
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: amount
;; param: token_root
;; param: to_dex_account
;; param: willing_to_deploy
;; param: send_gas_to
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function transfer
;; push identifier amount
PUSH S4
GTINT 0
THROWIFNOT 116
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
PUSHINT 1000000000
GEQ
THROWIFNOT 103
;; map.exists
;; push identifier token_root
PUSH S3
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; map.exists
	;; push identifier token_root
	PUSH S3
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
}
IF
THROWIFNOT 117
;; index
;; push identifier token_root
PUSH S3
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; >=
;; push identifier amount
PUSH S5
GEQ
THROWIFNOT 118
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; push identifier amount
PUSH S4
; expValue
;; fetch _balances
GETGLOB 17
;; push identifier token_root
PUSH S5
SWAP
PUSH2 S1, S0
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
; end expValue
BLKSWAP 1, 3
SUB
UFITS 128
; colValue
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
; end colValue
;; emit TransferTokens
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x22744b8f
;; root
;; push identifier token_root
PUSH S4
STSLICER
;; amount
;; push identifier amount
PUSH S5
STUR 128
;; balance
;; index
;; push identifier token_root
PUSH S4
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
STUR 128
ENDC
PUSHINT 0
SENDRAWMSG
;; get member value
;; push identifier send_gas_to
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
PUSHCONT {
	;; push identifier owner
	GETGLOB 14
}
PUSHCONT {
	;; push identifier send_gas_to
	DUP
}
IFELSE
;; decl: send_gas_to_
;; ++
; expValue
;; fetch _nonce
GETGLOB 15
; end expValue
INC
UFITS 64
; colValue
SETGLOB 15
; end colValue
PUSHINT 1
NEWDICT
;; push identifier amount
PUSH S7
;; push identifier token_root
PUSH S7
TUPLE 2
UNTUPLE 2
NEWC
PUSH S2
STUR 128
PUSH S1
STSLICER
BLKDROP2 2, 1
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PAIR
; expValue
;; fetch _tmp_operations
GETGLOB 19
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
ROT
; colValue
NEWC
SWAP
UNPAIR
ROTREV
STUR 32
STDICT
ROTREV
PUSHINT 64
DICTUSETB
SETGLOB 19
; end colValue
; expValue
;; fetch _tmp_send_gas_to
GETGLOB 20
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier send_gas_to_
PUSH S2
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 20
; end colValue
; expValue
;; fetch _tmp_expected_callback_sender
GETGLOB 21
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier to_dex_account
PUSH S5
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 21
; end colValue
;; Remote call IDexAccount.internalAccountTransfer
;; push identifier to_dex_account
PUSH S3
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x2bc0736a
;; call_id
;; push identifier _nonce
GETGLOB 15
STUR 64
;; amount
;; push identifier amount
PUSH S7
STUR 128
;; token_root
;; push identifier token_root
PUSH S6
STSLICER
;; sender_owner
;; push identifier owner
GETGLOB 14
STSLICER
;; willing_to_deploy
;; push identifier willing_to_deploy
PUSH S4
STIR 1
NEWC
;; send_gas_to
;; push identifier send_gas_to_
PUSH S3
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function transfer
; end modifier onlyOwner
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro internalAccountTransfer
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode call_id
LDU 64
; Decode amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode sender_owner
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode willing_to_deploy
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: call_id
;; param: amount
;; param: token_root
;; param: sender_owner
;; param: willing_to_deploy
;; param: send_gas_to
; modifier onlyAccount
;; push identifier sender_owner
PUSH S2
PUSHINT 1
;; push identifier account_owner
PUSH S1
;; param: account_owner
; function _buildAccountParams
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier account_owner
PUSH S2
STSLICER
; colValue
NIP
; end colValue
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function _buildAccountParams
NIP
;; param: type_id
;; param: params
; function _buildInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier type_id
PUSH S2
NEWC
STU 8
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
;; push identifier params
PUSH S1
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier platform_code
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildInitData
BLKDROP2 2, 1
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 105
; function internalAccountTransfer
;; push identifier willing_to_deploy
PUSH S3
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; map.exists
	;; push identifier token_root
	PUSH S5
	;; push identifier _wallets
	GETGLOB 16
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
	;; short-circuiting ||
	DUP
	PUSHCONT {
		DROP
		;; map.exists
		;; push identifier token_root
		PUSH S5
		;; push identifier _tmp_deploying_wallets
		GETGLOB 18
		PUSHINT 267
		DICTGET
		DUP
		PUSHCONT {
			NIP
		}
		IF
	}
	IFNOT
}
IFNOT
THROWIFNOT 117
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; if
;; map.exists
;; push identifier token_root
PUSH S5
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
PUSHCONT {
	;; push identifier amount
	PUSH S6
	; expValue
	;; fetch _balances
	GETGLOB 17
	;; push identifier token_root
	PUSH S7
	SWAP
	PUSH2 S1, S0
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 128
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	; end expValue
	BLKSWAP 1, 3
	ADD
	UFITS 128
	; colValue
	NEWC
	STU 128
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 17
	; end colValue
}
PUSHCONT {
	; expValue
	;; fetch _balances
	GETGLOB 17
	;; push identifier token_root
	PUSH S6
	SWAP
	; end expValue
	;; push identifier amount
	PUSH S8
	; colValue
	NEWC
	STU 128
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 17
	; end colValue
}
IFELSE
;; end if
;; emit TokensReceivedFromAccount
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x548b77c8
;; token_root
;; push identifier token_root
PUSH S6
STSLICER
;; tokens_amount
;; push identifier amount
PUSH S7
STUR 128
;; balance
;; index
;; push identifier token_root
PUSH S6
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
STUR 128
;; sender
;; push identifier sender_owner
PUSH S5
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
;; if
;; push identifier willing_to_deploy
PUSH S3
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; !
	;; map.exists
	;; push identifier token_root
	PUSH S5
	;; push identifier _wallets
	GETGLOB 16
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
	NOT
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; !
		;; map.exists
		;; push identifier token_root
		PUSH S5
		;; push identifier _tmp_deploying_wallets
		GETGLOB 18
		PUSHINT 267
		DICTGET
		DUP
		PUSHCONT {
			NIP
		}
		IF
		NOT
	}
	IF
}
IF
PUSHCONT {
	;; push identifier token_root
	PUSH S5
	;; push identifier send_gas_to
	PUSH S3
	CALLREF {
		CALL $_deployWallet_internal_macro$
	}
}
IF
;; end if
;; Remote call IDexAccount.successCallback
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
STSLICECONST x11132606
;; call_id
;; push identifier call_id
PUSH S8
STUR 64
ENDC
PUSHINT 128
SENDRAWMSG
; end function internalAccountTransfer
DROP
DROP
; end modifier onlyAccount
BLKDROP 6
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro internalPairTransfer
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode sender_left_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode sender_right_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: amount
;; param: token_root
;; param: sender_left_root
;; param: sender_right_root
;; param: send_gas_to
; modifier onlyPair
;; push identifier sender_left_root
PUSH S2
;; push identifier sender_right_root
PUSH S2
PUSHINT 2
;; push identifier left_root
PUSH S2
;; push identifier right_root
PUSH S2
;; param: left_root
;; param: right_root
; function _buildPairParams
NEWC
;; decl: builder
;; if
;; get member value
;; push identifier left_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
;; <
;; get member value
;; push identifier right_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
LESS
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function _buildPairParams
BLKDROP2 2, 1
;; param: type_id
;; param: params
; function _buildInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier type_id
PUSH S2
NEWC
STU 8
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
;; push identifier params
PUSH S1
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier platform_code
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildInitData
BLKDROP2 2, 1
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 106
; function internalPairTransfer
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; if
;; map.exists
;; push identifier token_root
PUSH S6
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
PUSHCONT {
	;; push identifier amount
	PUSH S7
	; expValue
	;; fetch _balances
	GETGLOB 17
	;; push identifier token_root
	PUSH S8
	SWAP
	PUSH2 S1, S0
	PUSHINT 267
	DICTGET
	PUSHCONT {
		PLDU 128
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	; end expValue
	BLKSWAP 1, 3
	ADD
	UFITS 128
	; colValue
	NEWC
	STU 128
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 17
	; end colValue
}
PUSHCONT {
	; expValue
	;; fetch _balances
	GETGLOB 17
	;; push identifier token_root
	PUSH S7
	SWAP
	; end expValue
	;; push identifier amount
	PUSH S9
	; colValue
	NEWC
	STU 128
	ROTREV
	PUSHINT 267
	DICTSETB
	SETGLOB 17
	; end colValue
}
IFELSE
;; end if
;; emit TokensReceivedFromPair
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x66f50c2e
;; token_root
;; push identifier token_root
PUSH S8
STSLICER
;; tokens_amount
;; push identifier amount
PUSH S9
STUR 128
;; balance
;; index
;; push identifier token_root
PUSH S8
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
STUR 128
;; left_root
;; push identifier sender_left_root
PUSH S7
STSLICER
NEWC
;; right_root
;; push identifier sender_right_root
PUSH S7
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; transfer()
;; push identifier send_gas_to
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
; end function internalPairTransfer
DROP
DROP2
; end modifier onlyPair
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro exchange
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode spent_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode spent_token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode receive_token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode expected_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: spent_amount
;; param: spent_token_root
;; param: receive_token_root
;; param: expected_amount
;; param: send_gas_to
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function exchange
;; push identifier spent_amount
PUSH S4
GTINT 0
THROWIFNOT 116
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
PUSHINT 1000000000
GEQ
THROWIFNOT 103
;; map.exists
;; push identifier spent_token_root
PUSH S3
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; map.exists
	;; push identifier spent_token_root
	PUSH S3
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
}
IF
THROWIFNOT 117
;; map.exists
;; push identifier receive_token_root
PUSH S2
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
THROWIFNOT 117
;; index
;; push identifier spent_token_root
PUSH S3
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; >=
;; push identifier spent_amount
PUSH S5
GEQ
THROWIFNOT 118
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
PUSHINT 2
;; push identifier spent_token_root
PUSH S4
;; push identifier receive_token_root
PUSH S4
;; param: left_root
;; param: right_root
; function _buildPairParams
NEWC
;; decl: builder
;; if
;; get member value
;; push identifier left_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
;; <
;; get member value
;; push identifier right_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
LESS
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function _buildPairParams
BLKDROP2 2, 1
;; param: type_id
;; param: params
; function _buildInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier type_id
PUSH S2
NEWC
STU 8
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
;; push identifier params
PUSH S1
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier platform_code
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildInitData
BLKDROP2 2, 1
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: pair
;; push identifier spent_amount
PUSH S5
; expValue
;; fetch _balances
GETGLOB 17
;; push identifier spent_token_root
PUSH S6
SWAP
PUSH2 S1, S0
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
; end expValue
BLKSWAP 1, 3
SUB
UFITS 128
; colValue
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
; end colValue
;; emit ExchangeTokens
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x3290e576
;; from
;; push identifier spent_token_root
PUSH S6
STSLICER
;; to
;; push identifier receive_token_root
PUSH S5
STSLICER
;; spent_amount
;; push identifier spent_amount
PUSH S7
STUR 128
;; expected_amount
;; push identifier expected_amount
PUSH S4
STUR 128
;; balance
;; index
;; push identifier spent_token_root
PUSH S6
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
STUR 128
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; get member value
;; push identifier send_gas_to
PUSH S1
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
PUSHCONT {
	;; push identifier owner
	GETGLOB 14
}
PUSHCONT {
	;; push identifier send_gas_to
	PUSH S1
}
IFELSE
;; decl: send_gas_to_
;; ++
; expValue
;; fetch _nonce
GETGLOB 15
; end expValue
INC
UFITS 64
; colValue
SETGLOB 15
; end colValue
PUSHINT 1
NEWDICT
;; push identifier spent_amount
PUSH S8
;; push identifier spent_token_root
PUSH S8
TUPLE 2
UNTUPLE 2
NEWC
PUSH S2
STUR 128
PUSH S1
STSLICER
BLKDROP2 2, 1
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PAIR
; expValue
;; fetch _tmp_operations
GETGLOB 19
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
ROT
; colValue
NEWC
SWAP
UNPAIR
ROTREV
STUR 32
STDICT
ROTREV
PUSHINT 64
DICTUSETB
SETGLOB 19
; end colValue
; expValue
;; fetch _tmp_send_gas_to
GETGLOB 20
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier send_gas_to_
PUSH S2
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 20
; end colValue
; expValue
;; fetch _tmp_expected_callback_sender
GETGLOB 21
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier pair
PUSH S3
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 21
; end colValue
;; Remote call IDexPair.exchange
;; push identifier pair
PUSH S1
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x6aa4f869
;; call_id
;; push identifier _nonce
GETGLOB 15
STUR 64
;; spent_amount
;; push identifier spent_amount
PUSH S8
STUR 128
;; spent_token_root
;; push identifier spent_token_root
PUSH S7
STSLICER
;; receive_token_root
;; push identifier receive_token_root
PUSH S6
STSLICER
;; expected_amount
;; push identifier expected_amount
PUSH S5
STUR 128
NEWC
;; account_owner
;; push identifier owner
GETGLOB 14
STSLICER
;; account_version
;; push identifier current_version
GETGLOB 12
STUR 32
;; send_gas_to
;; push identifier send_gas_to_
PUSH S3
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
DROP2
; end function exchange
; end modifier onlyOwner
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro depositLiquidity
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode left_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode left_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode right_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode right_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode expected_lp_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode auto_change
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: left_root
;; param: left_amount
;; param: right_root
;; param: right_amount
;; param: expected_lp_root
;; param: auto_change
;; param: send_gas_to
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function depositLiquidity
;; get member value
;; push identifier left_root
PUSH S6
PARSEMSGADDR
INDEX 3
PLDU 256
;; !=
;; get member value
;; push identifier right_root
PUSH S5
PARSEMSGADDR
INDEX 3
PLDU 256
NEQ
THROWIFNOT 121
;; get member value
;; push identifier left_root
PUSH S6
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
THROWIFNOT 121
;; get member value
;; push identifier right_root
PUSH S4
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
THROWIFNOT 121
;; push identifier left_amount
PUSH S5
GTINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier right_amount
	PUSH S3
	GTINT 0
}
IF
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier auto_change
	PUSH S1
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier left_amount
		PUSH S5
		;; +
		;; push identifier right_amount
		PUSH S4
		ADD
		UFITS 128
		GTINT 0
	}
	IF
}
IFNOT
THROWIFNOT 116
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
PUSHINT 1000000000
GEQ
THROWIFNOT 103
;; map.exists
;; push identifier left_root
PUSH S6
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; map.exists
	;; push identifier left_root
	PUSH S6
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
}
IF
THROWIFNOT 117
;; map.exists
;; push identifier right_root
PUSH S4
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; map.exists
	;; push identifier right_root
	PUSH S4
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
}
IF
THROWIFNOT 117
;; map.exists
;; push identifier expected_lp_root
PUSH S2
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; map.exists
	;; push identifier expected_lp_root
	PUSH S2
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
}
IF
THROWIFNOT 117
;; index
;; push identifier left_root
PUSH S6
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; >=
;; push identifier left_amount
PUSH S6
GEQ
THROWIFNOT 118
;; index
;; push identifier right_root
PUSH S4
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; >=
;; push identifier right_amount
PUSH S4
GEQ
THROWIFNOT 118
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
PUSHINT 2
;; push identifier left_root
PUSH S7
;; push identifier right_root
PUSH S6
;; param: left_root
;; param: right_root
; function _buildPairParams
NEWC
;; decl: builder
;; if
;; get member value
;; push identifier left_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
;; <
;; get member value
;; push identifier right_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
LESS
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function _buildPairParams
BLKDROP2 2, 1
;; param: type_id
;; param: params
; function _buildInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier type_id
PUSH S2
NEWC
STU 8
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
;; push identifier params
PUSH S1
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier platform_code
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildInitData
BLKDROP2 2, 1
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: pair
;; push identifier left_amount
PUSH S6
; expValue
;; fetch _balances
GETGLOB 17
;; push identifier left_root
PUSH S9
SWAP
PUSH2 S1, S0
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
; end expValue
BLKSWAP 1, 3
SUB
UFITS 128
; colValue
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
; end colValue
;; push identifier right_amount
PUSH S4
; expValue
;; fetch _balances
GETGLOB 17
;; push identifier right_root
PUSH S7
SWAP
PUSH2 S1, S0
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
; end expValue
BLKSWAP 1, 3
SUB
UFITS 128
; colValue
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
; end colValue
;; emit DepositLiquidity
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x2ee441e3
;; left_root
;; push identifier left_root
PUSH S8
STSLICER
;; left_amount
;; push identifier left_amount
PUSH S7
STUR 128
;; right_root
;; push identifier right_root
PUSH S6
STSLICER
;; right_amount
;; push identifier right_amount
PUSH S5
STUR 128
;; auto_change
;; push identifier auto_change
PUSH S3
STIR 1
ENDC
PUSHINT 0
SENDRAWMSG
;; get member value
;; push identifier send_gas_to
PUSH S1
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
PUSHCONT {
	;; push identifier owner
	GETGLOB 14
}
PUSHCONT {
	;; push identifier send_gas_to
	PUSH S1
}
IFELSE
;; decl: send_gas_to_
;; ++
; expValue
;; fetch _nonce
GETGLOB 15
; end expValue
INC
UFITS 64
; colValue
SETGLOB 15
; end colValue
PUSHINT 2
NEWDICT
;; push identifier left_amount
PUSH S9
;; push identifier left_root
PUSH S11
TUPLE 2
UNTUPLE 2
NEWC
PUSH S2
STUR 128
PUSH S1
STSLICER
BLKDROP2 2, 1
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
;; push identifier right_amount
PUSH S7
;; push identifier right_root
PUSH S9
TUPLE 2
UNTUPLE 2
NEWC
PUSH S2
STUR 128
PUSH S1
STSLICER
BLKDROP2 2, 1
PUSHINT 1
ROT
PUSHINT 32
DICTUSETB
PAIR
; expValue
;; fetch _tmp_operations
GETGLOB 19
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
ROT
; colValue
NEWC
SWAP
UNPAIR
ROTREV
STUR 32
STDICT
ROTREV
PUSHINT 64
DICTUSETB
SETGLOB 19
; end colValue
; expValue
;; fetch _tmp_send_gas_to
GETGLOB 20
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier send_gas_to_
PUSH S2
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 20
; end colValue
; expValue
;; fetch _tmp_expected_callback_sender
GETGLOB 21
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier pair
PUSH S3
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 21
; end colValue
;; Remote call IDexPair.depositLiquidity
;; push identifier pair
PUSH S1
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x7ef158d3
;; call_id
;; push identifier _nonce
GETGLOB 15
STUR 64
;; left_amount
;; get member value
;; push identifier left_root
PUSH S10
PARSEMSGADDR
INDEX 3
PLDU 256
;; <
;; get member value
;; push identifier right_root
PUSH S9
PARSEMSGADDR
INDEX 3
PLDU 256
LESS
PUSHCONT {
	;; push identifier left_amount
	PUSH S9
}
PUSHCONT {
	;; push identifier right_amount
	PUSH S7
}
IFELSE
STUR 128
;; right_amount
;; get member value
;; push identifier left_root
PUSH S10
PARSEMSGADDR
INDEX 3
PLDU 256
;; <
;; get member value
;; push identifier right_root
PUSH S9
PARSEMSGADDR
INDEX 3
PLDU 256
LESS
PUSHCONT {
	;; push identifier right_amount
	PUSH S7
}
PUSHCONT {
	;; push identifier left_amount
	PUSH S9
}
IFELSE
STUR 128
;; expected_lp_root
;; push identifier expected_lp_root
PUSH S6
STSLICER
;; auto_change
;; push identifier auto_change
PUSH S5
STIR 1
;; account_owner
;; push identifier owner
GETGLOB 14
STSLICER
;; account_version
;; push identifier current_version
GETGLOB 12
STUR 32
NEWC
;; send_gas_to
;; push identifier send_gas_to_
PUSH S3
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
DROP2
; end function depositLiquidity
; end modifier onlyOwner
BLKDROP 7
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro withdrawLiquidity
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode lp_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode lp_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode left_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode right_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: lp_amount
;; param: lp_root
;; param: left_root
;; param: right_root
;; param: send_gas_to
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function withdrawLiquidity
;; push identifier lp_amount
PUSH S4
GTINT 0
THROWIFNOT 116
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
PUSHINT 1000000000
GEQ
THROWIFNOT 103
;; map.exists
;; push identifier lp_root
PUSH S3
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; map.exists
	;; push identifier lp_root
	PUSH S3
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
}
IF
THROWIFNOT 117
;; map.exists
;; push identifier left_root
PUSH S2
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
THROWIFNOT 117
;; map.exists
;; push identifier right_root
PUSH S1
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
THROWIFNOT 117
;; index
;; push identifier lp_root
PUSH S3
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; >=
;; push identifier lp_amount
PUSH S5
GEQ
THROWIFNOT 118
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
PUSHINT 2
;; push identifier left_root
PUSH S3
;; push identifier right_root
PUSH S3
;; param: left_root
;; param: right_root
; function _buildPairParams
NEWC
;; decl: builder
;; if
;; get member value
;; push identifier left_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
;; <
;; get member value
;; push identifier right_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
LESS
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function _buildPairParams
BLKDROP2 2, 1
;; param: type_id
;; param: params
; function _buildInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier type_id
PUSH S2
NEWC
STU 8
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
;; push identifier params
PUSH S1
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier platform_code
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildInitData
BLKDROP2 2, 1
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: pair
;; push identifier lp_amount
PUSH S5
; expValue
;; fetch _balances
GETGLOB 17
;; push identifier lp_root
PUSH S6
SWAP
PUSH2 S1, S0
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
; end expValue
BLKSWAP 1, 3
SUB
UFITS 128
; colValue
NEWC
STU 128
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 17
; end colValue
;; emit WithdrawLiquidity
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x3f1e115a
;; lp_amount
;; push identifier lp_amount
PUSH S7
STUR 128
;; lp_balance
;; index
;; push identifier lp_root
PUSH S6
;; push identifier _balances
GETGLOB 17
PUSHINT 267
DICTGET
PUSHCONT {
	PLDU 128
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
STUR 128
;; lp_root
;; push identifier lp_root
PUSH S6
STSLICER
;; left_root
;; push identifier left_root
PUSH S5
STSLICER
NEWC
;; right_root
;; push identifier right_root
PUSH S5
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; get member value
;; push identifier send_gas_to
PUSH S1
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
PUSHCONT {
	;; push identifier owner
	GETGLOB 14
}
PUSHCONT {
	;; push identifier send_gas_to
	PUSH S1
}
IFELSE
;; decl: send_gas_to_
;; ++
; expValue
;; fetch _nonce
GETGLOB 15
; end expValue
INC
UFITS 64
; colValue
SETGLOB 15
; end colValue
PUSHINT 1
NEWDICT
;; push identifier lp_amount
PUSH S8
;; push identifier lp_root
PUSH S8
TUPLE 2
UNTUPLE 2
NEWC
PUSH S2
STUR 128
PUSH S1
STSLICER
BLKDROP2 2, 1
PUSHINT 0
ROT
PUSHINT 32
DICTUSETB
PAIR
; expValue
;; fetch _tmp_operations
GETGLOB 19
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
ROT
; colValue
NEWC
SWAP
UNPAIR
ROTREV
STUR 32
STDICT
ROTREV
PUSHINT 64
DICTUSETB
SETGLOB 19
; end colValue
; expValue
;; fetch _tmp_send_gas_to
GETGLOB 20
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier send_gas_to_
PUSH S2
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 20
; end colValue
; expValue
;; fetch _tmp_expected_callback_sender
GETGLOB 21
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier pair
PUSH S3
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 21
; end colValue
;; Remote call IDexPair.withdrawLiquidity
;; push identifier pair
PUSH S1
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x5481fb5b
;; call_id
;; push identifier _nonce
GETGLOB 15
STUR 64
;; lp_amount
;; push identifier lp_amount
PUSH S8
STUR 128
;; expected_lp_root
;; push identifier lp_root
PUSH S7
STSLICER
;; account_owner
;; push identifier owner
GETGLOB 14
STSLICER
;; account_version
;; push identifier current_version
GETGLOB 12
STUR 32
NEWC
;; send_gas_to
;; push identifier send_gas_to_
PUSH S3
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
DROP2
; end function withdrawLiquidity
; end modifier onlyOwner
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro addPair
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode left_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode right_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: left_root
;; param: right_root
;; param: send_gas_to
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function addPair
;; get member value
;; push identifier left_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
;; !=
;; get member value
;; push identifier right_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
NEQ
THROWIFNOT 121
;; get member value
;; push identifier left_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
THROWIFNOT 121
;; get member value
;; push identifier right_root
PUSH S1
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
THROWIFNOT 121
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
PUSHINT 3000000000
GEQ
THROWIFNOT 103
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
PUSHINT 2
;; push identifier left_root
PUSH S3
;; push identifier right_root
PUSH S3
;; param: left_root
;; param: right_root
; function _buildPairParams
NEWC
;; decl: builder
;; if
;; get member value
;; push identifier left_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
;; <
;; get member value
;; push identifier right_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
LESS
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function _buildPairParams
BLKDROP2 2, 1
;; param: type_id
;; param: params
; function _buildInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier type_id
PUSH S2
NEWC
STU 8
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
;; push identifier params
PUSH S1
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier platform_code
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildInitData
BLKDROP2 2, 1
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; emit AddPair
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x4c8d5667
;; left_root
;; push identifier left_root
PUSH S5
STSLICER
;; right_root
;; push identifier right_root
PUSH S4
STSLICER
;; pair
;; push identifier expected
PUSH S2
STSLICER
STBREFR
ENDC
PUSHINT 0
SENDRAWMSG
;; get member value
;; push identifier send_gas_to
PUSH S1
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
PUSHCONT {
	;; push identifier owner
	GETGLOB 14
}
PUSHCONT {
	;; push identifier send_gas_to
	PUSH S1
}
IFELSE
;; decl: send_gas_to_
;; ++
; expValue
;; fetch _nonce
GETGLOB 15
; end expValue
INC
UFITS 64
; colValue
SETGLOB 15
; end colValue
; expValue
;; fetch _tmp_send_gas_to
GETGLOB 20
;; push identifier _nonce
GETGLOB 15
SWAP
; end expValue
;; push identifier send_gas_to_
PUSH S2
; colValue
ROTREV
PUSHINT 64
DICTUSET
SETGLOB 20
; end colValue
;; Remote call IDexPair.checkPair
;; push identifier expected
PUSH S1
TRUE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x7b2b7524
;; call_id
;; push identifier _nonce
GETGLOB 15
STUR 64
;; account_owner
;; push identifier owner
GETGLOB 14
STSLICER
;; account_version
;; push identifier current_version
GETGLOB 12
STUR 32
;; send_gas_to
;; push identifier send_gas_to_
PUSH S2
STSLICER
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
DROP2
; end function addPair
; end modifier onlyOwner
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro checkPairCallback
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode original_call_id
LDU 64
; Decode left_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode right_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode lp_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: original_call_id
;; param: left_root
;; param: right_root
;; param: lp_root
;; param: send_gas_to
; modifier onlyPair
;; push identifier left_root
PUSH S3
;; push identifier right_root
PUSH S3
PUSHINT 2
;; push identifier left_root
PUSH S2
;; push identifier right_root
PUSH S2
;; param: left_root
;; param: right_root
; function _buildPairParams
NEWC
;; decl: builder
;; if
;; get member value
;; push identifier left_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
;; <
;; get member value
;; push identifier right_root
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
LESS
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function _buildPairParams
BLKDROP2 2, 1
;; param: type_id
;; param: params
; function _buildInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier type_id
PUSH S2
NEWC
STU 8
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
;; push identifier params
PUSH S1
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier platform_code
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildInitData
BLKDROP2 2, 1
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 106
; function checkPairCallback
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; delete
; expValue
;; fetch _tmp_send_gas_to
GETGLOB 20
;; push identifier original_call_id
PUSH S8
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 64
DICTUDEL
DROP
; colValue
NIP
SETGLOB 20
; end colValue
;; if
;; !
;; map.exists
;; push identifier left_root
PUSH S6
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
PUSHCONT {
	;; push identifier left_root
	PUSH S6
	;; push identifier send_gas_to
	PUSH S4
	CALLREF {
		CALL $_deployWallet_internal_macro$
	}
}
IFNOT
;; end if
;; if
;; !
;; map.exists
;; push identifier right_root
PUSH S5
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
PUSHCONT {
	;; push identifier right_root
	PUSH S5
	;; push identifier send_gas_to
	PUSH S4
	CALLREF {
		CALL $_deployWallet_internal_macro$
	}
}
IFNOT
;; end if
;; if
;; !
;; map.exists
;; push identifier lp_root
PUSH S4
;; push identifier _wallets
GETGLOB 16
PUSHINT 267
DICTGET
DUP
PUSHCONT {
	NIP
}
IF
PUSHCONT {
	;; push identifier lp_root
	PUSH S4
	;; push identifier send_gas_to
	PUSH S4
	CALLREF {
		CALL $_deployWallet_internal_macro$
	}
}
IFNOT
;; end if
;; transfer()
;; push identifier send_gas_to
PUSH S3
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
; end function checkPairCallback
DROP
DROP2
; end modifier onlyPair
BLKDROP 5
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_deployWallet_internal
.type	_deployWallet_internal, @function
CALL $_deployWallet_internal_macro$

.macro _deployWallet_internal_macro
;; param: token_root
;; param: send_gas_to
; function _deployWallet
; expValue
;; fetch _tmp_deploying_wallets
GETGLOB 18
;; push identifier token_root
PUSH S2
SWAP
; end expValue
TRUE
; colValue
NEWC
STI 1
ROTREV
PUSHINT 267
DICTSETB
SETGLOB 18
; end colValue
;; Remote call IRootTokenContract.deployEmptyWallet
;; push identifier token_root
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x40bebc200000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x542b1672
;; deploy_grams
PUSHINT 100000000
STUR 128
;; wallet_public_key
PUSHINT 0
STUR 256
;; owner_address
MYADDR
STSLICER
;; gas_back_address
;; push identifier send_gas_to
PUSH S2
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
;; Remote call IRootTokenContract.sendExpectedWalletAddress
;; push identifier token_root
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x55b3a9fb
;; wallet_public_key_
PUSHINT 0
STUR 256
;; owner_address_
MYADDR
STSLICER
;; to
MYADDR
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
; end function _deployWallet
DROP2

.macro expectedWalletAddressCallback
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode wallet
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode wallet_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode owner_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: wallet
;; param: wallet_public_key
;; param: owner_address
; function expectedWalletAddressCallback
;; push identifier wallet_public_key
PUSH S1
EQINT 0
THROWIFNOT 100
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; if
;; index
;; get member sender
GETGLOB 9
;; push identifier _tmp_deploying_wallets
GETGLOB 18
PUSHINT 267
DICTGET
PUSHCONT {
	PLDI 1
}
PUSHCONT {
	PUSHINT 0
}
IFELSE
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier owner_address
	DUP
	MYADDR
	SDEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; !
		;; map.exists
		;; get member sender
		GETGLOB 9
		;; push identifier _wallets
		GETGLOB 16
		PUSHINT 267
		DICTGET
		DUP
		PUSHCONT {
			NIP
		}
		IF
		NOT
	}
	IF
}
IF
PUSHCONT {
	; expValue
	;; fetch _wallets
	GETGLOB 16
	;; get member sender
	GETGLOB 9
	SWAP
	; end expValue
	;; push identifier wallet
	PUSH S4
	; colValue
	ROTREV
	PUSHINT 267
	DICTSET
	SETGLOB 16
	; end colValue
	;; if
	;; !
	;; map.exists
	;; get member sender
	GETGLOB 9
	;; push identifier _balances
	GETGLOB 17
	PUSHINT 267
	DICTGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
	PUSHCONT {
		; expValue
		;; fetch _balances
		GETGLOB 17
		;; get member sender
		GETGLOB 9
		SWAP
		; end expValue
		PUSHINT 0
		; colValue
		NEWC
		STU 128
		ROTREV
		PUSHINT 267
		DICTSETB
		SETGLOB 17
		; end colValue
	}
	IFNOT
	;; end if
	;; delete
	; expValue
	;; fetch _tmp_deploying_wallets
	GETGLOB 18
	;; get member sender
	GETGLOB 9
	SWAP
	; end expValue
	PUSH S1
	SWAP
	PUSHINT 267
	DICTDEL
	DROP
	; colValue
	NIP
	SETGLOB 18
	; end colValue
	;; Remote call ITONTokenWallet.setReceiveCallback
	;; push identifier wallet
	PUSH S2
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x71eee875
	;; receive_callback
	MYADDR
	STSLICER
	;; allow_non_notifiable
	FALSE
	STIR 1
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
PUSHCONT {
	;; if
	;; push identifier owner_address
	DUP
	;; push identifier vault
	GETGLOB 11
	SDEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; map.exists
		;; get member sender
		GETGLOB 9
		;; push identifier _wallets
		GETGLOB 16
		PUSHINT 267
		DICTGET
		DUP
		PUSHCONT {
			NIP
		}
		IF
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; map.exists
			;; get member sender
			GETGLOB 9
			;; push identifier _tmp_withdrawals
			GETGLOB 22
			PUSHINT 267
			DICTGET
			DUP
			PUSHCONT {
				NIP
			}
			IF
		}
		IF
	}
	IF
	PUSHCONT {
		;; index
		;; get member sender
		GETGLOB 9
		;; push identifier _tmp_withdrawals
		GETGLOB 22
		PUSHINT 267
		DICTGETREF
		PUSHCONT {
			CTOS
			LDU 64
			LDU 256
			LDMSGADDR
			PLDU 128
			TUPLE 4
		}
		PUSHCONT {
			PUSHINT 0
			PUSHINT 0
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			PUSHINT 0
			TUPLE 4
		}
		IFELSE
		;; decl: w
		;; index
		PUSHINT 0
		;; index
		;; get member call_id
		;; push identifier w
		PUSH S1
		INDEX 0
		;; push identifier _tmp_operations
		GETGLOB 19
		PUSHINT 64
		DICTUGET
		PUSHCONT {
			LDU 32
			PLDDICT
			PAIR
		}
		PUSHCONT {
			PUSHINT 0
			NEWDICT
			PAIR
		}
		IFELSE
		INDEX 1
		PUSHINT 32
		DICTUGET
		THROWIFNOT 50
		LDU 128
		TUPLE 2
		;; decl: operation
		;; index
		;; get member call_id
		;; push identifier w
		PUSH S1
		INDEX 0
		;; push identifier _tmp_send_gas_to
		GETGLOB 20
		PUSHINT 64
		DICTUGET
		PUSHCONT {
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		}
		IFNOT
		;; decl: send_gas_to
		;; if
		;; index
		;; get member call_id
		;; push identifier w
		PUSH S2
		INDEX 0
		;; push identifier _tmp_expected_callback_sender
		GETGLOB 21
		PUSHINT 64
		DICTUGET
		PUSHCONT {
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		}
		IFNOT
		;; push identifier vault
		GETGLOB 11
		SDEQ
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; get member root
			;; push identifier operation
			PUSH S1
			INDEX 1
			;; get member sender
			GETGLOB 9
			SDEQ
		}
		IF
		PUSHCONT {
			;; delete
			; expValue
			;; fetch _tmp_withdrawals
			GETGLOB 22
			;; get member sender
			GETGLOB 9
			SWAP
			; end expValue
			PUSH S1
			SWAP
			PUSHINT 267
			DICTDEL
			DROP
			; colValue
			NIP
			SETGLOB 22
			; end colValue
			;; Remote call IDexVault.withdraw
			;; push identifier vault
			GETGLOB 11
			TRUE
			NEWC
			STSLICECONST x6_
			STI 1
			PUSHINT 3
			STZEROES
			STSLICE
			PUSHINT 109
			STZEROES
			STSLICECONST 0
			STSLICECONST 1
			NEWC
			STSLICECONST x6a8ae83d
			;; call_id
			;; get member call_id
			;; push identifier w
			PUSH S4
			INDEX 0
			STUR 64
			;; amount
			;; get member amount
			;; push identifier operation
			PUSH S3
			INDEX 0
			STUR 128
			;; token_root
			;; get member root
			;; push identifier operation
			PUSH S3
			INDEX 1
			STSLICER
			;; vault_wallet
			;; push identifier wallet
			PUSH S7
			STSLICER
			NEWC
			;; recipient_public_key
			;; get member recipient_public_key
			;; push identifier w
			PUSH S5
			INDEX 1
			STUR 256
			;; recipient_address
			;; get member recipient_address
			;; push identifier w
			PUSH S5
			INDEX 2
			STSLICER
			;; deploy_wallet_grams
			;; get member deploy_wallet_grams
			;; push identifier w
			PUSH S5
			INDEX 3
			STUR 128
			;; account_owner
			;; push identifier owner
			GETGLOB 14
			STSLICER
			;; account_version
			;; push identifier current_version
			GETGLOB 12
			STUR 32
			NEWC
			;; send_gas_to
			;; push identifier send_gas_to
			PUSH S4
			STSLICER
			STBREFR
			STBREFR
			STBREFR
			ENDC
			PUSHINT 128
			SENDRAWMSG
		}
		PUSHCONT {
			;; transfer()
			;; push identifier send_gas_to
			DUP
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHINT 109
			STZEROES
			STSLICECONST 0
			STSLICECONST 0
			ENDC
			PUSHINT 128
			SENDRAWMSG
		}
		IFELSE
		;; end if
		BLKDROP 3
	}
	IF
	;; end if
}
IFELSE
;; end if
; end function expectedWalletAddressCallback
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro requestUpgrade
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: send_gas_to
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function requestUpgrade
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
PUSHINT 5000000000
GEQ
THROWIFNOT 103
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; emit CodeUpgradeRequested
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x4bf79f89
ENDC
PUSHINT 0
SENDRAWMSG
;; Remote call IDexRoot.requestUpgradeAccount
;; push identifier root
GETGLOB 10
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x23146422
;; current_version
;; push identifier current_version
GETGLOB 12
STUR 32
;; send_gas_to
;; push identifier owner
GETGLOB 14
STSLICER
;; owner
;; push identifier send_gas_to
PUSH S2
STSLICER
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
; end function requestUpgrade
; end modifier onlyOwner
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro upgrade
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode code
;; decode TvmCell
LDREF
; Decode new_version
LDU 32
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: code
;; param: new_version
;; param: send_gas_to
; modifier onlyRoot
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 10
SDEQ
THROWIFNOT 101
; function upgrade
;; if
;; push identifier current_version
GETGLOB 12
;; ==
;; push identifier new_version
PUSH S2
EQUAL
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; !
	;; map.empty
	;; push identifier _tmp_deploying_wallets
	GETGLOB 18
	DICTEMPTY
	NOT
	;; short-circuiting ||
	DUP
	PUSHCONT {
		DROP
		;; !
		;; map.empty
		;; push identifier _tmp_operations
		GETGLOB 19
		DICTEMPTY
		NOT
		;; short-circuiting ||
		DUP
		PUSHCONT {
			DROP
			;; !
			;; map.empty
			;; push identifier _tmp_send_gas_to
			GETGLOB 20
			DICTEMPTY
			NOT
			;; short-circuiting ||
			DUP
			PUSHCONT {
				DROP
				;; !
				;; map.empty
				;; push identifier _tmp_expected_callback_sender
				GETGLOB 21
				DICTEMPTY
				NOT
			}
			IFNOT
		}
		IFNOT
	}
	IFNOT
}
IFNOT
PUSHCONT {
	PUSHINT 1000000000
	PUSHINT 2
	RAWRESERVE
	;; transfer()
	;; push identifier send_gas_to
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
PUSHCONT {
	;; emit AccountCodeUpgraded
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x5e12d57f
	;; version
	;; push identifier new_version
	PUSH S2
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	NEWC
	;; decl: builder
	; expValue
	DUP
	; end expValue
	;; push identifier root
	GETGLOB 10
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier vault
	GETGLOB 11
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier current_version
	GETGLOB 12
	STUR 32
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier new_version
	PUSH S3
	STUR 32
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier send_gas_to
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier platform_code
	GETGLOB 13
	STREFR
	; colValue
	NIP
	; end colValue
	NEWC
	;; decl: dataBuilder
	; expValue
	DUP
	; end expValue
	;; push identifier owner
	GETGLOB 14
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier _wallets
	GETGLOB 16
	SWAP
	STDICT
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier _balances
	GETGLOB 17
	SWAP
	STDICT
	; colValue
	NIP
	; end colValue
	; expValue
	PUSH S1
	; end expValue
	;; push identifier dataBuilder
	PUSH S1
	STBREFR
	; colValue
	POP S2
	; end colValue
	;; push identifier code
	PUSH S4
	SETCODE
	;; push identifier code
	PUSH S4
	CTOS
	BLESS
	POP c3
	;; push identifier builder
	PUSH S1
	ENDC
	CALLREF {
		CALL $:onCodeUpgrade$
	}
	DROP2
}
IFELSE
;; end if
; end function upgrade
; end modifier onlyRoot
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
;; param: upgrade_data
; function onCodeUpgrade
;; push identifier upgrade_data
DUP
CTOS
;; decl: s
; expValue
DUP
; end expValue
;; decode address
LDMSGADDR
;; decode address
LDMSGADDR
LDU 32
LDU 32
;; decode address
LDMSGADDR
; colValue
POP S6
; end colValue
BLKSWAP 4, 1
BLKSWAP 4, 1
BLKSWAP 4, 1
BLKSWAP 4, 1
BLKSWAP 4, 1
;; decl: root_
;; decl: vault_
;; decl: old_version
;; decl: new_version
;; decl: send_gas_to
;; if
;; push identifier old_version
PUSH S2
PUSHCONT {
	;; set default state vars
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 10
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 11
	PUSHINT 0
	SETGLOB 12
	NEWC
	ENDC
	SETGLOB 13
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	PUSHINT 0
	SETGLOB 15
	NEWDICT
	SETGLOB 16
	NEWDICT
	SETGLOB 17
	NEWDICT
	SETGLOB 18
	NEWDICT
	SETGLOB 19
	NEWDICT
	SETGLOB 20
	NEWDICT
	SETGLOB 21
	NEWDICT
	SETGLOB 22
	;; end set default state vars
}
IFNOT
;; end if
; expValue
; end expValue
;; push identifier root_
PUSH S4
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
;; push identifier vault_
PUSH S3
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
;; push identifier new_version
PUSH S1
; colValue
SETGLOB 12
; end colValue
; expValue
PUSH S5
; end expValue
LDREF
; colValue
POP S7
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 13
; end colValue
; expValue
PUSH S5
; end expValue
LDREFRTOS
SWAP
; colValue
POP S7
; end colValue
;; decl: data
; expValue
DUP
; end expValue
;; decode address
LDMSGADDR
; colValue
POP S2
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 14
; end colValue
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; transfer()
;; push identifier send_gas_to
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
BLKDROP 7
; end function onCodeUpgrade
DROP
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro successCallback
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode call_id
LDU 64
ENDS
;; param: call_id
; function successCallback
;; map.exists
;; push identifier call_id
DUP
;; push identifier _tmp_expected_callback_sender
GETGLOB 21
PUSHINT 64
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
THROWIFNOT 119
;; map.at
;; push identifier call_id
DUP
;; push identifier _tmp_expected_callback_sender
GETGLOB 21
PUSHINT 64
DICTUGET
THROWIFNOT 50
;; get member sender
GETGLOB 9
SDEQ
THROWIFNOT 120
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; delete
; expValue
;; fetch _tmp_operations
GETGLOB 19
;; push identifier call_id
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 64
DICTUDEL
DROP
; colValue
NIP
SETGLOB 19
; end colValue
;; delete
; expValue
;; fetch _tmp_expected_callback_sender
GETGLOB 21
;; push identifier call_id
PUSH S1
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 64
DICTUDEL
DROP
; colValue
NIP
SETGLOB 21
; end colValue
;; map.exists
;; push identifier call_id
DUP
;; push identifier _tmp_send_gas_to
GETGLOB 20
PUSHINT 64
DICTUGET
DUP
PUSHCONT {
	NIP
}
IF
PUSHCONT {
	;; map.at
	;; push identifier call_id
	DUP
	;; push identifier _tmp_send_gas_to
	GETGLOB 20
	PUSHINT 64
	DICTUGET
	THROWIFNOT 50
}
PUSHCONT {
	;; push identifier owner
	GETGLOB 14
}
IFELSE
;; decl: send_gas_to
;; delete
; expValue
;; fetch _tmp_send_gas_to
GETGLOB 20
;; push identifier call_id
PUSH S2
SWAP
; end expValue
PUSH S1
SWAP
PUSHINT 64
DICTUDEL
DROP
; colValue
NIP
SETGLOB 20
; end colValue
;; transfer()
;; push identifier send_gas_to
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function successCallback
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro gc
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function gc
;; delete
; expValue
; end expValue
NEWDICT
; colValue
SETGLOB 18
; end colValue
;; delete
; expValue
; end expValue
NEWDICT
; colValue
SETGLOB 19
; end colValue
;; delete
; expValue
; end expValue
NEWDICT
; colValue
SETGLOB 20
; end colValue
;; delete
; expValue
; end expValue
NEWDICT
; colValue
SETGLOB 21
; end colValue
;; delete
; expValue
; end expValue
NEWDICT
; colValue
SETGLOB 22
; end colValue
;; emit GarbageCollected
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x5c4f679b
ENDC
PUSHINT 0
SENDRAWMSG
; end function gc
; end modifier onlyOwner
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro on_bounce_macro
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
;; param: body
; function onBounce
ACCEPT
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
; expValue
DUP
; end expValue
LDU 32
; colValue
POP S2
; end colValue
;; decl: functionId
;; if
;; push identifier functionId
DUP
;; ==
PUSHINT 1789196393
EQUAL
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier functionId
	DUP
	;; ==
	PUSHINT 2129746131
	EQUAL
	;; short-circuiting ||
	DUP
	PUSHCONT {
		DROP
		;; push identifier functionId
		DUP
		;; ==
		PUSHINT 734032746
		EQUAL
		;; short-circuiting ||
		DUP
		PUSHCONT {
			DROP
			;; push identifier functionId
			DUP
			;; ==
			PUSHINT 1787488317
			EQUAL
		}
		IFNOT
	}
	IFNOT
}
IFNOT
PUSHCONT {
	; expValue
	PUSH S1
	; end expValue
	LDU 64
	; colValue
	POP S3
	; end colValue
	;; decl: call_id
	;; if
	;; map.exists
	;; push identifier call_id
	DUP
	;; push identifier _tmp_operations
	GETGLOB 19
	PUSHINT 64
	DICTUGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; map.exists
		;; push identifier call_id
		DUP
		;; push identifier _tmp_expected_callback_sender
		GETGLOB 21
		PUSHINT 64
		DICTUGET
		DUP
		PUSHCONT {
			NIP
		}
		IF
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; index
			;; push identifier call_id
			DUP
			;; push identifier _tmp_expected_callback_sender
			GETGLOB 21
			PUSHINT 64
			DICTUGET
			PUSHCONT {
				PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			}
			IFNOT
			;; get member sender
			GETGLOB 9
			SDEQ
		}
		IF
	}
	IF
	PUSHCONT {
		;; map.at
		;; push identifier call_id
		DUP
		;; push identifier _tmp_operations
		GETGLOB 19
		PUSHINT 64
		DICTUGET
		THROWIFNOT 50
		LDU 32
		PLDDICT
		PAIR
		INDEX 1
		PUSHINT 0
		NULL
		;; decl: op
		PUSHCONT {
			PUSH S1
			PUSH S3
			PUSHINT 32
			DICTUGET
			NULLSWAPIFNOT
			PUSHCONT {
				LDU 128
				TUPLE 2
			}
			IF
			DUP
			POP S2
			ISNULL
			NOT
		}
		PUSHCONT {
			;; get member amount
			;; push identifier op
			DUP
			INDEX 0
			; expValue
			;; fetch _balances
			GETGLOB 17
			;; get member root
			;; push identifier op
			PUSH S2
			INDEX 1
			SWAP
			PUSH2 S1, S0
			PUSHINT 267
			DICTGET
			PUSHCONT {
				PLDU 128
			}
			PUSHCONT {
				PUSHINT 0
			}
			IFELSE
			; end expValue
			BLKSWAP 1, 3
			ADD
			UFITS 128
			; colValue
			NEWC
			STU 128
			ROTREV
			PUSHINT 267
			DICTSETB
			SETGLOB 17
			; end colValue
			;; emit OperationRollback
			NEWC
			PUSHSLICE xc0000000000000000000000002_
			STSLICER
			STSLICECONST 0
			STSLICECONST 0
			STSLICECONST x70369606
			;; token_root
			;; get member root
			;; push identifier op
			PUSH S1
			INDEX 1
			STSLICER
			;; amount
			;; get member amount
			;; push identifier op
			PUSH S1
			INDEX 0
			STUR 128
			;; balance
			;; index
			;; get member root
			;; push identifier op
			PUSH S1
			INDEX 1
			;; push identifier _balances
			GETGLOB 17
			PUSHINT 267
			DICTGET
			PUSHCONT {
				PLDU 128
			}
			PUSHCONT {
				PUSHINT 0
			}
			IFELSE
			STUR 128
			;; from
			;; get member sender
			GETGLOB 9
			STSLICER
			ENDC
			PUSHINT 0
			SENDRAWMSG
			PUSH S1
			INC
			POP S2
		}
		WHILE
		BLKDROP 3
		; end for
	}
	IF
	;; end if
	;; delete
	; expValue
	;; fetch _tmp_operations
	GETGLOB 19
	;; push identifier call_id
	PUSH S1
	SWAP
	; end expValue
	PUSH S1
	SWAP
	PUSHINT 64
	DICTUDEL
	DROP
	; colValue
	NIP
	SETGLOB 19
	; end colValue
	;; delete
	; expValue
	;; fetch _tmp_expected_callback_sender
	GETGLOB 21
	;; push identifier call_id
	PUSH S1
	SWAP
	; end expValue
	PUSH S1
	SWAP
	PUSHINT 64
	DICTUDEL
	DROP
	; colValue
	NIP
	SETGLOB 21
	; end colValue
	;; map.exists
	;; push identifier call_id
	DUP
	;; push identifier _tmp_send_gas_to
	GETGLOB 20
	PUSHINT 64
	DICTUGET
	DUP
	PUSHCONT {
		NIP
	}
	IF
	PUSHCONT {
		;; index
		;; push identifier call_id
		DUP
		;; push identifier _tmp_send_gas_to
		GETGLOB 20
		PUSHINT 64
		DICTUGET
		PUSHCONT {
			PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
		}
		IFNOT
	}
	PUSHCONT {
		;; push identifier owner
		GETGLOB 14
	}
	IFELSE
	;; decl: send_gas_to
	;; delete
	; expValue
	;; fetch _tmp_send_gas_to
	GETGLOB 20
	;; push identifier call_id
	PUSH S2
	SWAP
	; end expValue
	PUSH S1
	SWAP
	PUSHINT 64
	DICTUDEL
	DROP
	; colValue
	NIP
	SETGLOB 20
	; end colValue
	;; transfer()
	;; push identifier send_gas_to
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	SENDRAWMSG
	DROP2
}
PUSHCONT {
	;; if
	;; push identifier functionId
	DUP
	;; ==
	PUSHINT 2066445604
	EQUAL
	PUSHCONT {
		;; emit ExpectedPairNotExist
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x1301b5c2
		;; pair
		;; get member sender
		GETGLOB 9
		STSLICER
		ENDC
		PUSHINT 0
		SENDRAWMSG
		; expValue
		PUSH S1
		; end expValue
		LDU 64
		; colValue
		POP S3
		; end colValue
		;; decl: call_id
		;; map.exists
		;; push identifier call_id
		DUP
		;; push identifier _tmp_send_gas_to
		GETGLOB 20
		PUSHINT 64
		DICTUGET
		DUP
		PUSHCONT {
			NIP
		}
		IF
		PUSHCONT {
			;; index
			;; push identifier call_id
			DUP
			;; push identifier _tmp_send_gas_to
			GETGLOB 20
			PUSHINT 64
			DICTUGET
			PUSHCONT {
				PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
			}
			IFNOT
		}
		PUSHCONT {
			;; push identifier owner
			GETGLOB 14
		}
		IFELSE
		;; decl: send_gas_to
		;; delete
		; expValue
		;; fetch _tmp_send_gas_to
		GETGLOB 20
		;; push identifier call_id
		PUSH S2
		SWAP
		; end expValue
		PUSH S1
		SWAP
		PUSHINT 64
		DICTUDEL
		DROP
		; colValue
		NIP
		SETGLOB 20
		; end colValue
		;; transfer()
		;; push identifier send_gas_to
		DUP
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 109
		STZEROES
		STSLICECONST 0
		STSLICECONST 0
		ENDC
		PUSHINT 128
		SENDRAWMSG
		DROP2
	}
	IF
	;; end if
}
IFELSE
;; end if
DROP
; end function onBounce
DROP
CALLREF {
	CALL $c7_to_c4$
}

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 14
GETGLOB 17
GETGLOB 18
GETGLOB 22
GETGLOB 19
REVERSE 6, 0
STSLICE
STDICT
STDICT
STDICT
STDICT
NEWC
GETGLOB 20
GETGLOB 21
XCHG s2
STDICT
STDICT
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 15
GETGLOB 16
REVERSE 9, 0
STBREF
STBREF
STSLICE
STSLICE
STU 32
STREF
STU 64
STDICT
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDMSGADDR
LDDICT
LDDICT
LDDICT
PLDDICT
SETGLOB 19
SETGLOB 22
SETGLOB 18
SETGLOB 17
SETGLOB 14
LDREFRTOS
LDDICT
PLDDICT
SETGLOB 21
SETGLOB 20
LDMSGADDR
LDMSGADDR
LDU 32
LDREF
LDU 64
PLDDICT
SETGLOB 16
SETGLOB 15
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDMSGADDR
	LDDICT
	LDDICT
	LDDICT
	PLDDICT
	SETGLOB 19
	SETGLOB 22
	SETGLOB 18
	SETGLOB 17
	SETGLOB 14
	LDREFRTOS
	LDDICT
	PLDDICT
	SETGLOB 21
	SETGLOB 20
	LDMSGADDR
	LDMSGADDR
	LDU 32
	LDREF
	LDU 64
	PLDDICT
	SETGLOB 16
	SETGLOB 15
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 10
	; init vault
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 11
	; init current_version
	PUSHINT 0
	SETGLOB 12
	; init platform_code
	NEWC
	ENDC
	SETGLOB 13
	; init owner
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init _nonce
	PUSHINT 0
	SETGLOB 15
	; init _wallets
	NEWDICT
	SETGLOB 16
	; init _balances
	NEWDICT
	SETGLOB 17
	; init _tmp_deploying_wallets
	NEWDICT
	SETGLOB 18
	; init _tmp_operations
	NEWDICT
	SETGLOB 19
	; init _tmp_send_gas_to
	NEWDICT
	SETGLOB 20
	; init _tmp_expected_callback_sender
	NEWDICT
	SETGLOB 21
	; init _tmp_withdrawals
	NEWDICT
	SETGLOB 22
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
; beg set default params for responsible func
GETGLOB 4
; bounce
TRUE
SETINDEXQ 1
; tons
PUSHINT 10000000
SETINDEXQ 2
; currency
NULL
SETINDEXQ 3
; flag
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
; end set default params for responsible func
PUSHCONT {
	PUSH S1
	LDSLICE 32
	NIP
	CALL $on_bounce_macro$
}
IFJMP
PUSH S1    ; body
SEMPTY     ; isEmpty
DUP        ; isEmpty isEmpty
PUSHCONT {
	DROP    ;
	PUSH S1 ; body
	LDU 32  ; funcId body'
	PUSH S1 ; funcId body' funcId
	EQINT 0 ; funcId body' isZero
	DUP     ; funcId body' isZero isZero
	PUSHCONT {
 		; funcId body' isZero
		BLKDROP2 2, 1; isZero
	}
	IF
}
IFNOT
; [funcId body'] doReceive
PUSHCONT {
	CALL $receive_macro$
}
IFJMP
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2 ; funcId and restSlice
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.internal-alias :main_external, -1
.internal :main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2 ; funcId and restSlice
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.macro platform_code
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xe6d44df5
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 734032746
LEQ
PUSHCONT {
	DUP
	PUSHINT 115515182
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 85855299
		EQUAL
		IFJMPREF {
			CALL $getBalances$
		}
		DUP
		PUSHINT 115515182
		EQUAL
		IFJMPREF {
			CALL $resetGas$
		}
	}
	IFJMP
	DUP
	PUSHINT 292780380
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 286467590
		EQUAL
		IFJMPREF {
			CALL $successCallback$
		}
		DUP
		PUSHINT 292780380
		EQUAL
		IFJMPREF {
			CALL $expectedWalletAddressCallback$
		}
	}
	IFJMP
	DUP
	PUSHINT 679716227
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 434871282
		EQUAL
		IFJMPREF {
			CALL $checkPairCallback$
		}
		DUP
		PUSHINT 679716227
		EQUAL
		IFJMPREF {
			CALL $withdrawLiquidity$
		}
	}
	IFJMP
	DUP
	PUSHINT 734032746
	EQUAL
	IFJMPREF {
		CALL $internalAccountTransfer$
	}
}
IFJMP
DUP
PUSHINT 1491672510
LEQ
PUSHCONT {
	DUP
	PUSHINT 766070063
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 750300460
		EQUAL
		IFJMPREF {
			CALL $withdraw$
		}
		DUP
		PUSHINT 766070063
		EQUAL
		IFJMPREF {
			CALL $getVersion$
		}
	}
	IFJMP
	DUP
	PUSHINT 1025233701
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1007066379
		EQUAL
		IFJMPREF {
			CALL $transfer$
		}
		DUP
		PUSHINT 1025233701
		EQUAL
		IFJMPREF {
			CALL $getVault$
		}
	}
	IFJMP
	DUP
	PUSHINT 1369517246
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1276365064
		EQUAL
		IFJMPREF {
			CALL $exchange$
		}
		DUP
		PUSHINT 1369517246
		EQUAL
		IFJMPREF {
			CALL $depositLiquidity$
		}
	}
	IFJMP
	DUP
	PUSHINT 1491672510
	EQUAL
	IFJMPREF {
		CALL $getWalletData$
	}
}
IFJMP
DUP
PUSHINT 1725189621
LEQ
PUSHCONT {
	DUP
	PUSHINT 1575389169
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1497440185
		EQUAL
		IFJMPREF {
			CALL $tokensReceivedCallback$
		}
		DUP
		PUSHINT 1575389169
		EQUAL
		IFJMPREF {
			CALL $getWallets$
		}
	}
	IFJMP
	DUP
	PUSHINT 1654602373
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1615843465
		EQUAL
		IFJMPREF {
			CALL $gc$
		}
		DUP
		PUSHINT 1654602373
		EQUAL
		IFJMPREF {
			CALL $internalPairTransfer$
		}
	}
	IFJMP
	DUP
	PUSHINT 1688565960
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1656985116
		EQUAL
		IFJMPREF {
			CALL $getOwner$
		}
		DUP
		PUSHINT 1688565960
		EQUAL
		IFJMPREF {
			CALL $upgrade$
		}
	}
	IFJMP
	DUP
	PUSHINT 1725189621
	EQUAL
	IFJMPREF {
		CALL $platform_code$
	}
}
IFJMP
DUP
PUSHINT 2093007669
LEQ
PUSHCONT {
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1950458398
	EQUAL
	IFJMPREF {
		CALL $getRoot$
	}
	DUP
	PUSHINT 2067098323
	EQUAL
	IFJMPREF {
		CALL $requestUpgrade$
	}
	DUP
	PUSHINT 2093007669
	EQUAL
	IFJMPREF {
		CALL $addPair$
	}
}
IFJMP
