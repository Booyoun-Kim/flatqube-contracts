.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc ../contracts/tests/TestNewOrderRoot.tsol, 37
THROW 100
.loc ../contracts/tests/TestNewOrderRoot.tsol, 0

.macro getVersion
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/tests/TestNewOrderRoot.tsol, 39
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/tests/TestNewOrderRoot.tsol, 0
CALLREF {
	CALL $getVersion_0d8e6e2c_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2913553711
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 32
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getVersion_0d8e6e2c_internal_macro
.loc ../contracts/tests/TestNewOrderRoot.tsol, 40
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
GETGLOB 12
.loc ../contracts/tests/TestNewOrderRoot.tsol, 0

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/tests/TestNewOrderRoot.tsol, 43
OVER
PUSHCONT {
	LDREF
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDREF
	LDU 32
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/tests/TestNewOrderRoot.tsol, 0
CALLREF {
	CALL $upgrade_fb9d1513_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro upgrade_fb9d1513_internal_macro
.loc ../contracts/tests/TestNewOrderRoot.tsol, 48
GETGLOB 12
ROT
EQUAL
PUSHCONT {
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 49
	GETPARAM 7
	FIRST
	DEPTH
	ADDCONST -2
	PICK
	SUB
	UFITS 128
	PUSHINT 0
	RAWRESERVE
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 50
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
}
PUSHCONT {
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 54
	GETGLOB 11
	NEWC
	STSLICE
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 55
	GETGLOB 10
	STSLICER
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 56
	GETGLOB 12
	STUR 32
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 57
	GETGLOB 13
	SWAP
	STREF
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 58
	GETGLOB 14
	SWAP
	STREF
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 61
	GETGLOB 15
	NEWC
	STSLICE
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 62
	GETGLOB 16
	STSLICER
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 63
	GETGLOB 17
	STSLICER
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 64
	STBREFR
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 67
	GETGLOB 19
	SECOND
	NEWC
	STU 128
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 68
	GETGLOB 19
	FIRST
	STUR 128
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 69
	GETGLOB 19
	THIRD
	STSLICER
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 70
	STBREFR
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 72
	PUSH S2
	SETCODE
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 73
	PUSH S2
	CTOS
	DUP
	PUSHSLICE x8adb35
	SDEQ
	PUSHCONT {
		PLDREFIDX 1
		CTOS
	}
	IF
	PLDREF
	CTOS
	BLESS
	POP C3
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 75
	ENDC
	CALLREF {
		CALL $:onCodeUpgrade$
	}
}
IFELSE
.loc ../contracts/tests/TestNewOrderRoot.tsol, 0
DROP2

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc ../contracts/tests/TestNewOrderRoot.tsol, 80
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/tests/TestNewOrderRoot.tsol, 81
CTOS
.loc ../contracts/tests/TestNewOrderRoot.tsol, 83
PUSHINT 0
.loc ../contracts/tests/TestNewOrderRoot.tsol, 84
OVER
LDMSGADDR
LDMSGADDR
LDU 32
LDU 32
POP S6
REVERSE 4, 0
SETGLOB 11
SETGLOB 10
POP S2
SETGLOB 12
.loc ../contracts/tests/TestNewOrderRoot.tsol, 91
PUSHCONT {
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 92
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 10
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 11
	PUSHINT 0
	SETGLOB 12
	PUSHREF {
	}
	SETGLOB 13
	PUSHREF {
	}
	SETGLOB 14
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 15
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 16
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 17
	PUSHREF {
	}
	SETGLOB 18
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	TRIPLE
	SETGLOB 19
	NEWDICT
	SETGLOB 20
	.loc ../contracts/tests/TestNewOrderRoot.tsol, 0
}
IFNOT
.loc ../contracts/tests/TestNewOrderRoot.tsol, 95
DUP
LDREF
POP S2
SETGLOB 13
.loc ../contracts/tests/TestNewOrderRoot.tsol, 96
DUP
LDREF
POP S2
SETGLOB 14
.loc ../contracts/tests/TestNewOrderRoot.tsol, 98
LDREFRTOS
.loc ../contracts/tests/TestNewOrderRoot.tsol, 99
LDMSGADDR
LDMSGADDR
LDMSGADDR
DROP
XCHG S2
SETGLOB 15
SETGLOB 16
SETGLOB 17
.loc ../contracts/tests/TestNewOrderRoot.tsol, 101
LDREFRTOS
NIP
.loc ../contracts/tests/TestNewOrderRoot.tsol, 102
LDU 128
LDU 128
LDMSGADDR
DROP
.loc ../contracts/tests/TestNewOrderRoot.tsol, 108
TRIPLE
SETGLOB 19
.loc ../contracts/tests/TestNewOrderRoot.tsol, 110
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/tests/TestNewOrderRoot.tsol, 112
PUSHREF {
	.blob x4e6577204f7264657220526f6f74
}
SETGLOB 18
.loc ../contracts/tests/TestNewOrderRoot.tsol, 114
GETGLOB 16
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/tests/TestNewOrderRoot.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro newFunc
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/tests/TestNewOrderRoot.tsol, 121
ENDS
.loc ../contracts/tests/TestNewOrderRoot.tsol, 0
CALLREF {
	CALL $newFunc_572bedd5_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2437043266
	STUR 130
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.globl	newFunc_572bedd5_internal
.type	newFunc_572bedd5_internal, @function
CALL $newFunc_572bedd5_internal_macro$

.macro newFunc_572bedd5_internal_macro
.loc ../contracts/tests/TestNewOrderRoot.tsol, 122
GETGLOB 18
.loc ../contracts/tests/TestNewOrderRoot.tsol, 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 32
LDREF
LDREF
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
LDU 128
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
ROLLREV 3
TRIPLE
SWAP
LDDICT
ENDS
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	PUSHREF {
	}
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	BLKPUSH 2, 0
	PUSHREF {
	}
	PUSHINT 0
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	TRIPLE
	NEWDICT
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
ROLLREV 10
NEWC
STSLICE
STU 32
STREF
STREF
ROLLREV 6
NEWC
STSLICE
ROLLREV 5
NEWC
STSLICE
ROLLREV 4
NEWC
STSLICE
STREF
SWAP
UNTRIPLE
REVERSE 4, 0
STU 128
STU 128
ROTREV
NEWC
STSLICE
STDICT
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFRET
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 289559618
EQUAL
IFJMPREF {
	CALL $newFunc$
}
DUP
PUSHINT 766070063
EQUAL
IFJMPREF {
	CALL $getVersion$
}
DUP
PUSHINT 1688565960
EQUAL
IFJMPREF {
	CALL $upgrade$
}
DUP
PUSHINT 1756716863
EQUAL
IFJMPREF {
	CALL $constructor$
}

