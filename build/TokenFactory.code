.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
; Decode storage_code_
;; decode TvmCell
LDREF
; Decode initial_owner
LDMSGADDR
ENDS
;; param: storage_code_
;; param: initial_owner
; constructor TokenFactory
ACCEPT
; expValue
; end expValue
;; push identifier storage_code_
PUSH S1
; colValue
SETGLOB 13
; end colValue
; expValue
; end expValue
;; push identifier initial_owner
DUP
; colValue
SETGLOB 14
; end colValue
; end constructor TokenFactory
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro transferOwner
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode new_owner
LDMSGADDR
ENDS
;; param: new_owner
CALLREF {
	CALL $transferOwner_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	transferOwner_internal
.type	transferOwner_internal, @function
CALL $transferOwner_internal_macro$

.macro transferOwner_internal_macro
;; param: new_owner
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function transferOwner
; expValue
; end expValue
;; push identifier new_owner
DUP
; colValue
SETGLOB 15
; end colValue
; function returnChange
;; transfer()
;; push identifier owner
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
; end function returnChange
; end function transferOwner
; end modifier onlyOwner
DROP

.macro acceptOwner
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $acceptOwner_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	acceptOwner_internal
.type	acceptOwner_internal, @function
CALL $acceptOwner_internal_macro$

.macro acceptOwner_internal_macro
; function acceptOwner
;; get member sender
GETGLOB 9
;; push identifier pending_owner
GETGLOB 15
SDEQ
THROWIFNOT 101
; expValue
; end expValue
;; push identifier pending_owner
GETGLOB 15
; colValue
SETGLOB 14
; end colValue
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; expValue
; end expValue
; colValue
SETGLOB 15
; end colValue
; function returnChange
;; transfer()
;; push identifier owner
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
; end function returnChange
; end function acceptOwner

.macro setRootCode
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode root_code_
;; decode TvmCell
LDREF
ENDS
;; param: root_code_
CALLREF {
	CALL $setRootCode_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setRootCode_internal
.type	setRootCode_internal, @function
CALL $setRootCode_internal_macro$

.macro setRootCode_internal_macro
;; param: root_code_
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function setRootCode
; expValue
; end expValue
;; push identifier root_code_
DUP
; colValue
SETGLOB 11
; end colValue
; function returnChange
;; transfer()
;; push identifier owner
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
; end function returnChange
; end function setRootCode
; end modifier onlyOwner
DROP

.macro setWalletCode
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode wallet_code_
;; decode TvmCell
LDREF
ENDS
;; param: wallet_code_
CALLREF {
	CALL $setWalletCode_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	setWalletCode_internal
.type	setWalletCode_internal, @function
CALL $setWalletCode_internal_macro$

.macro setWalletCode_internal_macro
;; param: wallet_code_
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function setWalletCode
; expValue
; end expValue
;; push identifier wallet_code_
DUP
; colValue
SETGLOB 12
; end colValue
; function returnChange
;; transfer()
;; push identifier owner
GETGLOB 14
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 64
SENDRAWMSG
; end function returnChange
; end function setWalletCode
; end modifier onlyOwner
DROP

.macro Token
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode answer_id
LDU 32
; Decode root_public_key
LDU 256
; Decode root_owner_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode name
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode symbol
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
; Decode decimals
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
ENDS
;; param: answer_id
;; param: root_public_key
;; param: root_owner_address
;; param: name
;; param: symbol
;; param: decimals
CALLREF {
	CALL $Token_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	Token_internal
.type	Token_internal, @function
CALL $Token_internal_macro$

.macro Token_internal_macro
;; param: answer_id
;; param: root_public_key
;; param: root_owner_address
;; param: name
;; param: symbol
;; param: decimals
; function Token
PUSHINT 1000000000
;; +
PUSHINT 1000000000
ADD
UFITS 128
;; decl: expecedValue
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; >=
;; push identifier expecedValue
PUSH S1
GEQ
THROWIFNOT 105
;; get member balance
GETPARAM 7
INDEX 0
;; -
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
SUB
UFITS 128
PUSHINT 2
RAWRESERVE
;; push identifier name
PUSH S3
;; push identifier symbol
PUSH S3
;; push identifier decimals
PUSH S3
;; param: name
;; param: symbol
;; param: decimals
; function _buildInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier now
NOW
NEWC
STU 256
PUSHINT 1
ROT
PUSHINT 64
DICTUSETB
;; push identifier name
PUSH S3
PUSHINT 2
ROT
PUSHINT 64
DICTUSETREF
;; push identifier symbol
PUSH S2
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
;; push identifier decimals
PUSH S1
NEWC
STU 8
PUSHINT 4
ROT
PUSHINT 64
DICTUSETB
;; push identifier wallet_code
GETGLOB 12
PUSHINT 5
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier root_code
GETGLOB 11
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildInitData
BLKDROP2 3, 1
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
;; -
PUSHINT 1000000000
SUB
UFITS 128
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
NEWC
STSLICECONST x01d53d1d
;; root_public_key_
;; push identifier root_public_key
PUSH S9
STUR 256
;; root_owner_address_
;; push identifier root_owner_address
PUSH S8
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
NIP
;; decl: tokenRoot
;; Remote call RootTokenContract.getDetails
;; push identifier tokenRoot
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x41dcd6500000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x09ef20a0
STSLICECONST x7e853e5f
ENDC
PUSHINT 0
SENDRAWMSG
;; push identifier tokenRoot
DUP
CALLREF {
	CALL $_buildStorageInitData_internal_macro$
}
DUP
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
PUSHINT 0
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST xc_
STSLICECONST 1
PUSH S2
STREFR
STSLICECONST 1
NEWC
STSLICECONST x659f6c0e
;; data
;; push identifier answer_id
PUSH S11
;; push identifier tokenRoot
PUSH S5
;; push identifier root_public_key
PUSH S12
;; push identifier root_owner_address
PUSH S12
;; push identifier name
PUSH S12
;; push identifier symbol
PUSH S12
;; push identifier decimals
PUSH S12
;; get member sender
GETGLOB 9
TUPLE 8
UNTUPLE 8
BLKSWAP 1, 8
PUSH S8
STUR 32
PUSH S7
STSLICER
PUSH S6
STUR 256
PUSH S5
STSLICER
PUSH S4
STREFR
PUSH S3
STREFR
PUSH S2
STUR 8
NEWC
PUSH S2
STSLICER
BLKDROP2 8, 2
STBREFR
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
NIP
DROP
DROP2
; end function Token
BLKDROP 6

.macro onTokenGetDetails
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode details
;; decode struct IRootTokenContractDetails details
;; decode IRootTokenContractDetails.name
LDREF
;; decode IRootTokenContractDetails.symbol
LDREF
;; decode IRootTokenContractDetails.decimals
LDU 8
;; decode IRootTokenContractDetails.wallet_code
;; decode TvmCell
LDREF
;; decode IRootTokenContractDetails.root_public_key
LDU 256
;; decode IRootTokenContractDetails.root_owner_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode IRootTokenContractDetails.total_supply
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
;; build struct IRootTokenContractDetails ss:8
BLKSWAP 7, 1
TUPLE 7
SWAP
ENDS
;; param: details
CALLREF {
	CALL $onTokenGetDetails_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onTokenGetDetails_internal
.type	onTokenGetDetails_internal, @function
CALL $onTokenGetDetails_internal_macro$

.macro onTokenGetDetails_internal_macro
;; param: details
; function onTokenGetDetails
NEWC
;; decl: b
; expValue
DUP
; end expValue
;; get member root_public_key
;; push identifier details
PUSH S2
INDEX 4
STUR 256
;; get member root_owner_address
;; push identifier details
PUSH S2
INDEX 5
STSLICER
; colValue
NIP
; end colValue
;; get member sender
GETGLOB 9
CALLREF {
	CALL $_buildStorageInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: tfStorage
;; Remote call TokenFactoryStorage.getData
;; push identifier tfStorage
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
STSLICECONST x24b22c1f
STSLICECONST x1cf1da64
;; meta
;; push identifier b
PUSH S2
ENDC
STREFR
ENDC
PUSHINT 64
SENDRAWMSG
DROP2
; end function onTokenGetDetails
DROP

.macro onStorageReadWithDetails
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode data
;; decode struct StorageData data
;; decode StorageData.answer_id
LDU 32
;; decode StorageData.pending_token
LDMSGADDR
;; decode StorageData.root_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode StorageData.root_owner_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode StorageData.name
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode StorageData.symbol
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode StorageData.decimals
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
;; decode StorageData.sender
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct StorageData ss:9
BLKSWAP 8, 1
TUPLE 8
SWAP
; Decode meta
;; decode TvmCell
LDREF
ENDS
;; param: data
;; param: meta
CALLREF {
	CALL $onStorageReadWithDetails_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onStorageReadWithDetails_internal
.type	onStorageReadWithDetails_internal, @function
CALL $onStorageReadWithDetails_internal_macro$

.macro onStorageReadWithDetails_internal_macro
;; param: data
;; param: meta
; function onStorageReadWithDetails
;; get member pending_token
;; push identifier data
PUSH S1
INDEX 1
CALLREF {
	CALL $_buildStorageInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 102
;; push identifier meta
PUSH S1
CTOS
LDU 256
;; decode address
LDMSGADDR
; colValue
DROP
SWAP
SWAP
;; decl: root_public_key
;; decl: root_owner_address
;; if
;; push identifier root_public_key
PUSH S1
;; ==
;; get member root_public_key
;; push identifier data
PUSH S5
INDEX 2
EQUAL
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier root_owner_address
	DUP
	;; get member root_owner_address
	;; push identifier data
	PUSH S5
	INDEX 3
	SDEQ
}
IF
PUSHCONT {
	;; Remote call TokenFactoryStorage.prune
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6fa13fc1
	STSLICECONST x1ff85210
	ENDC
	PUSHINT 64
	SENDRAWMSG
}
PUSHCONT {
	;; Remote call TokenFactoryStorage.prune
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x6fa13fc1
	STSLICECONST x7720e2ab
	ENDC
	PUSHINT 64
	SENDRAWMSG
}
IFELSE
;; end if
BLKDROP 3
; end function onStorageReadWithDetails
DROP2

.macro onStoragePruneNotify
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode data
;; decode struct StorageData data
;; decode StorageData.answer_id
LDU 32
;; decode StorageData.pending_token
LDMSGADDR
;; decode StorageData.root_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode StorageData.root_owner_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode StorageData.name
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode StorageData.symbol
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode StorageData.decimals
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
;; decode StorageData.sender
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct StorageData ss:9
BLKSWAP 8, 1
TUPLE 8
SWAP
ENDS
;; param: data
CALLREF {
	CALL $onStoragePruneNotify_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onStoragePruneNotify_internal
.type	onStoragePruneNotify_internal, @function
CALL $onStoragePruneNotify_internal_macro$

.macro onStoragePruneNotify_internal_macro
;; param: data
; function onStoragePruneNotify
;; get member pending_token
;; push identifier data
DUP
INDEX 1
CALLREF {
	CALL $_buildStorageInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 102
;; Remote call ITokenRootDeployedCallback.notifyTokenRootDeployed
;; get member sender
;; push identifier data
PUSH S1
INDEX 7
FALSE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
STSLICECONST x2c60fdaf
;; answer_id
;; get member answer_id
;; push identifier data
PUSH S2
INDEX 0
STUR 32
;; token_root
;; get member pending_token
;; push identifier data
PUSH S2
INDEX 1
STSLICER
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end function onStoragePruneNotify
DROP

.macro onStoragePruneReturn
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode data
;; decode struct StorageData data
;; decode StorageData.answer_id
LDU 32
;; decode StorageData.pending_token
LDMSGADDR
;; decode StorageData.root_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
;; decode StorageData.root_owner_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; decode StorageData.name
DUP
SREFS
EQINT 1
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode StorageData.symbol
DUP
SBITREFS
EQINT 1
SWAP
EQINT 0
AND
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDREF
;; decode StorageData.decimals
LDUQ 8
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 8
}
IFNOT
;; decode StorageData.sender
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
;; build struct StorageData ss:9
BLKSWAP 8, 1
TUPLE 8
SWAP
ENDS
;; param: data
CALLREF {
	CALL $onStoragePruneReturn_internal_macro$
}
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	onStoragePruneReturn_internal
.type	onStoragePruneReturn_internal, @function
CALL $onStoragePruneReturn_internal_macro$

.macro onStoragePruneReturn_internal_macro
;; param: data
; function onStoragePruneReturn
;; get member pending_token
;; push identifier data
DUP
INDEX 1
CALLREF {
	CALL $_buildStorageInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 102
;; Remote call ITokenRootDeployedCallback.notifyTokenRootNotDeployed
;; get member sender
;; push identifier data
PUSH S1
INDEX 7
FALSE
NEWC
STSLICECONST x6_
STI 1
PUSHINT 3
STZEROES
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
STSLICECONST x400134e1
;; answer_id
;; get member answer_id
;; push identifier data
PUSH S2
INDEX 0
STUR 32
;; token_root
;; get member pending_token
;; push identifier data
PUSH S2
INDEX 1
STSLICER
ENDC
PUSHINT 64
SENDRAWMSG
DROP
; end function onStoragePruneReturn
DROP

.globl	_buildStorageInitData_internal
.type	_buildStorageInitData_internal, @function
CALL $_buildStorageInitData_internal_macro$

.macro _buildStorageInitData_internal_macro
;; param: tokenRoot
; function _buildStorageInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
MYADDR
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier tokenRoot
PUSH S1
PUSHINT 2
ROT
PUSHINT 64
DICTUSET
NEWC
STDICT
ENDC
;; push identifier storage_code
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildStorageInitData
NIP

.macro upgrade
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode code
;; decode TvmCell
LDREF
ENDS
;; param: code
CALLREF {
	CALL $upgrade_internal_macro$
}
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	upgrade_internal
.type	upgrade_internal, @function
CALL $upgrade_internal_macro$

.macro upgrade_internal_macro
;; param: code
; modifier onlyOwner
;; get member sender
GETGLOB 9
;; push identifier owner
GETGLOB 14
SDEQ
THROWIFNOT 100
; function upgrade
;; get member balance
GETPARAM 7
INDEX 0
;; -
;; get member value
CALLREF {
	CALL $message_balance_macro$
}
SUB
UFITS 128
PUSHINT 2
RAWRESERVE
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier root_code
GETGLOB 11
STREFR
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier wallet_code
GETGLOB 12
STREFR
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier storage_code
GETGLOB 13
STREFR
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier owner
GETGLOB 14
STSLICER
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier pending_owner
GETGLOB 15
STSLICER
; colValue
NIP
; end colValue
;; push identifier code
PUSH S1
SETCODE
;; push identifier code
PUSH S1
CTOS
BLESS
POP c3
;; push identifier builder
DUP
ENDC
CALLREF {
	CALL $:onCodeUpgrade$
}
DROP
; end function upgrade
; end modifier onlyOwner
DROP

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
;; param: upgrade_data
; function onCodeUpgrade
; end function onCodeUpgrade
DROP
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 15
REVERSE 7, 0
STU 32
STREF
STREF
STREF
STSLICE
STSLICE
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDU 32
LDREF
LDREF
LDREF
LDMSGADDR
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDU 32
	LDREF
	LDREF
	LDREF
	LDMSGADDR
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _nonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 32
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 10
	; init root_code
	NEWC
	ENDC
	SETGLOB 11
	; init wallet_code
	NEWC
	ENDC
	SETGLOB 12
	; init storage_code
	NEWC
	ENDC
	SETGLOB 13
	; init owner
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init pending_owner
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro root_code
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xdbdbfb99
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro wallet_code
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 12
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xa29719f7
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro storage_code
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xcdac8163
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro owner
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xdf0bcfde
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro pending_owner
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xbe875120
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 485612132
LEQ
PUSHCONT {
	DUP
	PUSHINT 209702378
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 388172858
	EQUAL
	IFJMPREF {
		CALL $upgrade$
	}
	DUP
	PUSHINT 453826860
	EQUAL
	IFJMPREF {
		CALL $transferOwner$
	}
	DUP
	PUSHINT 485612132
	EQUAL
	IFJMPREF {
		CALL $onStorageReadWithDetails$
	}
}
IFJMP
DUP
PUSHINT 1303150947
LEQ
PUSHCONT {
	DUP
	PUSHINT 536367632
	EQUAL
	IFJMPREF {
		CALL $onStoragePruneNotify$
	}
	DUP
	PUSHINT 580327927
	EQUAL
	IFJMPREF {
		CALL $wallet_code$
	}
	DUP
	PUSHINT 1049055520
	EQUAL
	IFJMPREF {
		CALL $pending_owner$
	}
	DUP
	PUSHINT 1303150947
	EQUAL
	IFJMPREF {
		CALL $storage_code$
	}
}
IFJMP
DUP
PUSHINT 1690205927
LEQ
PUSHCONT {
	DUP
	PUSHINT 1541143449
	EQUAL
	IFJMPREF {
		CALL $root_code$
	}
	DUP
	PUSHINT 1590035614
	EQUAL
	IFJMPREF {
		CALL $setRootCode$
	}
	DUP
	PUSHINT 1594609630
	EQUAL
	IFJMPREF {
		CALL $owner$
	}
	DUP
	PUSHINT 1690205927
	EQUAL
	IFJMPREF {
		CALL $Token$
	}
}
IFJMP
DUP
PUSHINT 2122661471
LEQ
PUSHCONT {
	DUP
	PUSHINT 1809145905
	EQUAL
	IFJMPREF {
		CALL $acceptOwner$
	}
	DUP
	PUSHINT 1911415692
	EQUAL
	IFJMPREF {
		CALL $setWalletCode$
	}
	DUP
	PUSHINT 1998643883
	EQUAL
	IFJMPREF {
		CALL $onStoragePruneReturn$
	}
	DUP
	PUSHINT 2122661471
	EQUAL
	IFJMPREF {
		CALL $onTokenGetDetails$
	}
}
IFJMP
