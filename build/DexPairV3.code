.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
ENDS
; constructor DexPairV3
THROW 100
; end constructor DexPairV3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro receive_macro
; function receive
THROW 100
; end function receive
IFREF {
	CALL $c7_to_c4$
}

.macro fallback_macro
; function fallback
THROW 100
; end function fallback
IFREF {
	CALL $c7_to_c4$
}

.macro resetGas
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode receiver
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: receiver
; modifier onlyRoot
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 10
SDEQ
THROWIFNOT 101
; function resetGas
PUSHINT 1000000000
PUSHINT 2
RAWRESERVE
;; transfer()
;; push identifier receiver
DUP
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
; end function resetGas
; end modifier onlyRoot
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getRoot
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
;; ret param: dex_root
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function getRoot
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier root
GETGLOB 10
NIP
; end function getRoot
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xf441a21e
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getTokenRoots
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
;; ret param: left
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: right
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: lp
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function getTokenRoots
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier left_root
GETGLOB 14
;; push identifier right_root
GETGLOB 15
;; push identifier lp_root
GETGLOB 22
BLKDROP2 3, 3
; end function getTokenRoots
;; emitting 3 value(s)
PUSH S3
EQINT -1
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x9a3000e4
	PUSH S4
	STSLICER
	PUSH S3
	STSLICER
	PUSH S2
	STSLICER
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S4
	STSLICER
	PUSH S3
	STSLICER
	PUSH S2
	STSLICER
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
BLKDROP 3
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getTokenWallets
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
;; ret param: left
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: right
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: lp
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function getTokenWallets
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier left_wallet
GETGLOB 18
;; push identifier right_wallet
GETGLOB 19
;; push identifier lp_wallet
GETGLOB 17
BLKDROP2 3, 3
; end function getTokenWallets
;; emitting 3 value(s)
PUSH S3
EQINT -1
PUSHCONT {
	PUSH S5
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xedf6d3b3
	PUSH S4
	STSLICER
	PUSH S3
	STSLICER
	PUSH S2
	STSLICER
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S4
	STSLICER
	PUSH S3
	STSLICER
	PUSH S2
	STSLICER
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
BLKDROP 3
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getVersion
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
;; ret param: version
PUSHINT 0
; function getVersion
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier current_version
GETGLOB 12
NIP
; end function getVersion
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xada94d2f
	PUSH S1
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STUR 32
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getVault
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
;; ret param: dex_vault
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function getVault
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier vault
GETGLOB 11
NIP
; end function getVault
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbd1bd325
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STSLICER
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getVaultWallets
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
;; ret param: left
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; ret param: right
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
; function getVaultWallets
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier vault_left_wallet
GETGLOB 20
;; push identifier vault_right_wallet
GETGLOB 21
BLKDROP2 2, 2
; end function getVaultWallets
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xe144cd05
	PUSH S3
	STSLICER
	PUSH S2
	STSLICER
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S3
	STSLICER
	PUSH S2
	STSLICER
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro setFeeParams
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode numerator
LDU 16
; Decode denominator
LDU 16
ENDS
;; param: numerator
;; param: denominator
; modifier onlyRoot
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 10
SDEQ
THROWIFNOT 101
; function setFeeParams
; expValue
; end expValue
;; push identifier numerator
PUSH S1
; colValue
SETGLOB 26
; end colValue
; expValue
; end expValue
;; push identifier denominator
DUP
; colValue
SETGLOB 27
; end colValue
;; emit FeesParamsUpdated
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x14fbe69d
;; numerator
;; push identifier fee_numerator
GETGLOB 26
STUR 16
;; denominator
;; push identifier fee_denominator
GETGLOB 27
STUR 16
ENDC
PUSHINT 0
SENDRAWMSG
; end function setFeeParams
; end modifier onlyRoot
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getFeeParams
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
;; ret param: numerator
PUSHINT 0
;; ret param: denominator
PUSHINT 0
; function getFeeParams
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier fee_numerator
GETGLOB 26
;; push identifier fee_denominator
GETGLOB 27
BLKDROP2 2, 2
; end function getFeeParams
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xd8d86626
	PUSH S2
	STUR 16
	PUSH S1
	STUR 16
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STUR 16
	PUSH S1
	STUR 16
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro isActive
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
; function isActive
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier active
GETGLOB 16
; end function isActive
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa1adfdea
	PUSH S1
	STIR 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STIR 1
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro getBalances
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
ENDS
; function getBalances
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier lp_supply
GETGLOB 23
;; push identifier left_balance
GETGLOB 24
;; push identifier right_balance
GETGLOB 25
TUPLE 3
; end function getBalances
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x8016e728
	PUSH S1
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STUR 128
	PUSH S2
	STUR 128
	PUSH S1
	STUR 128
	BLKDROP2 3, 1
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	UNTUPLE 3
	BLKSWAP 1, 3
	PUSH S3
	STUR 128
	PUSH S2
	STUR 128
	PUSH S1
	STUR 128
	BLKDROP2 3, 1
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro buildExchangePayload
DROP
; Decode input parameters
; Decode id
LDU 64
; Decode deploy_wallet_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode expected_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: id
;; param: deploy_wallet_grams
;; param: expected_amount
; function buildExchangePayload
NEWC
;; decl: builder
; expValue
DUP
; end expValue
PUSHINT 1
STUR 8
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier id
PUSH S4
STUR 64
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier deploy_wallet_grams
PUSH S3
STUR 128
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier expected_amount
PUSH S2
STUR 128
; colValue
NIP
; end colValue
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function buildExchangePayload
BLKDROP2 3, 1
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa704dda1
	PUSH S1
	STREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro buildDepositLiquidityPayload
DROP
; Decode input parameters
; Decode id
LDU 64
; Decode deploy_wallet_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: id
;; param: deploy_wallet_grams
; function buildDepositLiquidityPayload
NEWC
;; decl: builder
; expValue
DUP
; end expValue
PUSHINT 2
STUR 8
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier id
PUSH S3
STUR 64
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier deploy_wallet_grams
PUSH S2
STUR 128
; colValue
NIP
; end colValue
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function buildDepositLiquidityPayload
BLKDROP2 2, 1
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x8dc3473e
	PUSH S1
	STREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro buildWithdrawLiquidityPayload
DROP
; Decode input parameters
; Decode id
LDU 64
; Decode deploy_wallet_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: id
;; param: deploy_wallet_grams
; function buildWithdrawLiquidityPayload
NEWC
;; decl: builder
; expValue
DUP
; end expValue
PUSHINT 3
STUR 8
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier id
PUSH S3
STUR 64
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier deploy_wallet_grams
PUSH S2
STUR 128
; colValue
NIP
; end colValue
;; return
;; push identifier builder
DUP
ENDC
NIP
; end function buildWithdrawLiquidityPayload
BLKDROP2 2, 1
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xdf86f62b
	PUSH S1
	STREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro buildCrossPairExchangePayload
DROP
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode id
LDU 64
; Decode deploy_wallet_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode expected_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode steps
DUP
SDEMPTY
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 32
LDDICT
ROTREV
PAIR
SWAP
ENDS
;; param: id
;; param: deploy_wallet_grams
;; param: expected_amount
;; param: steps
; function buildCrossPairExchangePayload
;; get member length
;; push identifier steps
DUP
INDEX 0
GTINT 0
THROWIFNOT 100
NEWC
;; decl: builder
; expValue
DUP
; end expValue
PUSHINT 4
STUR 8
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier id
PUSH S5
STUR 64
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier deploy_wallet_grams
PUSH S4
STUR 128
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; push identifier expected_amount
PUSH S3
STUR 128
; colValue
NIP
; end colValue
; expValue
DUP
; end expValue
;; get member root
;; index
PUSHINT 0
;; push identifier steps
PUSH S3
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
LDSLICE 128
NIP
STSLICER
; colValue
NIP
; end colValue
NEWC
;; decl: next_step_builder
; expValue
DUP
; end expValue
;; get member amount
;; index
;; get member length
;; push identifier steps
PUSH S3
INDEX 0
;; -
PUSHINT 1
SUB
UFITS 256
;; push identifier steps
PUSH S4
INDEX 1
PUSHINT 32
DICTUGET
THROWIFNOT 50
PLDU 128
STUR 128
; colValue
NIP
; end colValue
; for
;; get member length
;; push identifier steps
PUSH S2
INDEX 0
;; -
PUSHINT 1
SUB
UFITS 256
;; decl: i
PUSHCONT {
	;; push identifier i
	DUP
	GTINT 0
}
PUSHCONT {
	NEWC
	;; decl: current_step_builder
	; expValue
	DUP
	; end expValue
	;; get member amount
	;; index
	;; push identifier i
	PUSH S2
	;; -
	PUSHINT 1
	SUB
	UFITS 256
	;; push identifier steps
	PUSH S6
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	PLDU 128
	STUR 128
	;; get member root
	;; index
	;; push identifier i
	PUSH S2
	;; push identifier steps
	PUSH S6
	INDEX 1
	PUSHINT 32
	DICTUGET
	THROWIFNOT 50
	LDSLICE 128
	NIP
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier next_step_builder
	PUSH S3
	ENDC
	STREFR
	; colValue
	NIP
	; end colValue
	; expValue
	; end expValue
	;; push identifier current_step_builder
	DUP
	; colValue
	POP S3
	; end colValue
	DROP
	;; --
	; expValue
	; end expValue
	DEC
	UFITS 256
	; colValue
	; end colValue
}
WHILE
DROP
; end for
; expValue
PUSH S1
; end expValue
;; push identifier next_step_builder
PUSH S1
ENDC
STREFR
; colValue
POP S2
; end colValue
;; return
;; push identifier builder
PUSH S1
ENDC
BLKDROP2 2, 1
; end function buildCrossPairExchangePayload
BLKDROP2 4, 1
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x8069343a
	PUSH S1
	STREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S1
	STREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro tokensReceivedCallback
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode token_wallet
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode tokens_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode sender_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode sender_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode sender_wallet
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode original_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode 
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: token_wallet
;; param: token_root
;; param: tokens_amount
;; param: sender_public_key
;; param: sender_address
;; param: sender_wallet
;; param: original_gas_to
;; param: 
;; param: payload
; function tokensReceivedCallback
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
;; push identifier payload
DUP
CTOS
;; decl: payloadSlice
;; !
;; push identifier active
GETGLOB 16
NOT
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier payloadSlice
	DUP
	SBITS
	;; <
	PUSHINT 200
	LESS
	;; short-circuiting ||
	DUP
	PUSHCONT {
		DROP
		;; push identifier lp_supply
		GETGLOB 23
		EQINT 0
		;; short-circuiting ||
		DUP
		PUSHCONT {
			DROP
			;; push identifier tokens_amount
			PUSH S7
			;; <
			;; push identifier fee_denominator
			GETGLOB 27
			LESS
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier token_root
				PUSH S8
				;; push identifier lp_root
				GETGLOB 22
				SDEQ
				NOT
			}
			IF
		}
		IFNOT
	}
	IFNOT
}
IFNOT
;; decl: need_cancel
;; push identifier payloadSlice
PUSH S1
SREFS
;; >=
PUSHINT 1
GEQ
;; decl: notify_success
;; push identifier payloadSlice
PUSH S2
SREFS
;; >=
PUSHINT 2
GEQ
;; decl: notify_cancel
NEWC
ENDC
;; decl: empty
NEWC
ENDC
;; decl: success_payload
NEWC
ENDC
;; decl: cancel_payload
;; if
;; push identifier notify_success
PUSH S4
PUSHCONT {
	; expValue
	PUSH S6
	; end expValue
	LDREF
	; colValue
	POP S8
	; end colValue
	; expValue
	; end expValue
	; colValue
	POP S2
	; end colValue
}
IF
;; end if
;; if
;; push identifier notify_cancel
PUSH S3
PUSHCONT {
	; expValue
	PUSH S6
	; end expValue
	LDREF
	; colValue
	POP S8
	; end colValue
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
}
IF
;; end if
;; if
;; !
;; push identifier need_cancel
PUSH S5
PUSHCONT {
	; expValue
	PUSH S6
	; end expValue
	LDU 8
	LDU 64
	LDU 128
	; colValue
	POP S10
	; end colValue
	ROTREV
	ROTREV
	ROTREV
	;; decl: op
	;; decl: id
	;; decl: deploy_wallet_grams
	;; if
	;; push identifier token_root
	PUSH S17
	;; push identifier left_root
	GETGLOB 14
	SDEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier token_wallet
		PUSH S18
		;; push identifier left_wallet
		GETGLOB 18
		SDEQ
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; get member sender
			GETGLOB 9
			;; push identifier left_wallet
			GETGLOB 18
			SDEQ
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; get member value
				CALLREF {
					CALL $message_balance_macro$
				}
				;; >=
				PUSHINT 2000000000
				;; +
				;; push identifier deploy_wallet_grams
				PUSH S2
				ADD
				UFITS 128
				GEQ
			}
			IF
		}
		IF
	}
	IF
	PUSHCONT {
		;; if
		;; push identifier op
		PUSH S2
		EQINT 1
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; push identifier payloadSlice
			PUSH S9
			SBITS
			;; >=
			PUSHINT 128
			GEQ
		}
		IF
		PUSHCONT {
			; expValue
			PUSH S9
			; end expValue
			LDU 128
			; colValue
			POP S11
			; end colValue
			;; decl: expected_amount
			;; push identifier tokens_amount
			PUSH S17
			;; push identifier left_balance
			GETGLOB 24
			;; push identifier right_balance
			GETGLOB 25
			CALLREF {
				CALL $_expectedExchange_internal_macro$
			}
			SWAP
			SWAP
			;; decl: right_amount
			;; decl: left_fee
			;; if
			;; push identifier right_amount
			PUSH S1
			;; <=
			;; push identifier right_balance
			GETGLOB 25
			LEQ
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier right_amount
				PUSH S1
				;; >=
				;; push identifier expected_amount
				PUSH S3
				GEQ
				;; short-circuiting &&
				DUP
				PUSHCONT {
					DROP
					;; push identifier right_amount
					PUSH S1
					GTINT 0
				}
				IF
			}
			IF
			PUSHCONT {
				;; push identifier tokens_amount
				PUSH S19
				; expValue
				;; fetch left_balance
				GETGLOB 24
				; end expValue
				SWAP
				ADD
				UFITS 128
				; colValue
				SETGLOB 24
				; end colValue
				;; push identifier right_amount
				PUSH S1
				; expValue
				;; fetch right_balance
				GETGLOB 25
				; end expValue
				SWAP
				SUB
				UFITS 128
				; colValue
				SETGLOB 25
				; end colValue
				;; emit ExchangeLeftToRight
				NEWC
				PUSHSLICE xc0000000000000000000000002_
				STSLICER
				STSLICECONST 0
				STSLICECONST 0
				STSLICECONST x2d589b1b
				;; left
				;; push identifier tokens_amount
				PUSH S20
				STUR 128
				;; fee
				;; push identifier left_fee
				PUSH S1
				STUR 128
				;; right
				;; push identifier right_amount
				PUSH S2
				STUR 128
				ENDC
				PUSHINT 0
				SENDRAWMSG
				;; if
				;; get member value
				;; push identifier sender_address
				PUSH S17
				PARSEMSGADDR
				INDEX 3
				PLDU 256
				PUSHCONT {
					;; Remote call IDexPairOperationCallback.dexPairExchangeSuccess
					;; push identifier sender_address
					PUSH S17
					NEWC
					STSLICECONST x62_
					STSLICE
					PUSHSLICE x10a000000000000000000000000004_
					STSLICER
					STSLICECONST 0
					STSLICECONST 0
					STSLICECONST x04e34150
					;; id
					;; push identifier id
					PUSH S5
					STUR 64
					;; via_account
					FALSE
					STIR 1
					;; result
					TRUE
					;; push identifier tokens_amount
					PUSH S21
					;; push identifier left_fee
					PUSH S3
					;; push identifier right_amount
					PUSH S5
					TUPLE 4
					UNTUPLE 4
					BLKSWAP 1, 4
					PUSH S4
					STIR 1
					PUSH S3
					STUR 128
					PUSH S2
					STUR 128
					PUSH S1
					STUR 128
					BLKDROP2 4, 1
					ENDC
					PUSHINT 1
					;; +
					PUSHINT 2
					ADD
					UFITS 8
					SENDRAWMSG
				}
				IF
				;; end if
				;; Remote call IDexVault.transfer
				PUSHINT 500000000
				;; +
				;; push identifier deploy_wallet_grams
				PUSH S4
				ADD
				UFITS 128
				;; push identifier vault
				GETGLOB 11
				NEWC
				STSLICECONST x62_
				STSLICE
				SWAP
				STGRAMS
				PUSHINT 105
				STZEROES
				STSLICECONST 0
				STSLICECONST 1
				NEWC
				STSLICECONST x0635c6a0
				;; amount
				;; push identifier right_amount
				PUSH S3
				STUR 128
				;; token_root
				;; push identifier right_root
				GETGLOB 15
				STSLICER
				;; vault_wallet
				;; push identifier vault_right_wallet
				GETGLOB 21
				STSLICER
				;; recipient_public_key
				;; push identifier sender_public_key
				PUSH S20
				STUR 256
				NEWC
				;; recipient_address
				;; push identifier sender_address
				PUSH S20
				STSLICER
				;; deploy_wallet_grams
				;; push identifier deploy_wallet_grams
				PUSH S6
				STUR 128
				;; notify_receiver
				;; push identifier notify_success
				PUSH S13
				STIR 1
				;; payload
				;; push identifier success_payload
				PUSH S10
				STREFR
				;; left_root
				;; push identifier left_root
				GETGLOB 14
				STSLICER
				NEWC
				;; right_root
				;; push identifier right_root
				GETGLOB 15
				STSLICER
				;; pair_version
				;; push identifier current_version
				GETGLOB 12
				STUR 32
				;; send_gas_to
				;; push identifier original_gas_to
				PUSH S19
				STSLICER
				STBREFR
				STBREFR
				STBREFR
				ENDC
				PUSHINT 1
				SENDRAWMSG
				;; Remote call ITONTokenWallet.transferToRecipient
				;; push identifier token_wallet
				PUSH S21
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHINT 109
				STZEROES
				STSLICECONST 0
				STSLICECONST 1
				NEWC
				STSLICECONST x3f10d1ab
				;; recipient_public_key
				PUSHINT 0
				STUR 256
				;; recipient_address
				;; push identifier vault
				GETGLOB 11
				STSLICER
				;; tokens
				;; push identifier tokens_amount
				PUSH S21
				STUR 128
				;; deploy_grams
				PUSHINT 0
				STUR 128
				;; transfer_grams
				PUSHINT 0
				STUR 128
				NEWC
				;; send_gas_to
				;; push identifier original_gas_to
				PUSH S18
				STSLICER
				;; notify_receiver
				TRUE
				STIR 1
				;; payload
				;; push identifier empty
				PUSH S11
				STREFR
				STBREFR
				STBREFR
				ENDC
				PUSHINT 128
				SENDRAWMSG
			}
			PUSHCONT {
				; expValue
				; end expValue
				TRUE
				; colValue
				POP S12
				; end colValue
			}
			IFELSE
			;; end if
			BLKDROP 3
		}
		PUSHCONT {
			;; if
			;; push identifier op
			PUSH S2
			EQINT 2
			PUSHCONT {
				;; push identifier tokens_amount
				PUSH S16
				PUSHINT 0
				TRUE
				CALLREF {
					CALL $_expectedDepositLiquidity_internal_macro$
				}
				;; decl: r
				;; if
				;; get member step_3_lp_reward
				;; push identifier r
				DUP
				INDEX 10
				GTINT 0
				;; short-circuiting &&
				DUP
				PUSHCONT {
					DROP
					;; get member step_2_received
					;; push identifier r
					DUP
					INDEX 7
					;; <=
					;; push identifier right_balance
					GETGLOB 25
					LEQ
				}
				IF
				PUSHCONT {
					; expValue
					; end expValue
					;; push identifier lp_supply
					GETGLOB 23
					;; +
					;; get member step_3_lp_reward
					;; push identifier r
					PUSH S1
					INDEX 10
					ADD
					UFITS 128
					; colValue
					SETGLOB 23
					; end colValue
					;; push identifier tokens_amount
					PUSH S17
					; expValue
					;; fetch left_balance
					GETGLOB 24
					; end expValue
					SWAP
					ADD
					UFITS 128
					; colValue
					SETGLOB 24
					; end colValue
					;; emit ExchangeLeftToRight
					NEWC
					PUSHSLICE xc0000000000000000000000002_
					STSLICER
					STSLICECONST 0
					STSLICECONST 0
					STSLICECONST x2d589b1b
					;; left
					;; get member step_2_spent
					;; push identifier r
					PUSH S1
					INDEX 5
					STUR 128
					;; fee
					;; get member step_2_fee
					;; push identifier r
					PUSH S1
					INDEX 6
					STUR 128
					;; right
					;; get member step_2_received
					;; push identifier r
					PUSH S1
					INDEX 7
					STUR 128
					ENDC
					PUSHINT 0
					SENDRAWMSG
					;; emit DepositLiquidity
					NEWC
					PUSHSLICE xc0000000000000000000000002_
					STSLICER
					STSLICECONST 0
					STSLICECONST 0
					STSLICECONST x56cf721f
					;; left
					;; get member step_3_left_deposit
					;; push identifier r
					PUSH S1
					INDEX 8
					STUR 128
					;; right
					;; get member step_3_right_deposit
					;; push identifier r
					PUSH S1
					INDEX 9
					STUR 128
					;; lp
					;; get member step_3_lp_reward
					;; push identifier r
					PUSH S1
					INDEX 10
					STUR 128
					ENDC
					PUSHINT 0
					SENDRAWMSG
					;; if
					;; get member value
					;; push identifier sender_address
					PUSH S15
					PARSEMSGADDR
					INDEX 3
					PLDU 256
					PUSHCONT {
						;; Remote call IDexPairOperationCallback.dexPairDepositLiquiditySuccess
						;; push identifier sender_address
						PUSH S15
						NEWC
						STSLICECONST x62_
						STSLICE
						PUSHSLICE x114000000000000000000000000004_
						STSLICER
						STSLICECONST 0
						STSLICECONST 1
						NEWC
						STSLICECONST x5cb9d05d
						;; id
						;; push identifier id
						PUSH S4
						STUR 64
						;; via_account
						FALSE
						STIR 1
						;; result
						;; push identifier r
						PUSH S2
						UNTUPLE 11
						BLKSWAP 1, 11
						PUSH S11
						STUR 128
						PUSH S10
						STUR 128
						PUSH S9
						STUR 128
						PUSH S8
						STIR 1
						PUSH S7
						STIR 1
						PUSH S6
						STUR 128
						PUSH S5
						STUR 128
						PUSH S4
						STUR 128
						PUSH S3
						STUR 128
						NEWC
						PUSH S3
						STUR 128
						PUSH S2
						STUR 128
						BLKDROP2 11, 2
						STBREFR
						STBREFR
						ENDC
						PUSHINT 1
						;; +
						PUSHINT 2
						ADD
						UFITS 8
						SENDRAWMSG
					}
					IF
					;; end if
					;; Remote call IRootTokenContract.deployWallet
					PUSHINT 500000000
					;; +
					;; push identifier deploy_wallet_grams
					PUSH S2
					ADD
					UFITS 128
					;; push identifier lp_root
					GETGLOB 22
					NEWC
					STSLICECONST x62_
					STSLICE
					SWAP
					STGRAMS
					PUSHINT 105
					STZEROES
					STSLICECONST 0
					STSLICECONST 1
					NEWC
					STSLICECONST x66211c6f
					;; tokens
					;; get member step_3_lp_reward
					;; push identifier r
					PUSH S2
					INDEX 10
					STUR 128
					;; deploy_grams
					;; push identifier deploy_wallet_grams
					PUSH S3
					STUR 128
					;; wallet_public_key
					;; push identifier sender_public_key
					PUSH S18
					STUR 256
					;; owner_address
					;; push identifier sender_address
					PUSH S17
					STSLICER
					NEWC
					;; gas_back_address
					;; push identifier original_gas_to
					PUSH S16
					STSLICER
					STBREFR
					STBREFR
					ENDC
					PUSHINT 1
					SENDRAWMSG
					;; Remote call ITONTokenWallet.transferToRecipient
					;; push identifier token_wallet
					PUSH S19
					NEWC
					STSLICECONST x62_
					STSLICE
					PUSHINT 109
					STZEROES
					STSLICECONST 0
					STSLICECONST 1
					NEWC
					STSLICECONST x3f10d1ab
					;; recipient_public_key
					PUSHINT 0
					STUR 256
					;; recipient_address
					;; push identifier vault
					GETGLOB 11
					STSLICER
					;; tokens
					;; push identifier tokens_amount
					PUSH S19
					STUR 128
					;; deploy_grams
					PUSHINT 0
					STUR 128
					;; transfer_grams
					PUSHINT 0
					STUR 128
					NEWC
					;; send_gas_to
					;; push identifier original_gas_to
					PUSH S16
					STSLICER
					;; notify_receiver
					TRUE
					STIR 1
					;; payload
					;; push identifier empty
					PUSH S9
					STREFR
					STBREFR
					STBREFR
					ENDC
					PUSHINT 128
					SENDRAWMSG
				}
				PUSHCONT {
					; expValue
					; end expValue
					TRUE
					; colValue
					POP S10
					; end colValue
				}
				IFELSE
				;; end if
				DROP
			}
			PUSHCONT {
				;; if
				;; push identifier op
				PUSH S2
				EQINT 4
				;; short-circuiting &&
				DUP
				PUSHCONT {
					DROP
					;; push identifier payloadSlice
					PUSH S9
					SBITS
					;; >=
					PUSHINT 395
					GEQ
					;; push identifier notify_success
					PUSH S8
					AND
					;; short-circuiting &&
					DUP
					PUSHCONT {
						DROP
						;; push identifier success_payload
						PUSH S4
						CTOS
						SBITS
						;; >=
						PUSHINT 128
						GEQ
					}
					IF
				}
				IF
				PUSHCONT {
					; expValue
					PUSH S9
					; end expValue
					LDU 128
					;; decode address
					LDMSGADDR
					; colValue
					POP S12
					; end colValue
					SWAP
					SWAP
					;; decl: expected_amount
					;; decl: next_token_root
					;; push identifier tokens_amount
					PUSH S18
					;; push identifier left_balance
					GETGLOB 24
					;; push identifier right_balance
					GETGLOB 25
					CALLREF {
						CALL $_expectedExchange_internal_macro$
					}
					SWAP
					SWAP
					;; decl: right_amount
					;; decl: left_fee
					;; if
					;; push identifier right_amount
					PUSH S1
					;; <=
					;; push identifier right_balance
					GETGLOB 25
					LEQ
					;; short-circuiting &&
					DUP
					PUSHCONT {
						DROP
						;; push identifier right_amount
						PUSH S1
						;; >=
						;; push identifier expected_amount
						PUSH S4
						GEQ
						;; short-circuiting &&
						DUP
						PUSHCONT {
							DROP
							;; push identifier right_amount
							PUSH S1
							GTINT 0
							;; short-circuiting &&
							DUP
							PUSHCONT {
								DROP
								;; get member value
								;; push identifier next_token_root
								PUSH S2
								PARSEMSGADDR
								INDEX 3
								PLDU 256
								NEQINT 0
								;; short-circuiting &&
								DUP
								PUSHCONT {
									DROP
									;; push identifier next_token_root
									PUSH S2
									;; push identifier right_root
									GETGLOB 15
									SDEQ
									NOT
									;; short-circuiting &&
									DUP
									PUSHCONT {
										DROP
										;; push identifier next_token_root
										PUSH S2
										;; push identifier left_root
										GETGLOB 14
										SDEQ
										NOT
									}
									IF
								}
								IF
							}
							IF
						}
						IF
					}
					IF
					PUSHCONT {
						;; push identifier tokens_amount
						PUSH S20
						; expValue
						;; fetch left_balance
						GETGLOB 24
						; end expValue
						SWAP
						ADD
						UFITS 128
						; colValue
						SETGLOB 24
						; end colValue
						;; push identifier right_amount
						PUSH S1
						; expValue
						;; fetch right_balance
						GETGLOB 25
						; end expValue
						SWAP
						SUB
						UFITS 128
						; colValue
						SETGLOB 25
						; end colValue
						;; emit ExchangeLeftToRight
						NEWC
						PUSHSLICE xc0000000000000000000000002_
						STSLICER
						STSLICECONST 0
						STSLICECONST 0
						STSLICECONST x2d589b1b
						;; left
						;; push identifier tokens_amount
						PUSH S21
						STUR 128
						;; fee
						;; push identifier left_fee
						PUSH S1
						STUR 128
						;; right
						;; push identifier right_amount
						PUSH S2
						STUR 128
						ENDC
						PUSHINT 0
						SENDRAWMSG
						;; if
						;; get member value
						;; push identifier sender_address
						PUSH S18
						PARSEMSGADDR
						INDEX 3
						PLDU 256
						PUSHCONT {
							;; Remote call IDexPairOperationCallback.dexPairExchangeSuccess
							;; push identifier sender_address
							PUSH S18
							NEWC
							STSLICECONST x62_
							STSLICE
							PUSHSLICE x128000000000000000000000000004_
							STSLICER
							STSLICECONST 0
							STSLICECONST 0
							STSLICECONST x04e34150
							;; id
							;; push identifier id
							PUSH S6
							STUR 64
							;; via_account
							FALSE
							STIR 1
							;; result
							TRUE
							;; push identifier tokens_amount
							PUSH S22
							;; push identifier left_fee
							PUSH S3
							;; push identifier right_amount
							PUSH S5
							TUPLE 4
							UNTUPLE 4
							BLKSWAP 1, 4
							PUSH S4
							STIR 1
							PUSH S3
							STUR 128
							PUSH S2
							STUR 128
							PUSH S1
							STUR 128
							BLKDROP2 4, 1
							ENDC
							PUSHINT 1
							;; +
							PUSHINT 2
							ADD
							UFITS 8
							SENDRAWMSG
						}
						IF
						;; end if
						;; Remote call ITONTokenWallet.transferToRecipient
						;; push identifier token_wallet
						PUSH S22
						NEWC
						STSLICECONST x62_
						STSLICE
						PUSHSLICE x40bebc200000000000000000000000000004_
						STSLICER
						STSLICECONST 0
						STSLICECONST 1
						NEWC
						STSLICECONST x3f10d1ab
						;; recipient_public_key
						PUSHINT 0
						STUR 256
						;; recipient_address
						;; push identifier vault
						GETGLOB 11
						STSLICER
						;; tokens
						;; push identifier tokens_amount
						PUSH S22
						STUR 128
						;; deploy_grams
						PUSHINT 0
						STUR 128
						;; transfer_grams
						PUSHINT 0
						STUR 128
						NEWC
						;; send_gas_to
						;; push identifier original_gas_to
						PUSH S19
						STSLICER
						;; notify_receiver
						TRUE
						STIR 1
						;; payload
						;; push identifier empty
						PUSH S12
						STREFR
						STBREFR
						STBREFR
						ENDC
						PUSHINT 1
						SENDRAWMSG
						;; push identifier right_root
						GETGLOB 15
						;; push identifier next_token_root
						PUSH S3
						CALLREF {
							CALL $_expectedPairAddress_internal_macro$
						}
						;; decl: next_pair
						;; Remote call IDexPairV2.crossPairExchange
						;; push identifier next_pair
						DUP
						NEWC
						STSLICECONST x62_
						STSLICE
						PUSHINT 109
						STZEROES
						STSLICECONST 0
						STSLICECONST 1
						NEWC
						STSLICECONST x2e3effc7
						;; id
						;; push identifier id
						PUSH S8
						STUR 64
						;; prev_pair_version
						;; push identifier current_version
						GETGLOB 12
						STUR 32
						;; prev_pair_left_root
						;; push identifier left_root
						GETGLOB 14
						STSLICER
						;; prev_pair_right_root
						;; push identifier right_root
						GETGLOB 15
						STSLICER
						NEWC
						;; spent_token_root
						;; push identifier right_root
						GETGLOB 15
						STSLICER
						;; spent_amount
						;; push identifier right_amount
						PUSH S5
						STUR 128
						;; sender_public_key
						;; push identifier sender_public_key
						PUSH S23
						STUR 256
						;; sender_address
						;; push identifier sender_address
						PUSH S22
						STSLICER
						NEWC
						;; original_gas_to
						;; push identifier original_gas_to
						PUSH S21
						STSLICER
						;; deploy_wallet_grams
						;; push identifier deploy_wallet_grams
						PUSH S9
						STUR 128
						;; payload
						;; push identifier success_payload
						PUSH S13
						STREFR
						STBREFR
						STBREFR
						STBREFR
						ENDC
						PUSHINT 128
						SENDRAWMSG
						DROP
					}
					PUSHCONT {
						; expValue
						; end expValue
						TRUE
						; colValue
						POP S13
						; end colValue
					}
					IFELSE
					;; end if
					BLKDROP 4
				}
				PUSHCONT {
					; expValue
					; end expValue
					TRUE
					; colValue
					POP S9
					; end colValue
				}
				IFELSE
				;; end if
			}
			IFELSE
			;; end if
		}
		IFELSE
		;; end if
	}
	PUSHCONT {
		;; if
		;; push identifier token_root
		PUSH S17
		;; push identifier right_root
		GETGLOB 15
		SDEQ
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; push identifier token_wallet
			PUSH S18
			;; push identifier right_wallet
			GETGLOB 19
			SDEQ
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; get member sender
				GETGLOB 9
				;; push identifier right_wallet
				GETGLOB 19
				SDEQ
				;; short-circuiting &&
				DUP
				PUSHCONT {
					DROP
					;; get member value
					CALLREF {
						CALL $message_balance_macro$
					}
					;; >=
					PUSHINT 2000000000
					;; +
					;; push identifier deploy_wallet_grams
					PUSH S2
					ADD
					UFITS 128
					GEQ
				}
				IF
			}
			IF
		}
		IF
		PUSHCONT {
			;; if
			;; push identifier op
			PUSH S2
			EQINT 1
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier payloadSlice
				PUSH S9
				SBITS
				;; >=
				PUSHINT 128
				GEQ
			}
			IF
			PUSHCONT {
				; expValue
				PUSH S9
				; end expValue
				LDU 128
				; colValue
				POP S11
				; end colValue
				;; decl: expected_amount
				;; push identifier tokens_amount
				PUSH S17
				;; push identifier right_balance
				GETGLOB 25
				;; push identifier left_balance
				GETGLOB 24
				CALLREF {
					CALL $_expectedExchange_internal_macro$
				}
				SWAP
				SWAP
				;; decl: left_amount
				;; decl: right_fee
				;; if
				;; push identifier left_amount
				PUSH S1
				;; <=
				;; push identifier left_balance
				GETGLOB 24
				LEQ
				;; short-circuiting &&
				DUP
				PUSHCONT {
					DROP
					;; push identifier left_amount
					PUSH S1
					;; >=
					;; push identifier expected_amount
					PUSH S3
					GEQ
					;; short-circuiting &&
					DUP
					PUSHCONT {
						DROP
						;; push identifier left_amount
						PUSH S1
						GTINT 0
					}
					IF
				}
				IF
				PUSHCONT {
					;; push identifier tokens_amount
					PUSH S19
					; expValue
					;; fetch right_balance
					GETGLOB 25
					; end expValue
					SWAP
					ADD
					UFITS 128
					; colValue
					SETGLOB 25
					; end colValue
					;; push identifier left_amount
					PUSH S1
					; expValue
					;; fetch left_balance
					GETGLOB 24
					; end expValue
					SWAP
					SUB
					UFITS 128
					; colValue
					SETGLOB 24
					; end colValue
					;; emit ExchangeRightToLeft
					NEWC
					PUSHSLICE xc0000000000000000000000002_
					STSLICER
					STSLICECONST 0
					STSLICECONST 0
					STSLICECONST x1f2c7e24
					;; right
					;; push identifier tokens_amount
					PUSH S20
					STUR 128
					;; fee
					;; push identifier right_fee
					PUSH S1
					STUR 128
					;; left
					;; push identifier left_amount
					PUSH S2
					STUR 128
					ENDC
					PUSHINT 0
					SENDRAWMSG
					;; if
					;; get member value
					;; push identifier sender_address
					PUSH S17
					PARSEMSGADDR
					INDEX 3
					PLDU 256
					PUSHCONT {
						;; Remote call IDexPairOperationCallback.dexPairExchangeSuccess
						;; push identifier sender_address
						PUSH S17
						NEWC
						STSLICECONST x62_
						STSLICE
						PUSHSLICE x10a000000000000000000000000004_
						STSLICER
						STSLICECONST 0
						STSLICECONST 0
						STSLICECONST x04e34150
						;; id
						;; push identifier id
						PUSH S5
						STUR 64
						;; via_account
						FALSE
						STIR 1
						;; result
						FALSE
						;; push identifier tokens_amount
						PUSH S21
						;; push identifier right_fee
						PUSH S3
						;; push identifier left_amount
						PUSH S5
						TUPLE 4
						UNTUPLE 4
						BLKSWAP 1, 4
						PUSH S4
						STIR 1
						PUSH S3
						STUR 128
						PUSH S2
						STUR 128
						PUSH S1
						STUR 128
						BLKDROP2 4, 1
						ENDC
						PUSHINT 1
						;; +
						PUSHINT 2
						ADD
						UFITS 8
						SENDRAWMSG
					}
					IF
					;; end if
					;; Remote call IDexVault.transfer
					PUSHINT 500000000
					;; +
					;; push identifier deploy_wallet_grams
					PUSH S4
					ADD
					UFITS 128
					;; push identifier vault
					GETGLOB 11
					NEWC
					STSLICECONST x62_
					STSLICE
					SWAP
					STGRAMS
					PUSHINT 105
					STZEROES
					STSLICECONST 0
					STSLICECONST 1
					NEWC
					STSLICECONST x0635c6a0
					;; amount
					;; push identifier left_amount
					PUSH S3
					STUR 128
					;; token_root
					;; push identifier left_root
					GETGLOB 14
					STSLICER
					;; vault_wallet
					;; push identifier vault_left_wallet
					GETGLOB 20
					STSLICER
					;; recipient_public_key
					;; push identifier sender_public_key
					PUSH S20
					STUR 256
					NEWC
					;; recipient_address
					;; push identifier sender_address
					PUSH S20
					STSLICER
					;; deploy_wallet_grams
					;; push identifier deploy_wallet_grams
					PUSH S6
					STUR 128
					;; notify_receiver
					;; push identifier notify_success
					PUSH S13
					STIR 1
					;; payload
					;; push identifier success_payload
					PUSH S10
					STREFR
					;; left_root
					;; push identifier left_root
					GETGLOB 14
					STSLICER
					NEWC
					;; right_root
					;; push identifier right_root
					GETGLOB 15
					STSLICER
					;; pair_version
					;; push identifier current_version
					GETGLOB 12
					STUR 32
					;; send_gas_to
					;; push identifier original_gas_to
					PUSH S19
					STSLICER
					STBREFR
					STBREFR
					STBREFR
					ENDC
					PUSHINT 1
					SENDRAWMSG
					;; Remote call ITONTokenWallet.transferToRecipient
					;; push identifier token_wallet
					PUSH S21
					NEWC
					STSLICECONST x62_
					STSLICE
					PUSHINT 109
					STZEROES
					STSLICECONST 0
					STSLICECONST 1
					NEWC
					STSLICECONST x3f10d1ab
					;; recipient_public_key
					PUSHINT 0
					STUR 256
					;; recipient_address
					;; push identifier vault
					GETGLOB 11
					STSLICER
					;; tokens
					;; push identifier tokens_amount
					PUSH S21
					STUR 128
					;; deploy_grams
					PUSHINT 0
					STUR 128
					;; transfer_grams
					PUSHINT 0
					STUR 128
					NEWC
					;; send_gas_to
					;; push identifier original_gas_to
					PUSH S18
					STSLICER
					;; notify_receiver
					TRUE
					STIR 1
					;; payload
					;; push identifier empty
					PUSH S11
					STREFR
					STBREFR
					STBREFR
					ENDC
					PUSHINT 128
					SENDRAWMSG
				}
				PUSHCONT {
					; expValue
					; end expValue
					TRUE
					; colValue
					POP S12
					; end colValue
				}
				IFELSE
				;; end if
				BLKDROP 3
			}
			PUSHCONT {
				;; if
				;; push identifier op
				PUSH S2
				EQINT 2
				PUSHCONT {
					PUSHINT 0
					;; push identifier tokens_amount
					PUSH S17
					TRUE
					CALLREF {
						CALL $_expectedDepositLiquidity_internal_macro$
					}
					;; decl: r
					;; if
					;; get member step_3_lp_reward
					;; push identifier r
					DUP
					INDEX 10
					GTINT 0
					;; short-circuiting &&
					DUP
					PUSHCONT {
						DROP
						;; get member step_2_received
						;; push identifier r
						DUP
						INDEX 7
						;; <=
						;; push identifier left_balance
						GETGLOB 24
						LEQ
					}
					IF
					PUSHCONT {
						; expValue
						; end expValue
						;; push identifier lp_supply
						GETGLOB 23
						;; +
						;; get member step_3_lp_reward
						;; push identifier r
						PUSH S1
						INDEX 10
						ADD
						UFITS 128
						; colValue
						SETGLOB 23
						; end colValue
						;; push identifier tokens_amount
						PUSH S17
						; expValue
						;; fetch right_balance
						GETGLOB 25
						; end expValue
						SWAP
						ADD
						UFITS 128
						; colValue
						SETGLOB 25
						; end colValue
						;; emit ExchangeRightToLeft
						NEWC
						PUSHSLICE xc0000000000000000000000002_
						STSLICER
						STSLICECONST 0
						STSLICECONST 0
						STSLICECONST x1f2c7e24
						;; right
						;; get member step_2_spent
						;; push identifier r
						PUSH S1
						INDEX 5
						STUR 128
						;; fee
						;; get member step_2_fee
						;; push identifier r
						PUSH S1
						INDEX 6
						STUR 128
						;; left
						;; get member step_2_received
						;; push identifier r
						PUSH S1
						INDEX 7
						STUR 128
						ENDC
						PUSHINT 0
						SENDRAWMSG
						;; emit DepositLiquidity
						NEWC
						PUSHSLICE xc0000000000000000000000002_
						STSLICER
						STSLICECONST 0
						STSLICECONST 0
						STSLICECONST x56cf721f
						;; left
						;; get member step_3_left_deposit
						;; push identifier r
						PUSH S1
						INDEX 8
						STUR 128
						;; right
						;; get member step_3_right_deposit
						;; push identifier r
						PUSH S1
						INDEX 9
						STUR 128
						;; lp
						;; get member step_3_lp_reward
						;; push identifier r
						PUSH S1
						INDEX 10
						STUR 128
						ENDC
						PUSHINT 0
						SENDRAWMSG
						;; if
						;; get member value
						;; push identifier sender_address
						PUSH S15
						PARSEMSGADDR
						INDEX 3
						PLDU 256
						PUSHCONT {
							;; Remote call IDexPairOperationCallback.dexPairDepositLiquiditySuccess
							;; push identifier sender_address
							PUSH S15
							NEWC
							STSLICECONST x62_
							STSLICE
							PUSHSLICE x114000000000000000000000000004_
							STSLICER
							STSLICECONST 0
							STSLICECONST 1
							NEWC
							STSLICECONST x5cb9d05d
							;; id
							;; push identifier id
							PUSH S4
							STUR 64
							;; via_account
							FALSE
							STIR 1
							;; result
							;; push identifier r
							PUSH S2
							UNTUPLE 11
							BLKSWAP 1, 11
							PUSH S11
							STUR 128
							PUSH S10
							STUR 128
							PUSH S9
							STUR 128
							PUSH S8
							STIR 1
							PUSH S7
							STIR 1
							PUSH S6
							STUR 128
							PUSH S5
							STUR 128
							PUSH S4
							STUR 128
							PUSH S3
							STUR 128
							NEWC
							PUSH S3
							STUR 128
							PUSH S2
							STUR 128
							BLKDROP2 11, 2
							STBREFR
							STBREFR
							ENDC
							PUSHINT 1
							;; +
							PUSHINT 2
							ADD
							UFITS 8
							SENDRAWMSG
						}
						IF
						;; end if
						;; Remote call IRootTokenContract.deployWallet
						PUSHINT 500000000
						;; +
						;; push identifier deploy_wallet_grams
						PUSH S2
						ADD
						UFITS 128
						;; push identifier lp_root
						GETGLOB 22
						NEWC
						STSLICECONST x62_
						STSLICE
						SWAP
						STGRAMS
						PUSHINT 105
						STZEROES
						STSLICECONST 0
						STSLICECONST 1
						NEWC
						STSLICECONST x66211c6f
						;; tokens
						;; get member step_3_lp_reward
						;; push identifier r
						PUSH S2
						INDEX 10
						STUR 128
						;; deploy_grams
						;; push identifier deploy_wallet_grams
						PUSH S3
						STUR 128
						;; wallet_public_key
						;; push identifier sender_public_key
						PUSH S18
						STUR 256
						;; owner_address
						;; push identifier sender_address
						PUSH S17
						STSLICER
						NEWC
						;; gas_back_address
						;; push identifier original_gas_to
						PUSH S16
						STSLICER
						STBREFR
						STBREFR
						ENDC
						PUSHINT 1
						SENDRAWMSG
						;; Remote call ITONTokenWallet.transferToRecipient
						;; push identifier token_wallet
						PUSH S19
						NEWC
						STSLICECONST x62_
						STSLICE
						PUSHINT 109
						STZEROES
						STSLICECONST 0
						STSLICECONST 1
						NEWC
						STSLICECONST x3f10d1ab
						;; recipient_public_key
						PUSHINT 0
						STUR 256
						;; recipient_address
						;; push identifier vault
						GETGLOB 11
						STSLICER
						;; tokens
						;; push identifier tokens_amount
						PUSH S19
						STUR 128
						;; deploy_grams
						PUSHINT 0
						STUR 128
						;; transfer_grams
						PUSHINT 0
						STUR 128
						NEWC
						;; send_gas_to
						;; push identifier original_gas_to
						PUSH S16
						STSLICER
						;; notify_receiver
						TRUE
						STIR 1
						;; payload
						;; push identifier empty
						PUSH S9
						STREFR
						STBREFR
						STBREFR
						ENDC
						PUSHINT 128
						SENDRAWMSG
					}
					PUSHCONT {
						; expValue
						; end expValue
						TRUE
						; colValue
						POP S10
						; end colValue
					}
					IFELSE
					;; end if
					DROP
				}
				PUSHCONT {
					;; if
					;; push identifier op
					PUSH S2
					EQINT 4
					;; short-circuiting &&
					DUP
					PUSHCONT {
						DROP
						;; push identifier payloadSlice
						PUSH S9
						SBITS
						;; >=
						PUSHINT 395
						GEQ
						;; push identifier notify_success
						PUSH S8
						AND
						;; short-circuiting &&
						DUP
						PUSHCONT {
							DROP
							;; push identifier success_payload
							PUSH S4
							CTOS
							SBITS
							;; >=
							PUSHINT 128
							GEQ
						}
						IF
					}
					IF
					PUSHCONT {
						; expValue
						PUSH S9
						; end expValue
						LDU 128
						;; decode address
						LDMSGADDR
						; colValue
						POP S12
						; end colValue
						SWAP
						SWAP
						;; decl: expected_amount
						;; decl: next_token_root
						;; push identifier tokens_amount
						PUSH S18
						;; push identifier right_balance
						GETGLOB 25
						;; push identifier left_balance
						GETGLOB 24
						CALLREF {
							CALL $_expectedExchange_internal_macro$
						}
						SWAP
						SWAP
						;; decl: left_amount
						;; decl: right_fee
						;; if
						;; push identifier left_amount
						PUSH S1
						;; <=
						;; push identifier left_balance
						GETGLOB 24
						LEQ
						;; short-circuiting &&
						DUP
						PUSHCONT {
							DROP
							;; push identifier left_amount
							PUSH S1
							;; >=
							;; push identifier expected_amount
							PUSH S4
							GEQ
							;; short-circuiting &&
							DUP
							PUSHCONT {
								DROP
								;; push identifier left_amount
								PUSH S1
								GTINT 0
								;; short-circuiting &&
								DUP
								PUSHCONT {
									DROP
									;; get member value
									;; push identifier next_token_root
									PUSH S2
									PARSEMSGADDR
									INDEX 3
									PLDU 256
									NEQINT 0
									;; short-circuiting &&
									DUP
									PUSHCONT {
										DROP
										;; push identifier next_token_root
										PUSH S2
										;; push identifier right_root
										GETGLOB 15
										SDEQ
										NOT
										;; short-circuiting &&
										DUP
										PUSHCONT {
											DROP
											;; push identifier next_token_root
											PUSH S2
											;; push identifier left_root
											GETGLOB 14
											SDEQ
											NOT
										}
										IF
									}
									IF
								}
								IF
							}
							IF
						}
						IF
						PUSHCONT {
							;; push identifier tokens_amount
							PUSH S20
							; expValue
							;; fetch right_balance
							GETGLOB 25
							; end expValue
							SWAP
							ADD
							UFITS 128
							; colValue
							SETGLOB 25
							; end colValue
							;; push identifier left_amount
							PUSH S1
							; expValue
							;; fetch left_balance
							GETGLOB 24
							; end expValue
							SWAP
							SUB
							UFITS 128
							; colValue
							SETGLOB 24
							; end colValue
							;; emit ExchangeRightToLeft
							NEWC
							PUSHSLICE xc0000000000000000000000002_
							STSLICER
							STSLICECONST 0
							STSLICECONST 0
							STSLICECONST x1f2c7e24
							;; right
							;; push identifier tokens_amount
							PUSH S21
							STUR 128
							;; fee
							;; push identifier right_fee
							PUSH S1
							STUR 128
							;; left
							;; push identifier left_amount
							PUSH S2
							STUR 128
							ENDC
							PUSHINT 0
							SENDRAWMSG
							;; if
							;; get member value
							;; push identifier sender_address
							PUSH S18
							PARSEMSGADDR
							INDEX 3
							PLDU 256
							PUSHCONT {
								;; Remote call IDexPairOperationCallback.dexPairExchangeSuccess
								;; push identifier sender_address
								PUSH S18
								NEWC
								STSLICECONST x62_
								STSLICE
								PUSHSLICE x128000000000000000000000000004_
								STSLICER
								STSLICECONST 0
								STSLICECONST 0
								STSLICECONST x04e34150
								;; id
								;; push identifier id
								PUSH S6
								STUR 64
								;; via_account
								FALSE
								STIR 1
								;; result
								FALSE
								;; push identifier tokens_amount
								PUSH S22
								;; push identifier right_fee
								PUSH S3
								;; push identifier left_amount
								PUSH S5
								TUPLE 4
								UNTUPLE 4
								BLKSWAP 1, 4
								PUSH S4
								STIR 1
								PUSH S3
								STUR 128
								PUSH S2
								STUR 128
								PUSH S1
								STUR 128
								BLKDROP2 4, 1
								ENDC
								PUSHINT 1
								;; +
								PUSHINT 2
								ADD
								UFITS 8
								SENDRAWMSG
							}
							IF
							;; end if
							;; Remote call ITONTokenWallet.transferToRecipient
							;; push identifier token_wallet
							PUSH S22
							NEWC
							STSLICECONST x62_
							STSLICE
							PUSHSLICE x40bebc200000000000000000000000000004_
							STSLICER
							STSLICECONST 0
							STSLICECONST 1
							NEWC
							STSLICECONST x3f10d1ab
							;; recipient_public_key
							PUSHINT 0
							STUR 256
							;; recipient_address
							;; push identifier vault
							GETGLOB 11
							STSLICER
							;; tokens
							;; push identifier tokens_amount
							PUSH S22
							STUR 128
							;; deploy_grams
							PUSHINT 0
							STUR 128
							;; transfer_grams
							PUSHINT 0
							STUR 128
							NEWC
							;; send_gas_to
							;; push identifier original_gas_to
							PUSH S19
							STSLICER
							;; notify_receiver
							TRUE
							STIR 1
							;; payload
							;; push identifier empty
							PUSH S12
							STREFR
							STBREFR
							STBREFR
							ENDC
							PUSHINT 1
							SENDRAWMSG
							;; push identifier left_root
							GETGLOB 14
							;; push identifier next_token_root
							PUSH S3
							CALLREF {
								CALL $_expectedPairAddress_internal_macro$
							}
							;; decl: next_pair
							;; Remote call IDexPairV2.crossPairExchange
							;; push identifier next_pair
							DUP
							NEWC
							STSLICECONST x62_
							STSLICE
							PUSHINT 109
							STZEROES
							STSLICECONST 0
							STSLICECONST 1
							NEWC
							STSLICECONST x2e3effc7
							;; id
							;; push identifier id
							PUSH S8
							STUR 64
							;; prev_pair_version
							;; push identifier current_version
							GETGLOB 12
							STUR 32
							;; prev_pair_left_root
							;; push identifier left_root
							GETGLOB 14
							STSLICER
							;; prev_pair_right_root
							;; push identifier right_root
							GETGLOB 15
							STSLICER
							NEWC
							;; spent_token_root
							;; push identifier left_root
							GETGLOB 14
							STSLICER
							;; spent_amount
							;; push identifier left_amount
							PUSH S5
							STUR 128
							;; sender_public_key
							;; push identifier sender_public_key
							PUSH S23
							STUR 256
							;; sender_address
							;; push identifier sender_address
							PUSH S22
							STSLICER
							NEWC
							;; original_gas_to
							;; push identifier original_gas_to
							PUSH S21
							STSLICER
							;; deploy_wallet_grams
							;; push identifier deploy_wallet_grams
							PUSH S9
							STUR 128
							;; payload
							;; push identifier success_payload
							PUSH S13
							STREFR
							STBREFR
							STBREFR
							STBREFR
							ENDC
							PUSHINT 128
							SENDRAWMSG
							DROP
						}
						PUSHCONT {
							; expValue
							; end expValue
							TRUE
							; colValue
							POP S13
							; end colValue
						}
						IFELSE
						;; end if
						BLKDROP 4
					}
					PUSHCONT {
						; expValue
						; end expValue
						TRUE
						; colValue
						POP S9
						; end colValue
					}
					IFELSE
					;; end if
				}
				IFELSE
				;; end if
			}
			IFELSE
			;; end if
		}
		PUSHCONT {
			;; if
			;; push identifier op
			PUSH S2
			EQINT 3
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier token_root
				PUSH S17
				;; push identifier lp_root
				GETGLOB 22
				SDEQ
				;; short-circuiting &&
				DUP
				PUSHCONT {
					DROP
					;; push identifier token_wallet
					PUSH S18
					;; push identifier lp_wallet
					GETGLOB 17
					SDEQ
					;; short-circuiting &&
					DUP
					PUSHCONT {
						DROP
						;; get member sender
						GETGLOB 9
						;; push identifier lp_wallet
						GETGLOB 17
						SDEQ
						;; short-circuiting &&
						DUP
						PUSHCONT {
							DROP
							;; get member value
							CALLREF {
								CALL $message_balance_macro$
							}
							;; >=
							PUSHINT 2000000000
							;; +
							PUSHINT 2
							;; *
							;; push identifier deploy_wallet_grams
							PUSH S3
							MUL
							UFITS 128
							ADD
							UFITS 128
							GEQ
						}
						IF
					}
					IF
				}
				IF
			}
			IF
			PUSHCONT {
				;; push identifier tokens_amount
				PUSH S16
				CALLREF {
					CALL $_withdrawLiquidityBase_internal_macro$
				}
				SWAP
				SWAP
				;; decl: left_back_amount
				;; decl: right_back_amount
				;; if
				;; get member value
				;; push identifier sender_address
				PUSH S16
				PARSEMSGADDR
				INDEX 3
				PLDU 256
				PUSHCONT {
					;; Remote call IDexPairOperationCallback.dexPairWithdrawSuccess
					;; push identifier sender_address
					PUSH S16
					NEWC
					STSLICECONST x62_
					STSLICE
					PUSHSLICE x11e000000000000000000000000004_
					STSLICER
					STSLICECONST 0
					STSLICECONST 0
					STSLICECONST x212aeb01
					;; id
					;; push identifier id
					PUSH S4
					STUR 64
					;; via_account
					FALSE
					STIR 1
					;; result
					;; push identifier tokens_amount
					PUSH S19
					;; push identifier left_back_amount
					PUSH S3
					;; push identifier right_back_amount
					PUSH S3
					TUPLE 3
					UNTUPLE 3
					BLKSWAP 1, 3
					PUSH S3
					STUR 128
					PUSH S2
					STUR 128
					PUSH S1
					STUR 128
					BLKDROP2 3, 1
					ENDC
					PUSHINT 1
					;; +
					PUSHINT 2
					ADD
					UFITS 8
					SENDRAWMSG
				}
				IF
				;; end if
				;; if
				;; push identifier left_back_amount
				PUSH S1
				GTINT 0
				PUSHCONT {
					;; Remote call IDexVault.transfer
					PUSHINT 500000000
					;; +
					;; push identifier deploy_wallet_grams
					PUSH S3
					ADD
					UFITS 128
					;; push identifier vault
					GETGLOB 11
					NEWC
					STSLICECONST x62_
					STSLICE
					SWAP
					STGRAMS
					PUSHINT 105
					STZEROES
					STSLICECONST 0
					STSLICECONST 1
					NEWC
					STSLICECONST x0635c6a0
					;; amount
					;; push identifier left_back_amount
					PUSH S3
					STUR 128
					;; token_root
					;; push identifier left_root
					GETGLOB 14
					STSLICER
					;; vault_wallet
					;; push identifier vault_left_wallet
					GETGLOB 20
					STSLICER
					;; recipient_public_key
					;; push identifier sender_public_key
					PUSH S19
					STUR 256
					NEWC
					;; recipient_address
					;; push identifier sender_address
					PUSH S19
					STSLICER
					;; deploy_wallet_grams
					;; push identifier deploy_wallet_grams
					PUSH S5
					STUR 128
					;; notify_receiver
					;; push identifier notify_success
					PUSH S12
					STIR 1
					;; payload
					;; push identifier success_payload
					PUSH S9
					STREFR
					;; left_root
					;; push identifier left_root
					GETGLOB 14
					STSLICER
					NEWC
					;; right_root
					;; push identifier right_root
					GETGLOB 15
					STSLICER
					;; pair_version
					;; push identifier current_version
					GETGLOB 12
					STUR 32
					;; send_gas_to
					;; push identifier original_gas_to
					PUSH S18
					STSLICER
					STBREFR
					STBREFR
					STBREFR
					ENDC
					PUSHINT 1
					SENDRAWMSG
				}
				IF
				;; end if
				;; if
				;; push identifier right_back_amount
				DUP
				GTINT 0
				PUSHCONT {
					;; Remote call IDexVault.transfer
					PUSHINT 500000000
					;; +
					;; push identifier deploy_wallet_grams
					PUSH S3
					ADD
					UFITS 128
					;; push identifier vault
					GETGLOB 11
					NEWC
					STSLICECONST x62_
					STSLICE
					SWAP
					STGRAMS
					PUSHINT 105
					STZEROES
					STSLICECONST 0
					STSLICECONST 1
					NEWC
					STSLICECONST x0635c6a0
					;; amount
					;; push identifier right_back_amount
					PUSH S2
					STUR 128
					;; token_root
					;; push identifier right_root
					GETGLOB 15
					STSLICER
					;; vault_wallet
					;; push identifier vault_right_wallet
					GETGLOB 21
					STSLICER
					;; recipient_public_key
					;; push identifier sender_public_key
					PUSH S19
					STUR 256
					NEWC
					;; recipient_address
					;; push identifier sender_address
					PUSH S19
					STSLICER
					;; deploy_wallet_grams
					;; push identifier deploy_wallet_grams
					PUSH S5
					STUR 128
					;; notify_receiver
					;; push identifier notify_success
					PUSH S12
					STIR 1
					;; payload
					;; push identifier success_payload
					PUSH S9
					STREFR
					;; left_root
					;; push identifier left_root
					GETGLOB 14
					STSLICER
					NEWC
					;; right_root
					;; push identifier right_root
					GETGLOB 15
					STSLICER
					;; pair_version
					;; push identifier current_version
					GETGLOB 12
					STUR 32
					;; send_gas_to
					;; push identifier original_gas_to
					PUSH S18
					STSLICER
					STBREFR
					STBREFR
					STBREFR
					ENDC
					PUSHINT 1
					SENDRAWMSG
				}
				IF
				;; end if
				;; Remote call IBurnableByOwnerTokenWallet.burnByOwner
				;; push identifier lp_wallet
				GETGLOB 17
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHINT 109
				STZEROES
				STSLICECONST 0
				STSLICECONST 1
				NEWC
				STSLICECONST x1047c904
				;; tokens
				;; push identifier tokens_amount
				PUSH S20
				STUR 128
				;; grams
				PUSHINT 0
				STUR 128
				;; send_gas_to
				;; push identifier original_gas_to
				PUSH S16
				STSLICER
				;; callback_address
				;; address.makeAddrStd()
				PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
				STSLICER
				;; callback_payload
				;; push identifier empty
				PUSH S9
				STREFR
				STBREFR
				ENDC
				PUSHINT 128
				SENDRAWMSG
				DROP2
			}
			PUSHCONT {
				; expValue
				; end expValue
				TRUE
				; colValue
				POP S9
				; end colValue
			}
			IFELSE
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
	BLKDROP 3
}
IFNOT
;; end if
;; if
;; push identifier need_cancel
PUSH S5
PUSHCONT {
	;; if
	;; get member value
	;; push identifier sender_address
	PUSH S11
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	PUSHCONT {
		PUSHINT 0
		;; decl: id
		;; if
		;; push identifier payload
		PUSH S8
		CTOS
		SBITS
		;; >=
		PUSHINT 72
		GEQ
		PUSHCONT {
			;; push identifier payload
			PUSH S8
			CTOS
			LDU 8
			LDU 64
			; colValue
			DROP
			SWAP
			DROP
			; expValue
			; end expValue
			; colValue
			NIP
			; end colValue
		}
		IF
		;; end if
		;; Remote call IDexPairOperationCallback.dexPairOperationCancelled
		;; push identifier sender_address
		PUSH S12
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x12c000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x0c0a1906
		;; id
		;; push identifier id
		PUSH S1
		STUR 64
		ENDC
		PUSHINT 1
		;; +
		PUSHINT 2
		ADD
		UFITS 8
		SENDRAWMSG
		DROP
	}
	IF
	;; end if
	;; Remote call ITONTokenWallet.transfer
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x4bf160e2
	;; to
	;; push identifier sender_wallet
	PUSH S12
	STSLICER
	;; tokens
	;; push identifier tokens_amount
	PUSH S15
	STUR 128
	;; grams
	PUSHINT 0
	STUR 128
	;; send_gas_to
	;; push identifier original_gas_to
	PUSH S11
	STSLICER
	;; notify_receiver
	;; push identifier notify_cancel
	PUSH S5
	STIR 1
	;; payload
	;; push identifier cancel_payload
	PUSH S2
	STREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
IF
;; end if
BLKDROP 7
; end function tokensReceivedCallback
BLKDROP 9
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro expectedDepositLiquidity
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode left_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode right_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode auto_change
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
ENDS
;; param: left_amount
;; param: right_amount
;; param: auto_change
;; ret param: retParam@0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
PUSHINT 0
TUPLE 11
; function expectedDepositLiquidity
PUSHCONT {
	;; if
	;; push identifier lp_supply
	GETGLOB 23
	EQINT 0
	PUSHCONT {
		;; return
		GETGLOB 4
		PUSHINT 0
		SETINDEXQ 2
		FALSE
		SETINDEXQ 1
		PUSHINT 64
		SETINDEXQ 4
		SETGLOB 4
		;; push identifier left_amount
		PUSH S3
		;; push identifier right_amount
		PUSH S3
		;; push identifier left_amount
		PUSH S5
		;; push identifier right_amount
		PUSH S5
		MAX
		FALSE
		FALSE
		PUSHINT 0
		PUSHINT 0
		PUSHINT 0
		PUSHINT 0
		PUSHINT 0
		PUSHINT 0
		TUPLE 11
		NIP
		RET
	}
	PUSHCONT {
		;; return
		GETGLOB 4
		PUSHINT 0
		SETINDEXQ 2
		FALSE
		SETINDEXQ 1
		PUSHINT 64
		SETINDEXQ 4
		SETGLOB 4
		;; push identifier left_amount
		PUSH S3
		;; push identifier right_amount
		PUSH S3
		;; push identifier auto_change
		PUSH S3
		CALLREF {
			CALL $_expectedDepositLiquidity_internal_macro$
		}
		NIP
		RET
	}
	CONDSEL
	JMPX
	;; end if
}
CALLX
; end function expectedDepositLiquidity
BLKDROP2 3, 1
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST xd5d19ce5
	PUSH S2
	UNTUPLE 11
	BLKSWAP 1, 11
	PUSH S11
	STUR 128
	PUSH S10
	STUR 128
	PUSH S9
	STUR 128
	PUSH S8
	STIR 1
	PUSH S7
	STIR 1
	PUSH S6
	STUR 128
	PUSH S5
	STUR 128
	PUSH S4
	STUR 128
	PUSH S3
	STUR 128
	NEWC
	PUSH S3
	STUR 128
	PUSH S2
	STUR 128
	BLKDROP2 11, 2
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	UNTUPLE 11
	BLKSWAP 1, 11
	PUSH S11
	STUR 128
	PUSH S10
	STUR 128
	PUSH S9
	STUR 128
	PUSH S8
	STIR 1
	PUSH S7
	STIR 1
	PUSH S6
	STUR 128
	PUSH S5
	STUR 128
	PUSH S4
	STUR 128
	PUSH S3
	STUR 128
	NEWC
	PUSH S3
	STUR 128
	PUSH S2
	STUR 128
	BLKDROP2 11, 2
	STBREFR
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro depositLiquidity
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode call_id
LDU 64
; Decode left_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode right_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode expected_lp_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode auto_change
LDIQ 1
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDI 1
}
IFNOT
; Decode account_owner
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode 
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: call_id
;; param: left_amount
;; param: right_amount
;; param: expected_lp_root
;; param: auto_change
;; param: account_owner
;; param: 
;; param: send_gas_to
; modifier onlyActive
;; push identifier active
GETGLOB 16
THROWIFNOT 114
; modifier onlyAccount
;; push identifier account_owner
PUSH S2
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier account_owner
PUSH S2
STSLICER
; colValue
NIP
; end colValue
PUSHINT 1
;; push identifier builder
PUSH S1
ENDC
CALLREF {
	CALL $_buildInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 105
; function depositLiquidity
;; push identifier expected_lp_root
PUSH S7
;; push identifier lp_root
GETGLOB 22
SDEQ
THROWIFNOT 113
;; push identifier lp_supply
GETGLOB 23
NEQINT 0
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier left_amount
	PUSH S9
	GTINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier right_amount
		PUSH S8
		GTINT 0
	}
	IF
}
IFNOT
THROWIFNOT 127
;; push identifier left_amount
PUSH S9
GTINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier right_amount
	PUSH S8
	GTINT 0
}
IF
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; push identifier auto_change
	PUSH S6
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier left_amount
		PUSH S9
		;; +
		;; push identifier right_amount
		PUSH S9
		ADD
		UFITS 128
		GTINT 0
	}
	IF
}
IFNOT
THROWIFNOT 116
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
PUSHINT 0
;; decl: lp_tokens_amount
;; if
;; push identifier lp_supply
GETGLOB 23
EQINT 0
PUSHCONT {
	;; push identifier left_amount
	PUSH S10
	;; push identifier right_amount
	PUSH S10
	MAX
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
	; expValue
	; end expValue
	;; push identifier left_amount
	PUSH S10
	; colValue
	SETGLOB 24
	; end colValue
	; expValue
	; end expValue
	;; push identifier right_amount
	PUSH S9
	; colValue
	SETGLOB 25
	; end colValue
	;; emit DepositLiquidity
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x56cf721f
	;; left
	;; push identifier left_amount
	PUSH S11
	STUR 128
	;; right
	;; push identifier right_amount
	PUSH S10
	STUR 128
	;; lp
	;; push identifier lp_tokens_amount
	PUSH S1
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call IDexPairOperationCallback.dexPairDepositLiquiditySuccess
	;; push identifier account_owner
	PUSH S6
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x102000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x5cb9d05d
	;; id
	;; push identifier call_id
	PUSH S13
	STUR 64
	;; via_account
	TRUE
	STIR 1
	;; result
	;; push identifier left_amount
	PUSH S12
	;; push identifier right_amount
	PUSH S12
	;; push identifier lp_tokens_amount
	PUSH S4
	FALSE
	FALSE
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	PUSHINT 0
	TUPLE 11
	UNTUPLE 11
	BLKSWAP 1, 11
	PUSH S11
	STUR 128
	PUSH S10
	STUR 128
	PUSH S9
	STUR 128
	PUSH S8
	STIR 1
	PUSH S7
	STIR 1
	PUSH S6
	STUR 128
	PUSH S5
	STUR 128
	PUSH S4
	STUR 128
	PUSH S3
	STUR 128
	NEWC
	PUSH S3
	STUR 128
	PUSH S2
	STUR 128
	BLKDROP2 11, 2
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	;; +
	PUSHINT 2
	ADD
	UFITS 8
	SENDRAWMSG
}
PUSHCONT {
	;; push identifier left_amount
	PUSH S10
	;; push identifier right_amount
	PUSH S10
	;; push identifier auto_change
	PUSH S9
	CALLREF {
		CALL $_expectedDepositLiquidity_internal_macro$
	}
	;; decl: r
	; expValue
	; end expValue
	;; get member step_1_lp_reward
	;; push identifier r
	DUP
	INDEX 2
	;; +
	;; get member step_3_lp_reward
	;; push identifier r
	PUSH S1
	INDEX 10
	ADD
	UFITS 128
	; colValue
	POP S2
	; end colValue
	;; if
	;; push identifier auto_change
	PUSH S8
	PUSHCONT {
		;; if
		;; get member step_2_right_to_left
		;; push identifier r
		DUP
		INDEX 4
		PUSHCONT {
			;; get member step_2_received
			;; push identifier r
			DUP
			INDEX 7
			;; <=
			;; push identifier left_balance
			GETGLOB 24
			;; +
			;; get member step_1_left_deposit
			;; push identifier r
			PUSH S2
			INDEX 0
			ADD
			UFITS 128
			LEQ
			THROWIFNOT 118
		}
		PUSHCONT {
			;; if
			;; get member step_2_left_to_right
			;; push identifier r
			DUP
			INDEX 3
			PUSHCONT {
				;; get member step_2_received
				;; push identifier r
				DUP
				INDEX 7
				;; <=
				;; push identifier right_balance
				GETGLOB 25
				;; +
				;; get member step_1_right_deposit
				;; push identifier r
				PUSH S2
				INDEX 1
				ADD
				UFITS 128
				LEQ
				THROWIFNOT 118
			}
			IF
			;; end if
		}
		IFELSE
		;; end if
		; expValue
		; end expValue
		;; push identifier left_balance
		GETGLOB 24
		;; +
		;; push identifier left_amount
		PUSH S12
		ADD
		UFITS 128
		; colValue
		SETGLOB 24
		; end colValue
		; expValue
		; end expValue
		;; push identifier right_balance
		GETGLOB 25
		;; +
		;; push identifier right_amount
		PUSH S11
		ADD
		UFITS 128
		; colValue
		SETGLOB 25
		; end colValue
	}
	PUSHCONT {
		; expValue
		; end expValue
		;; push identifier left_balance
		GETGLOB 24
		;; +
		;; get member step_1_left_deposit
		;; push identifier r
		PUSH S1
		INDEX 0
		ADD
		UFITS 128
		; colValue
		SETGLOB 24
		; end colValue
		; expValue
		; end expValue
		;; push identifier right_balance
		GETGLOB 25
		;; +
		;; get member step_1_right_deposit
		;; push identifier r
		PUSH S1
		INDEX 1
		ADD
		UFITS 128
		; colValue
		SETGLOB 25
		; end colValue
		;; if
		;; get member step_1_left_deposit
		;; push identifier r
		DUP
		INDEX 0
		;; <
		;; push identifier left_amount
		PUSH S12
		LESS
		PUSHCONT {
			;; Remote call IDexAccount.internalPairTransfer
			;; get member sender
			GETGLOB 9
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHSLICE x408f0d180000000000000000000000000004_
			STSLICER
			STSLICECONST 0
			STSLICECONST 1
			NEWC
			STSLICECONST x629f3a85
			;; amount
			;; push identifier left_amount
			PUSH S13
			;; -
			;; get member step_1_left_deposit
			;; push identifier r
			PUSH S3
			INDEX 0
			SUB
			UFITS 128
			STUR 128
			;; token_root
			;; push identifier left_root
			GETGLOB 14
			STSLICER
			;; sender_left_root
			;; push identifier left_root
			GETGLOB 14
			STSLICER
			NEWC
			;; sender_right_root
			;; push identifier right_root
			GETGLOB 15
			STSLICER
			;; send_gas_to
			;; push identifier send_gas_to
			PUSH S8
			STSLICER
			STBREFR
			STBREFR
			ENDC
			PUSHINT 1
			SENDRAWMSG
		}
		IF
		;; end if
		;; if
		;; get member step_1_right_deposit
		;; push identifier r
		DUP
		INDEX 1
		;; <
		;; push identifier right_amount
		PUSH S11
		LESS
		PUSHCONT {
			;; Remote call IDexAccount.internalPairTransfer
			;; get member sender
			GETGLOB 9
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHSLICE x408f0d180000000000000000000000000004_
			STSLICER
			STSLICECONST 0
			STSLICECONST 1
			NEWC
			STSLICECONST x629f3a85
			;; amount
			;; push identifier right_amount
			PUSH S12
			;; -
			;; get member step_1_right_deposit
			;; push identifier r
			PUSH S3
			INDEX 1
			SUB
			UFITS 128
			STUR 128
			;; token_root
			;; push identifier right_root
			GETGLOB 15
			STSLICER
			;; sender_left_root
			;; push identifier left_root
			GETGLOB 14
			STSLICER
			NEWC
			;; sender_right_root
			;; push identifier right_root
			GETGLOB 15
			STSLICER
			;; send_gas_to
			;; push identifier send_gas_to
			PUSH S8
			STSLICER
			STBREFR
			STBREFR
			ENDC
			PUSHINT 1
			SENDRAWMSG
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
	;; if
	;; get member step_1_lp_reward
	;; push identifier r
	DUP
	INDEX 2
	GTINT 0
	PUSHCONT {
		;; emit DepositLiquidity
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x56cf721f
		;; left
		;; get member step_1_left_deposit
		;; push identifier r
		PUSH S1
		INDEX 0
		STUR 128
		;; right
		;; get member step_1_right_deposit
		;; push identifier r
		PUSH S1
		INDEX 1
		STUR 128
		;; lp
		;; get member step_1_lp_reward
		;; push identifier r
		PUSH S1
		INDEX 2
		STUR 128
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	IF
	;; end if
	;; if
	;; get member step_2_right_to_left
	;; push identifier r
	DUP
	INDEX 4
	PUSHCONT {
		;; emit ExchangeRightToLeft
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x1f2c7e24
		;; right
		;; get member step_2_spent
		;; push identifier r
		PUSH S1
		INDEX 5
		STUR 128
		;; fee
		;; get member step_2_fee
		;; push identifier r
		PUSH S1
		INDEX 6
		STUR 128
		;; left
		;; get member step_2_received
		;; push identifier r
		PUSH S1
		INDEX 7
		STUR 128
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	PUSHCONT {
		;; if
		;; get member step_2_left_to_right
		;; push identifier r
		DUP
		INDEX 3
		PUSHCONT {
			;; emit ExchangeLeftToRight
			NEWC
			PUSHSLICE xc0000000000000000000000002_
			STSLICER
			STSLICECONST 0
			STSLICECONST 0
			STSLICECONST x2d589b1b
			;; left
			;; get member step_2_spent
			;; push identifier r
			PUSH S1
			INDEX 5
			STUR 128
			;; fee
			;; get member step_2_fee
			;; push identifier r
			PUSH S1
			INDEX 6
			STUR 128
			;; right
			;; get member step_2_received
			;; push identifier r
			PUSH S1
			INDEX 7
			STUR 128
			ENDC
			PUSHINT 0
			SENDRAWMSG
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
	;; if
	;; get member step_3_lp_reward
	;; push identifier r
	DUP
	INDEX 10
	GTINT 0
	PUSHCONT {
		;; emit DepositLiquidity
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x56cf721f
		;; left
		;; get member step_3_left_deposit
		;; push identifier r
		PUSH S1
		INDEX 8
		STUR 128
		;; right
		;; get member step_3_right_deposit
		;; push identifier r
		PUSH S1
		INDEX 9
		STUR 128
		;; lp
		;; get member step_3_lp_reward
		;; push identifier r
		PUSH S1
		INDEX 10
		STUR 128
		ENDC
		PUSHINT 0
		SENDRAWMSG
	}
	IF
	;; end if
	;; Remote call IDexPairOperationCallback.dexPairDepositLiquiditySuccess
	;; push identifier account_owner
	PUSH S7
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x102000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x5cb9d05d
	;; id
	;; push identifier call_id
	PUSH S14
	STUR 64
	;; via_account
	TRUE
	STIR 1
	;; result
	;; push identifier r
	PUSH S2
	UNTUPLE 11
	BLKSWAP 1, 11
	PUSH S11
	STUR 128
	PUSH S10
	STUR 128
	PUSH S9
	STUR 128
	PUSH S8
	STIR 1
	PUSH S7
	STIR 1
	PUSH S6
	STUR 128
	PUSH S5
	STUR 128
	PUSH S4
	STUR 128
	PUSH S3
	STUR 128
	NEWC
	PUSH S3
	STUR 128
	PUSH S2
	STUR 128
	BLKDROP2 11, 2
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	;; +
	PUSHINT 2
	ADD
	UFITS 8
	SENDRAWMSG
	DROP
}
IFELSE
;; end if
; expValue
; end expValue
;; push identifier lp_supply
GETGLOB 23
;; +
;; push identifier lp_tokens_amount
PUSH S1
ADD
UFITS 128
; colValue
SETGLOB 23
; end colValue
;; Remote call IRootTokenContract.deployWallet
PUSHINT 500000000
;; +
PUSHINT 100000000
ADD
UFITS 128
;; push identifier lp_root
GETGLOB 22
NEWC
STSLICECONST x62_
STSLICE
SWAP
STGRAMS
PUSHINT 105
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x66211c6f
;; tokens
;; push identifier lp_tokens_amount
PUSH S2
STUR 128
;; deploy_grams
PUSHINT 100000000
STUR 128
;; wallet_public_key
PUSHINT 0
STUR 256
;; owner_address
;; push identifier account_owner
PUSH S8
STSLICER
NEWC
;; gas_back_address
;; push identifier send_gas_to
PUSH S7
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
;; Remote call ISuccessCallback.successCallback
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
STSLICECONST x11132606
;; call_id
;; push identifier call_id
PUSH S12
STUR 64
ENDC
PUSHINT 128
SENDRAWMSG
DROP
; end function depositLiquidity
DROP2
DROP
; end modifier onlyAccount
; end modifier onlyActive
BLKDROP 8
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_expectedDepositLiquidity_internal
.type	_expectedDepositLiquidity_internal, @function
CALL $_expectedDepositLiquidity_internal_macro$

.macro _expectedDepositLiquidity_internal_macro
;; param: left_amount
;; param: right_amount
;; param: auto_change
; function _expectedDepositLiquidity
PUSHINT 0
;; decl: step_1_left_deposit
PUSHINT 0
;; decl: step_1_right_deposit
PUSHINT 0
;; decl: step_1_lp_reward
;; if
;; push identifier left_amount
PUSH S5
GTINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier right_amount
	PUSH S4
	GTINT 0
}
IF
PUSHCONT {
	;; push identifier left_amount
	PUSH S5
	;; push identifier left_balance
	GETGLOB 24
	;; push identifier right_amount
	PUSH S6
	;; push identifier right_balance
	GETGLOB 25
	MULDIV
	UFITS 128
	MIN
	; expValue
	; end expValue
	; colValue
	POP S3
	; end colValue
	;; push identifier right_amount
	PUSH S4
	;; push identifier right_balance
	GETGLOB 25
	;; push identifier left_amount
	PUSH S7
	;; push identifier left_balance
	GETGLOB 24
	MULDIV
	UFITS 128
	MIN
	; expValue
	; end expValue
	; colValue
	POP S2
	; end colValue
	;; push identifier step_1_right_deposit
	PUSH S1
	;; push identifier lp_supply
	GETGLOB 23
	;; push identifier right_balance
	GETGLOB 25
	MULDIV
	UFITS 128
	;; push identifier step_1_left_deposit
	PUSH S3
	;; push identifier lp_supply
	GETGLOB 23
	;; push identifier left_balance
	GETGLOB 24
	MULDIV
	UFITS 128
	MAX
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
}
IF
;; end if
;; push identifier left_amount
PUSH S5
;; -
;; push identifier step_1_left_deposit
PUSH S3
SUB
UFITS 128
;; decl: current_left_amount
;; push identifier right_amount
PUSH S5
;; -
;; push identifier step_1_right_deposit
PUSH S3
SUB
UFITS 128
;; decl: current_right_amount
;; push identifier left_balance
GETGLOB 24
;; +
;; push identifier step_1_left_deposit
PUSH S5
ADD
UFITS 128
;; decl: current_left_balance
;; push identifier right_balance
GETGLOB 25
;; +
;; push identifier step_1_right_deposit
PUSH S5
ADD
UFITS 128
;; decl: current_right_balance
;; push identifier lp_supply
GETGLOB 23
;; +
;; push identifier step_1_lp_reward
PUSH S5
ADD
UFITS 128
;; decl: current_lp_supply
FALSE
;; decl: step_2_left_to_right
FALSE
;; decl: step_2_right_to_left
PUSHINT 0
;; decl: step_2_spent
PUSHINT 0
;; decl: step_2_fee
PUSHINT 0
;; decl: step_2_received
PUSHINT 0
;; decl: step_3_left_deposit
PUSHINT 0
;; decl: step_3_right_deposit
PUSHINT 0
;; decl: step_3_lp_reward
;; push identifier fee_denominator
GETGLOB 27
;; -
;; push identifier fee_numerator
GETGLOB 26
SUB
UFITS 16
;; uint256
;; decl: fee_d_minus_n
;; push identifier fee_denominator
GETGLOB 27
;; uint256
;; decl: fee_d
;; if
;; push identifier auto_change
PUSH S18
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier current_right_amount
	PUSH S13
	GTINT 0
}
IF
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	POP S9
	; end colValue
	;; push identifier current_right_balance
	PUSH S11
	;; uint256
	;; push identifier fee_d_minus_n
	PUSH S2
	;; +
	;; push identifier fee_d
	PUSH S2
	ADD
	;; push identifier fee_d_minus_n
	PUSH S3
	MULDIV
	UFITS 256
	;; decl: p
	;; push identifier current_right_balance
	PUSH S12
	;; uint256
	;; push identifier fee_d
	PUSH S2
	;; *
	;; push identifier current_right_amount
	PUSH S16
	;; uint256
	MUL
	;; push identifier fee_d_minus_n
	PUSH S4
	MULDIV
	UFITS 256
	;; decl: q
	;; push identifier p
	PUSH S1
	;; push identifier q
	PUSH S1
	CALLREF {
		CALL $_solveQuadraticEquationPQ_internal_macro$
	}
	; expValue
	; end expValue
	; colValue
	POP S10
	; end colValue
	;; push identifier step_2_spent
	PUSH S9
	;; push identifier current_right_balance
	PUSH S14
	;; push identifier current_left_balance
	PUSH S16
	CALLREF {
		CALL $_expectedExchange_internal_macro$
	}
	SWAP
	; expValue
	; end expValue
	; colValue
	POP S9
	; end colValue
	; expValue
	; end expValue
	; colValue
	POP S9
	; end colValue
	; expValue
	; end expValue
	;; push identifier current_right_amount
	PUSH S15
	;; -
	;; push identifier step_2_spent
	PUSH S10
	SUB
	UFITS 128
	; colValue
	POP S16
	; end colValue
	; expValue
	; end expValue
	;; push identifier current_right_balance
	PUSH S13
	;; +
	;; push identifier step_2_spent
	PUSH S10
	ADD
	UFITS 128
	; colValue
	POP S14
	; end colValue
	;; if
	;; push identifier current_right_amount
	PUSH S15
	GTINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier step_2_received
		PUSH S7
		GTINT 0
	}
	IF
	PUSHCONT {
		; expValue
		; end expValue
		;; push identifier current_right_amount
		PUSH S15
		; colValue
		POP S6
		; end colValue
		; expValue
		; end expValue
		;; push identifier step_2_received
		PUSH S7
		; colValue
		POP S7
		; end colValue
		;; push identifier current_right_amount
		PUSH S15
		;; push identifier current_lp_supply
		PUSH S13
		;; push identifier current_right_balance
		PUSH S15
		MULDIV
		UFITS 128
		; expValue
		; end expValue
		; colValue
		POP S5
		; end colValue
	}
	PUSHCONT {
		; expValue
		; end expValue
		FALSE
		; colValue
		POP S11
		; end colValue
		; expValue
		; end expValue
		;; push identifier right_amount
		PUSH S21
		; colValue
		POP S19
		; end colValue
	}
	IFELSE
	;; end if
	DROP2
}
PUSHCONT {
	;; if
	;; push identifier auto_change
	PUSH S18
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier current_left_amount
		PUSH S14
		GTINT 0
	}
	IF
	PUSHCONT {
		; expValue
		; end expValue
		TRUE
		; colValue
		POP S10
		; end colValue
		;; push identifier current_left_balance
		PUSH S12
		;; uint256
		;; push identifier fee_d_minus_n
		PUSH S2
		;; +
		;; push identifier fee_d
		PUSH S2
		ADD
		;; push identifier fee_d_minus_n
		PUSH S3
		MULDIV
		UFITS 256
		;; decl: p
		;; push identifier current_left_balance
		PUSH S13
		;; uint256
		;; push identifier fee_d
		PUSH S2
		;; *
		;; push identifier current_left_amount
		PUSH S17
		;; uint256
		MUL
		;; push identifier fee_d_minus_n
		PUSH S4
		MULDIV
		UFITS 256
		;; decl: q
		;; push identifier p
		PUSH S1
		;; push identifier q
		PUSH S1
		CALLREF {
			CALL $_solveQuadraticEquationPQ_internal_macro$
		}
		; expValue
		; end expValue
		; colValue
		POP S10
		; end colValue
		;; push identifier step_2_spent
		PUSH S9
		;; push identifier current_left_balance
		PUSH S15
		;; push identifier current_right_balance
		PUSH S15
		CALLREF {
			CALL $_expectedExchange_internal_macro$
		}
		SWAP
		; expValue
		; end expValue
		; colValue
		POP S9
		; end colValue
		; expValue
		; end expValue
		; colValue
		POP S9
		; end colValue
		; expValue
		; end expValue
		;; push identifier current_left_amount
		PUSH S16
		;; -
		;; push identifier step_2_spent
		PUSH S10
		SUB
		UFITS 128
		; colValue
		POP S17
		; end colValue
		; expValue
		; end expValue
		;; push identifier current_left_balance
		PUSH S14
		;; +
		;; push identifier step_2_spent
		PUSH S10
		ADD
		UFITS 128
		; colValue
		POP S15
		; end colValue
		;; if
		;; push identifier current_left_amount
		PUSH S16
		GTINT 0
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; push identifier step_2_received
			PUSH S7
			GTINT 0
		}
		IF
		PUSHCONT {
			; expValue
			; end expValue
			;; push identifier current_left_amount
			PUSH S16
			; colValue
			POP S7
			; end colValue
			; expValue
			; end expValue
			;; push identifier step_2_received
			PUSH S7
			; colValue
			POP S6
			; end colValue
			;; push identifier current_left_amount
			PUSH S16
			;; push identifier current_lp_supply
			PUSH S13
			;; push identifier current_left_balance
			PUSH S16
			MULDIV
			UFITS 128
			; expValue
			; end expValue
			; colValue
			POP S5
			; end colValue
		}
		PUSHCONT {
			; expValue
			; end expValue
			FALSE
			; colValue
			POP S12
			; end colValue
			; expValue
			; end expValue
			;; push identifier left_amount
			PUSH S22
			; colValue
			POP S20
			; end colValue
		}
		IFELSE
		;; end if
		DROP2
	}
	IF
	;; end if
}
IFELSE
;; end if
;; return
;; push identifier step_1_left_deposit
PUSH S17
;; push identifier step_1_right_deposit
PUSH S17
;; push identifier step_1_lp_reward
PUSH S17
;; push identifier step_2_left_to_right
PUSH S12
;; push identifier step_2_right_to_left
PUSH S12
;; push identifier step_2_spent
PUSH S12
;; push identifier step_2_fee
PUSH S12
;; push identifier step_2_received
PUSH S12
;; push identifier step_3_left_deposit
PUSH S12
;; push identifier step_3_right_deposit
PUSH S12
;; push identifier step_3_lp_reward
PUSH S12
TUPLE 11
PUSHINT 18
PUSHINT 1
BLKSWX
PUSHINT 18
DROPX
; end function _expectedDepositLiquidity
BLKDROP2 3, 1

.globl	_withdrawLiquidityBase_internal
.type	_withdrawLiquidityBase_internal, @function
CALL $_withdrawLiquidityBase_internal_macro$

.macro _withdrawLiquidityBase_internal_macro
;; param: lp_amount
; function _withdrawLiquidityBase
;; push identifier left_balance
GETGLOB 24
;; push identifier lp_amount
PUSH S1
;; push identifier lp_supply
GETGLOB 23
MULDIV
UFITS 128
;; decl: left_back_amount
;; push identifier right_balance
GETGLOB 25
;; push identifier lp_amount
PUSH S2
;; push identifier lp_supply
GETGLOB 23
MULDIV
UFITS 128
;; decl: right_back_amount
;; push identifier left_back_amount
PUSH S1
; expValue
;; fetch left_balance
GETGLOB 24
; end expValue
SWAP
SUB
UFITS 128
; colValue
SETGLOB 24
; end colValue
;; push identifier right_back_amount
DUP
; expValue
;; fetch right_balance
GETGLOB 25
; end expValue
SWAP
SUB
UFITS 128
; colValue
SETGLOB 25
; end colValue
;; push identifier lp_amount
PUSH S2
; expValue
;; fetch lp_supply
GETGLOB 23
; end expValue
SWAP
SUB
UFITS 128
; colValue
SETGLOB 23
; end colValue
;; emit WithdrawLiquidity
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x0246b540
;; lp
;; push identifier lp_amount
PUSH S3
STUR 128
;; left
;; push identifier left_back_amount
PUSH S2
STUR 128
;; right
;; push identifier right_back_amount
PUSH S1
STUR 128
ENDC
PUSHINT 0
SENDRAWMSG
;; return
;; push identifier left_back_amount
PUSH S1
;; push identifier right_back_amount
PUSH S1
BLKDROP2 2, 2
; end function _withdrawLiquidityBase
BLKDROP2 1, 2

.macro expectedWithdrawLiquidity
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode lp_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
ENDS
;; param: lp_amount
;; ret param: expected_left_amount
PUSHINT 0
;; ret param: expected_right_amount
PUSHINT 0
; function expectedWithdrawLiquidity
;; push identifier left_balance
GETGLOB 24
;; push identifier lp_amount
PUSH S3
;; push identifier lp_supply
GETGLOB 23
MULDIV
UFITS 128
;; decl: left_back_amount
;; push identifier right_balance
GETGLOB 25
;; push identifier lp_amount
PUSH S4
;; push identifier lp_supply
GETGLOB 23
MULDIV
UFITS 128
;; decl: right_back_amount
;; return
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
;; push identifier left_back_amount
PUSH S1
;; push identifier right_back_amount
PUSH S1
BLKDROP2 2, 4
SWAP2
DROP2
; end function expectedWithdrawLiquidity
BLKDROP2 1, 2
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x909f3e11
	PUSH S2
	STUR 128
	PUSH S1
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STUR 128
	PUSH S1
	STUR 128
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro withdrawLiquidity
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode call_id
LDU 64
; Decode lp_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode expected_lp_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode account_owner
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode 
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: call_id
;; param: lp_amount
;; param: expected_lp_root
;; param: account_owner
;; param: 
;; param: send_gas_to
; modifier onlyActive
;; push identifier active
GETGLOB 16
THROWIFNOT 114
; modifier onlyAccount
;; push identifier account_owner
PUSH S2
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier account_owner
PUSH S2
STSLICER
; colValue
NIP
; end colValue
PUSHINT 1
;; push identifier builder
PUSH S1
ENDC
CALLREF {
	CALL $_buildInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 105
; function withdrawLiquidity
;; push identifier expected_lp_root
PUSH S6
;; push identifier lp_root
GETGLOB 22
SDEQ
THROWIFNOT 113
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
;; push identifier lp_amount
PUSH S7
CALLREF {
	CALL $_withdrawLiquidityBase_internal_macro$
}
SWAP
SWAP
;; decl: left_back_amount
;; decl: right_back_amount
;; Remote call IDexPairOperationCallback.dexPairWithdrawSuccess
;; push identifier account_owner
PUSH S7
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x103000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST x212aeb01
;; id
;; push identifier call_id
PUSH S11
STUR 64
;; via_account
TRUE
STIR 1
;; result
;; push identifier lp_amount
PUSH S10
;; push identifier left_back_amount
PUSH S3
;; push identifier right_back_amount
PUSH S3
TUPLE 3
UNTUPLE 3
BLKSWAP 1, 3
PUSH S3
STUR 128
PUSH S2
STUR 128
PUSH S1
STUR 128
BLKDROP2 3, 1
ENDC
PUSHINT 1
;; +
PUSHINT 2
ADD
UFITS 8
SENDRAWMSG
;; if
;; push identifier left_back_amount
PUSH S1
GTINT 0
PUSHCONT {
	;; Remote call IDexAccount.internalPairTransfer
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x408f0d180000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x629f3a85
	;; amount
	;; push identifier left_back_amount
	PUSH S3
	STUR 128
	;; token_root
	;; push identifier left_root
	GETGLOB 14
	STSLICER
	;; sender_left_root
	;; push identifier left_root
	GETGLOB 14
	STSLICER
	NEWC
	;; sender_right_root
	;; push identifier right_root
	GETGLOB 15
	STSLICER
	;; send_gas_to
	;; push identifier send_gas_to
	PUSH S8
	STSLICER
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
;; if
;; push identifier right_back_amount
DUP
GTINT 0
PUSHCONT {
	;; Remote call IDexAccount.internalPairTransfer
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x408f0d180000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x629f3a85
	;; amount
	;; push identifier right_back_amount
	PUSH S2
	STUR 128
	;; token_root
	;; push identifier right_root
	GETGLOB 15
	STSLICER
	;; sender_left_root
	;; push identifier left_root
	GETGLOB 14
	STSLICER
	NEWC
	;; sender_right_root
	;; push identifier right_root
	GETGLOB 15
	STSLICER
	;; send_gas_to
	;; push identifier send_gas_to
	PUSH S8
	STSLICER
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IF
;; end if
NEWC
ENDC
;; decl: empty
;; Remote call IBurnableByRootTokenRootContract.proxyBurn
;; push identifier lp_root
GETGLOB 22
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x1df868a9
;; tokens
;; push identifier lp_amount
PUSH S12
STUR 128
;; sender_address
;; push identifier vault
GETGLOB 11
STSLICER
;; send_gas_to
;; push identifier send_gas_to
PUSH S8
STSLICER
NEWC
;; callback_address
;; address.makeAddrStd()
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
STSLICER
;; callback_payload
;; push identifier empty
PUSH S3
STREFR
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
;; Remote call ISuccessCallback.successCallback
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
STSLICECONST x11132606
;; call_id
;; push identifier call_id
PUSH S12
STUR 64
ENDC
PUSHINT 128
SENDRAWMSG
BLKDROP 3
; end function withdrawLiquidity
DROP2
DROP
; end modifier onlyAccount
; end modifier onlyActive
BLKDROP 6
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro expectedExchange
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode spent_token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: amount
;; param: spent_token_root
;; ret param: expected_amount
PUSHINT 0
;; ret param: expected_fee
PUSHINT 0
; function expectedExchange
PUSHCONT {
	;; if
	FALSE ; decl return flag
	;; push identifier spent_token_root
	PUSH S3
	;; push identifier left_root
	GETGLOB 14
	SDEQ
	PUSHCONT {
		;; return
		GETGLOB 4
		PUSHINT 0
		SETINDEXQ 2
		FALSE
		SETINDEXQ 1
		PUSHINT 64
		SETINDEXQ 4
		SETGLOB 4
		;; push identifier amount
		PUSH S4
		;; push identifier left_balance
		GETGLOB 24
		;; push identifier right_balance
		GETGLOB 25
		CALLREF {
			CALL $_expectedExchange_internal_macro$
		}
		BLKDROP2 2, 3
		ROT
		DROP
		PUSHINT 4
		RET
	}
	PUSHCONT {
		;; if
		FALSE ; decl return flag
		;; push identifier spent_token_root
		PUSH S4
		;; push identifier right_root
		GETGLOB 15
		SDEQ
		PUSHCONT {
			;; return
			GETGLOB 4
			PUSHINT 0
			SETINDEXQ 2
			FALSE
			SETINDEXQ 1
			PUSHINT 64
			SETINDEXQ 4
			SETGLOB 4
			;; push identifier amount
			PUSH S5
			;; push identifier right_balance
			GETGLOB 25
			;; push identifier left_balance
			GETGLOB 24
			CALLREF {
				CALL $_expectedExchange_internal_macro$
			}
			BLKDROP2 2, 4
			SWAP2
			DROP2
			PUSHINT 4
			RET
		}
		PUSHCONT {
			THROW 112
		}
		IFELSE
		DUP
		IFRET
		DROP
		;; end if
	}
	IFELSE
	EQINT 4
	IFRET
	;; end if
}
CALLX
; end function expectedExchange
BLKDROP2 2, 2
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x920337c8
	PUSH S2
	STUR 128
	PUSH S1
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STUR 128
	PUSH S1
	STUR 128
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro expectedSpendAmount
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
; Decode input parameters
; Decode receive_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode receive_token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: receive_amount
;; param: receive_token_root
;; ret param: expected_amount
PUSHINT 0
;; ret param: expected_fee
PUSHINT 0
; function expectedSpendAmount
PUSHCONT {
	;; if
	FALSE ; decl return flag
	;; push identifier receive_token_root
	PUSH S3
	;; push identifier right_root
	GETGLOB 15
	SDEQ
	PUSHCONT {
		;; return
		GETGLOB 4
		PUSHINT 0
		SETINDEXQ 2
		FALSE
		SETINDEXQ 1
		PUSHINT 64
		SETINDEXQ 4
		SETGLOB 4
		;; push identifier receive_amount
		PUSH S4
		;; push identifier left_balance
		GETGLOB 24
		;; push identifier right_balance
		GETGLOB 25
		CALLREF {
			CALL $_expectedSpendAmount_internal_macro$
		}
		BLKDROP2 2, 3
		ROT
		DROP
		PUSHINT 4
		RET
	}
	PUSHCONT {
		;; if
		FALSE ; decl return flag
		;; push identifier receive_token_root
		PUSH S4
		;; push identifier left_root
		GETGLOB 14
		SDEQ
		PUSHCONT {
			;; return
			GETGLOB 4
			PUSHINT 0
			SETINDEXQ 2
			FALSE
			SETINDEXQ 1
			PUSHINT 64
			SETINDEXQ 4
			SETGLOB 4
			;; push identifier receive_amount
			PUSH S5
			;; push identifier right_balance
			GETGLOB 25
			;; push identifier left_balance
			GETGLOB 24
			CALLREF {
				CALL $_expectedSpendAmount_internal_macro$
			}
			BLKDROP2 2, 4
			SWAP2
			DROP2
			PUSHINT 4
			RET
		}
		PUSHCONT {
			THROW 112
		}
		IFELSE
		DUP
		IFRET
		DROP
		;; end if
	}
	IFELSE
	EQINT 4
	IFRET
	;; end if
}
CALLX
; end function expectedSpendAmount
BLKDROP2 2, 2
;; emitting 2 value(s)
PUSH S2
EQINT -1
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xaea2da97
	PUSH S2
	STUR 128
	PUSH S1
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	PUSH S1
	INDEX 2
	GETGLOB 9
	BLKSWAP 1, 3
	INDEX 1
	NEWC
	PUSHINT 2
	STZEROES
	STI 1
	PUSHINT 3
	STZEROES
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 104
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	GETGLOB 4
	INDEX 5
	STUR 32
	PUSH S2
	STUR 128
	PUSH S1
	STUR 128
	ENDC
	GETGLOB 4
	INDEX 4
	SENDRAWMSG
}
IFELSE
DROP2
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro exchange
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode call_id
LDU 64
; Decode spent_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode spent_token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode receive_token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode expected_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode account_owner
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode 
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: call_id
;; param: spent_amount
;; param: spent_token_root
;; param: receive_token_root
;; param: expected_amount
;; param: account_owner
;; param: 
;; param: send_gas_to
; modifier onlyActive
;; push identifier active
GETGLOB 16
THROWIFNOT 114
; modifier onlyAccount
;; push identifier account_owner
PUSH S2
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier account_owner
PUSH S2
STSLICER
; colValue
NIP
; end colValue
PUSHINT 1
;; push identifier builder
PUSH S1
ENDC
CALLREF {
	CALL $_buildInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 105
; function exchange
;; if
;; push identifier spent_token_root
PUSH S8
;; push identifier left_root
GETGLOB 14
SDEQ
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; push identifier receive_token_root
	PUSH S7
	;; push identifier right_root
	GETGLOB 15
	SDEQ
}
IF
PUSHCONT {
	;; push identifier spent_amount
	PUSH S9
	;; push identifier left_balance
	GETGLOB 24
	;; push identifier right_balance
	GETGLOB 25
	CALLREF {
		CALL $_expectedExchange_internal_macro$
	}
	SWAP
	SWAP
	;; decl: right_amount
	;; decl: left_fee
	;; push identifier right_amount
	PUSH S1
	;; <=
	;; push identifier right_balance
	GETGLOB 25
	LEQ
	THROWIFNOT 118
	;; push identifier right_amount
	PUSH S1
	;; >=
	;; push identifier expected_amount
	PUSH S9
	GEQ
	THROWIFNOT 123
	;; push identifier right_amount
	PUSH S1
	GTINT 0
	THROWIFNOT 116
	PUSHINT 1000000000
	PUSHINT 0
	RAWRESERVE
	;; push identifier spent_amount
	PUSH S11
	; expValue
	;; fetch left_balance
	GETGLOB 24
	; end expValue
	SWAP
	ADD
	UFITS 128
	; colValue
	SETGLOB 24
	; end colValue
	;; push identifier right_amount
	PUSH S1
	; expValue
	;; fetch right_balance
	GETGLOB 25
	; end expValue
	SWAP
	SUB
	UFITS 128
	; colValue
	SETGLOB 25
	; end colValue
	;; emit ExchangeLeftToRight
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x2d589b1b
	;; left
	;; push identifier spent_amount
	PUSH S12
	STUR 128
	;; fee
	;; push identifier left_fee
	PUSH S1
	STUR 128
	;; right
	;; push identifier right_amount
	PUSH S2
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
	;; Remote call IDexPairOperationCallback.dexPairExchangeSuccess
	;; push identifier account_owner
	PUSH S7
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x101000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x04e34150
	;; id
	;; push identifier call_id
	PUSH S13
	STUR 64
	;; via_account
	TRUE
	STIR 1
	;; result
	TRUE
	;; push identifier spent_amount
	PUSH S13
	;; push identifier left_fee
	PUSH S3
	;; push identifier right_amount
	PUSH S5
	TUPLE 4
	UNTUPLE 4
	BLKSWAP 1, 4
	PUSH S4
	STIR 1
	PUSH S3
	STUR 128
	PUSH S2
	STUR 128
	PUSH S1
	STUR 128
	BLKDROP2 4, 1
	ENDC
	PUSHINT 1
	;; +
	PUSHINT 2
	ADD
	UFITS 8
	SENDRAWMSG
	;; Remote call IDexAccount.internalPairTransfer
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x408f0d180000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x629f3a85
	;; amount
	;; push identifier right_amount
	PUSH S3
	STUR 128
	;; token_root
	;; push identifier right_root
	GETGLOB 15
	STSLICER
	;; sender_left_root
	;; push identifier left_root
	GETGLOB 14
	STSLICER
	NEWC
	;; sender_right_root
	;; push identifier right_root
	GETGLOB 15
	STSLICER
	;; send_gas_to
	;; push identifier send_gas_to
	PUSH S8
	STSLICER
	STBREFR
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	;; Remote call ISuccessCallback.successCallback
	;; get member sender
	GETGLOB 9
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x11132606
	;; call_id
	;; push identifier call_id
	PUSH S13
	STUR 64
	ENDC
	PUSHINT 128
	SENDRAWMSG
	DROP2
}
PUSHCONT {
	;; if
	;; push identifier spent_token_root
	PUSH S8
	;; push identifier right_root
	GETGLOB 15
	SDEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier receive_token_root
		PUSH S7
		;; push identifier left_root
		GETGLOB 14
		SDEQ
	}
	IF
	PUSHCONT {
		;; push identifier spent_amount
		PUSH S9
		;; push identifier right_balance
		GETGLOB 25
		;; push identifier left_balance
		GETGLOB 24
		CALLREF {
			CALL $_expectedExchange_internal_macro$
		}
		SWAP
		SWAP
		;; decl: left_amount
		;; decl: right_fee
		;; push identifier left_amount
		PUSH S1
		;; <=
		;; push identifier left_balance
		GETGLOB 24
		LEQ
		THROWIFNOT 118
		;; push identifier left_amount
		PUSH S1
		;; >=
		;; push identifier expected_amount
		PUSH S9
		GEQ
		THROWIFNOT 123
		;; push identifier left_amount
		PUSH S1
		GTINT 0
		THROWIFNOT 116
		PUSHINT 1000000000
		PUSHINT 0
		RAWRESERVE
		;; push identifier spent_amount
		PUSH S11
		; expValue
		;; fetch right_balance
		GETGLOB 25
		; end expValue
		SWAP
		ADD
		UFITS 128
		; colValue
		SETGLOB 25
		; end colValue
		;; push identifier left_amount
		PUSH S1
		; expValue
		;; fetch left_balance
		GETGLOB 24
		; end expValue
		SWAP
		SUB
		UFITS 128
		; colValue
		SETGLOB 24
		; end colValue
		;; emit ExchangeRightToLeft
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x1f2c7e24
		;; right
		;; push identifier spent_amount
		PUSH S12
		STUR 128
		;; fee
		;; push identifier right_fee
		PUSH S1
		STUR 128
		;; left
		;; push identifier left_amount
		PUSH S2
		STUR 128
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; Remote call IDexPairOperationCallback.dexPairExchangeSuccess
		;; push identifier account_owner
		PUSH S7
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x101000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x04e34150
		;; id
		;; push identifier call_id
		PUSH S13
		STUR 64
		;; via_account
		TRUE
		STIR 1
		;; result
		FALSE
		;; push identifier spent_amount
		PUSH S13
		;; push identifier right_fee
		PUSH S3
		;; push identifier left_amount
		PUSH S5
		TUPLE 4
		UNTUPLE 4
		BLKSWAP 1, 4
		PUSH S4
		STIR 1
		PUSH S3
		STUR 128
		PUSH S2
		STUR 128
		PUSH S1
		STUR 128
		BLKDROP2 4, 1
		ENDC
		PUSHINT 1
		;; +
		PUSHINT 2
		ADD
		UFITS 8
		SENDRAWMSG
		;; Remote call IDexAccount.internalPairTransfer
		;; get member sender
		GETGLOB 9
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHSLICE x408f0d180000000000000000000000000004_
		STSLICER
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x629f3a85
		;; amount
		;; push identifier left_amount
		PUSH S3
		STUR 128
		;; token_root
		;; push identifier left_root
		GETGLOB 14
		STSLICER
		;; sender_left_root
		;; push identifier left_root
		GETGLOB 14
		STSLICER
		NEWC
		;; sender_right_root
		;; push identifier right_root
		GETGLOB 15
		STSLICER
		;; send_gas_to
		;; push identifier send_gas_to
		PUSH S8
		STSLICER
		STBREFR
		STBREFR
		ENDC
		PUSHINT 1
		SENDRAWMSG
		;; Remote call ISuccessCallback.successCallback
		;; get member sender
		GETGLOB 9
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 109
		STZEROES
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x11132606
		;; call_id
		;; push identifier call_id
		PUSH S13
		STUR 64
		ENDC
		PUSHINT 128
		SENDRAWMSG
		DROP2
	}
	PUSHCONT {
		THROW 112
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
; end function exchange
DROP2
DROP
; end modifier onlyAccount
; end modifier onlyActive
BLKDROP 8
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_expectedExchange_internal
.type	_expectedExchange_internal, @function
CALL $_expectedExchange_internal_macro$

.macro _expectedExchange_internal_macro
;; param: a_amount
;; param: a_pool
;; param: b_pool
; function _expectedExchange
;; push identifier a_amount
PUSH S2
;; push identifier fee_numerator
GETGLOB 26
;; push identifier fee_denominator
GETGLOB 27
MULDIVC
UFITS 128
;; decl: a_fee
;; push identifier a_pool
PUSH S2
;; +
;; push identifier a_amount
PUSH S4
ADD
UFITS 128
;; decl: new_a_pool
;; push identifier a_pool
PUSH S3
;; push identifier b_pool
PUSH S3
;; push identifier new_a_pool
PUSH S2
;; -
;; push identifier a_fee
PUSH S4
SUB
UFITS 128
MULDIVC
UFITS 128
;; decl: new_b_pool
;; push identifier b_pool
PUSH S3
;; -
;; push identifier new_b_pool
PUSH S1
SUB
UFITS 128
;; decl: expected_b_amount
;; return
;; push identifier expected_b_amount
DUP
;; push identifier a_fee
PUSH S4
BLKDROP2 4, 2
; end function _expectedExchange
BLKDROP2 3, 2

.globl	_expectedSpendAmount_internal
.type	_expectedSpendAmount_internal, @function
CALL $_expectedSpendAmount_internal_macro$

.macro _expectedSpendAmount_internal_macro
;; param: b_amount
;; param: a_pool
;; param: b_pool
; function _expectedSpendAmount
;; push identifier fee_denominator
GETGLOB 27
;; -
;; push identifier fee_numerator
GETGLOB 26
SUB
UFITS 16
;; uint128
;; decl: fee_d_minus_n
;; push identifier b_pool
PUSH S1
;; -
;; push identifier b_amount
PUSH S4
SUB
UFITS 128
;; decl: new_b_pool
;; push identifier a_pool
PUSH S3
;; push identifier b_pool
PUSH S3
;; push identifier new_b_pool
PUSH S2
MULDIVC
UFITS 128
;; decl: new_a_pool
;; push identifier new_a_pool
DUP
;; -
;; push identifier a_pool
PUSH S5
SUB
UFITS 128
;; push identifier fee_denominator
GETGLOB 27
;; push identifier fee_d_minus_n
PUSH S4
MULDIVC
UFITS 128
;; decl: expected_a_amount
;; push identifier expected_a_amount
DUP
;; push identifier fee_numerator
GETGLOB 26
;; push identifier fee_denominator
GETGLOB 27
MULDIVC
UFITS 128
;; decl: a_fee
;; return
;; push identifier expected_a_amount
PUSH S1
;; push identifier a_fee
PUSH S1
BLKDROP2 5, 2
; end function _expectedSpendAmount
BLKDROP2 3, 2

.macro crossPairExchange
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode id
LDU 64
; Decode 
LDU 32
; Decode prev_pair_left_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode prev_pair_right_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode spent_token_root
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode spent_amount
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode sender_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode sender_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode original_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode deploy_wallet_grams
LDUQ 128
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 128
}
IFNOT
; Decode payload
;; decode TvmCell
LDREF
ENDS
;; param: id
;; param: 
;; param: prev_pair_left_root
;; param: prev_pair_right_root
;; param: spent_token_root
;; param: spent_amount
;; param: sender_public_key
;; param: sender_address
;; param: original_gas_to
;; param: deploy_wallet_grams
;; param: payload
; modifier onlyPair
;; push identifier prev_pair_left_root
PUSH S8
;; push identifier prev_pair_right_root
PUSH S8
;; get member sender
GETGLOB 9
;; push identifier left_root_
PUSH S2
;; push identifier right_root_
PUSH S2
CALLREF {
	CALL $_expectedPairAddress_internal_macro$
}
SDEQ
THROWIFNOT 106
; modifier onlyActive
;; push identifier active
GETGLOB 16
THROWIFNOT 114
; function crossPairExchange
;; get member sender
GETGLOB 9
MYADDR
SDEQ
NOT
THROWIFNOT 100
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
;; push identifier payload
PUSH S2
CTOS
;; decl: payloadSlice
; expValue
DUP
; end expValue
LDU 128
; colValue
POP S2
; end colValue
;; decl: expected_amount
;; push identifier payloadSlice
PUSH S1
SBITS
;; >=
PUSHINT 267
GEQ
PUSHCONT {
	; expValue
	PUSH S1
	; end expValue
	;; decode address
	LDMSGADDR
	; colValue
	POP S3
	; end colValue
}
PUSHCONT {
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
}
IFELSE
;; decl: next_token_root
;; push identifier payloadSlice
PUSH S2
SREFS
;; >=
PUSHINT 1
GEQ
;; decl: has_next_payload
NEWC
ENDC
;; decl: next_payload
;; if
;; push identifier has_next_payload
PUSH S1
PUSHCONT {
	; expValue
	PUSH S4
	; end expValue
	LDREF
	; colValue
	POP S6
	; end colValue
	; expValue
	; end expValue
	; colValue
	NIP
	; end colValue
}
IF
;; end if
;; if
;; push identifier spent_token_root
PUSH S13
;; push identifier left_root
GETGLOB 14
SDEQ
PUSHCONT {
	;; push identifier spent_amount
	PUSH S12
	;; push identifier left_balance
	GETGLOB 24
	;; push identifier right_balance
	GETGLOB 25
	CALLREF {
		CALL $_expectedExchange_internal_macro$
	}
	SWAP
	SWAP
	;; decl: right_amount
	;; decl: left_fee
	;; if
	;; push identifier right_amount
	PUSH S1
	;; <=
	;; push identifier right_balance
	GETGLOB 25
	LEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; push identifier right_amount
		PUSH S1
		;; >=
		;; push identifier expected_amount
		PUSH S6
		GEQ
	}
	IF
	PUSHCONT {
		;; push identifier spent_amount
		PUSH S14
		; expValue
		;; fetch left_balance
		GETGLOB 24
		; end expValue
		SWAP
		ADD
		UFITS 128
		; colValue
		SETGLOB 24
		; end colValue
		;; push identifier right_amount
		PUSH S1
		; expValue
		;; fetch right_balance
		GETGLOB 25
		; end expValue
		SWAP
		SUB
		UFITS 128
		; colValue
		SETGLOB 25
		; end colValue
		;; emit ExchangeLeftToRight
		NEWC
		PUSHSLICE xc0000000000000000000000002_
		STSLICER
		STSLICECONST 0
		STSLICECONST 0
		STSLICECONST x2d589b1b
		;; left
		;; push identifier spent_amount
		PUSH S15
		STUR 128
		;; fee
		;; push identifier left_fee
		PUSH S1
		STUR 128
		;; right
		;; push identifier right_amount
		PUSH S2
		STUR 128
		ENDC
		PUSHINT 0
		SENDRAWMSG
		;; if
		;; get member value
		;; push identifier sender_address
		PUSH S12
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		PUSHCONT {
			;; Remote call IDexPairOperationCallback.dexPairExchangeSuccess
			;; push identifier sender_address
			PUSH S12
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHSLICE x104000000000000000000000000004_
			STSLICER
			STSLICECONST 0
			STSLICECONST 0
			STSLICECONST x04e34150
			;; id
			;; push identifier id
			PUSH S20
			STUR 64
			;; via_account
			FALSE
			STIR 1
			;; result
			TRUE
			;; push identifier spent_amount
			PUSH S16
			;; push identifier left_fee
			PUSH S3
			;; push identifier right_amount
			PUSH S5
			TUPLE 4
			UNTUPLE 4
			BLKSWAP 1, 4
			PUSH S4
			STIR 1
			PUSH S3
			STUR 128
			PUSH S2
			STUR 128
			PUSH S1
			STUR 128
			BLKDROP2 4, 1
			ENDC
			PUSHINT 1
			;; +
			PUSHINT 2
			ADD
			UFITS 8
			SENDRAWMSG
		}
		IF
		;; end if
		;; if
		;; get member value
		;; push identifier next_token_root
		PUSH S4
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		NEQINT 0
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; push identifier next_token_root
			PUSH S4
			;; push identifier right_root
			GETGLOB 15
			SDEQ
			NOT
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier next_token_root
				PUSH S4
				;; push identifier left_root
				GETGLOB 14
				SDEQ
				NOT
				;; push identifier has_next_payload
				PUSH S4
				AND
				;; short-circuiting &&
				DUP
				PUSHCONT {
					DROP
					;; push identifier next_payload
					PUSH S2
					CTOS
					SBITS
					;; >=
					PUSHINT 128
					GEQ
					;; short-circuiting &&
					DUP
					PUSHCONT {
						DROP
						;; get member value
						CALLREF {
							CALL $message_balance_macro$
						}
						;; >=
						PUSHINT 2000000000
						GEQ
					}
					IF
				}
				IF
			}
			IF
		}
		IF
		PUSHCONT {
			;; push identifier right_root
			GETGLOB 15
			;; push identifier next_token_root
			PUSH S5
			CALLREF {
				CALL $_expectedPairAddress_internal_macro$
			}
			;; decl: next_pair
			;; Remote call IDexPairV2.crossPairExchange
			;; push identifier next_pair
			DUP
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHINT 109
			STZEROES
			STSLICECONST 0
			STSLICECONST 1
			NEWC
			STSLICECONST x2e3effc7
			;; id
			;; push identifier id
			PUSH S22
			STUR 64
			;; prev_pair_version
			;; push identifier current_version
			GETGLOB 12
			STUR 32
			;; prev_pair_left_root
			;; push identifier left_root
			GETGLOB 14
			STSLICER
			;; prev_pair_right_root
			;; push identifier right_root
			GETGLOB 15
			STSLICER
			NEWC
			;; spent_token_root
			;; push identifier right_root
			GETGLOB 15
			STSLICER
			;; spent_amount
			;; push identifier right_amount
			PUSH S5
			STUR 128
			;; sender_public_key
			;; push identifier sender_public_key
			PUSH S17
			STUR 256
			;; sender_address
			;; push identifier sender_address
			PUSH S16
			STSLICER
			NEWC
			;; original_gas_to
			;; push identifier original_gas_to
			PUSH S16
			STSLICER
			;; deploy_wallet_grams
			;; push identifier deploy_wallet_grams
			PUSH S15
			STUR 128
			;; payload
			;; push identifier next_payload
			PUSH S7
			STREFR
			STBREFR
			STBREFR
			STBREFR
			ENDC
			PUSHINT 128
			SENDRAWMSG
			DROP
		}
		PUSHCONT {
			;; Remote call IDexVault.transfer
			;; push identifier vault
			GETGLOB 11
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHINT 109
			STZEROES
			STSLICECONST 0
			STSLICECONST 1
			NEWC
			STSLICECONST x0635c6a0
			;; amount
			;; push identifier right_amount
			PUSH S3
			STUR 128
			;; token_root
			;; push identifier right_root
			GETGLOB 15
			STSLICER
			;; vault_wallet
			;; push identifier vault_right_wallet
			GETGLOB 21
			STSLICER
			;; recipient_public_key
			;; push identifier sender_public_key
			PUSH S15
			STUR 256
			NEWC
			;; recipient_address
			;; push identifier sender_address
			PUSH S15
			STSLICER
			;; deploy_wallet_grams
			;; push identifier deploy_wallet_grams
			PUSH S13
			STUR 128
			;; notify_receiver
			;; push identifier has_next_payload
			PUSH S6
			STIR 1
			;; payload
			;; push identifier next_payload
			PUSH S5
			STREFR
			;; left_root
			;; push identifier left_root
			GETGLOB 14
			STSLICER
			NEWC
			;; right_root
			;; push identifier right_root
			GETGLOB 15
			STSLICER
			;; pair_version
			;; push identifier current_version
			GETGLOB 12
			STUR 32
			;; send_gas_to
			;; push identifier original_gas_to
			PUSH S15
			STSLICER
			STBREFR
			STBREFR
			STBREFR
			ENDC
			PUSHINT 128
			SENDRAWMSG
		}
		IFELSE
		;; end if
	}
	PUSHCONT {
		;; if
		;; get member value
		;; push identifier sender_address
		PUSH S12
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		PUSHCONT {
			;; Remote call IDexPairOperationCallback.dexPairOperationCancelled
			;; push identifier sender_address
			PUSH S12
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHSLICE x12c000000000000000000000000004_
			STSLICER
			STSLICECONST 0
			STSLICECONST 0
			STSLICECONST x0c0a1906
			;; id
			;; push identifier id
			PUSH S20
			STUR 64
			ENDC
			PUSHINT 1
			;; +
			PUSHINT 2
			ADD
			UFITS 8
			SENDRAWMSG
		}
		IF
		;; end if
		NEWC
		;; decl: result_builder
		; expValue
		DUP
		; end expValue
		;; push identifier id
		PUSH S21
		STUR 64
		; colValue
		NIP
		; end colValue
		;; Remote call IDexVault.transfer
		;; push identifier vault
		GETGLOB 11
		NEWC
		STSLICECONST x62_
		STSLICE
		PUSHINT 109
		STZEROES
		STSLICECONST 0
		STSLICECONST 1
		NEWC
		STSLICECONST x0635c6a0
		;; amount
		;; push identifier spent_amount
		PUSH S17
		STUR 128
		;; token_root
		;; push identifier spent_token_root
		PUSH S18
		STSLICER
		;; vault_wallet
		;; push identifier vault_left_wallet
		GETGLOB 20
		STSLICER
		;; recipient_public_key
		;; push identifier sender_public_key
		PUSH S16
		STUR 256
		NEWC
		;; recipient_address
		;; push identifier sender_address
		PUSH S16
		STSLICER
		;; deploy_wallet_grams
		;; push identifier deploy_wallet_grams
		PUSH S14
		STUR 128
		;; notify_receiver
		TRUE
		STIR 1
		;; payload
		;; push identifier result_builder
		PUSH S3
		ENDC
		STREFR
		;; left_root
		;; push identifier left_root
		GETGLOB 14
		STSLICER
		NEWC
		;; right_root
		;; push identifier right_root
		GETGLOB 15
		STSLICER
		;; pair_version
		;; push identifier current_version
		GETGLOB 12
		STUR 32
		;; send_gas_to
		;; push identifier original_gas_to
		PUSH S16
		STSLICER
		STBREFR
		STBREFR
		STBREFR
		ENDC
		PUSHINT 128
		SENDRAWMSG
		DROP
	}
	IFELSE
	;; end if
	DROP2
}
PUSHCONT {
	;; if
	;; push identifier spent_token_root
	PUSH S13
	;; push identifier right_root
	GETGLOB 15
	SDEQ
	PUSHCONT {
		;; push identifier spent_amount
		PUSH S12
		;; push identifier right_balance
		GETGLOB 25
		;; push identifier left_balance
		GETGLOB 24
		CALLREF {
			CALL $_expectedExchange_internal_macro$
		}
		SWAP
		SWAP
		;; decl: left_amount
		;; decl: right_fee
		;; if
		;; push identifier left_amount
		PUSH S1
		;; <=
		;; push identifier left_balance
		GETGLOB 24
		LEQ
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; push identifier left_amount
			PUSH S1
			;; >=
			;; push identifier expected_amount
			PUSH S6
			GEQ
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier left_amount
				PUSH S1
				GTINT 0
			}
			IF
		}
		IF
		PUSHCONT {
			;; push identifier spent_amount
			PUSH S14
			; expValue
			;; fetch right_balance
			GETGLOB 25
			; end expValue
			SWAP
			ADD
			UFITS 128
			; colValue
			SETGLOB 25
			; end colValue
			;; push identifier left_amount
			PUSH S1
			; expValue
			;; fetch left_balance
			GETGLOB 24
			; end expValue
			SWAP
			SUB
			UFITS 128
			; colValue
			SETGLOB 24
			; end colValue
			;; emit ExchangeRightToLeft
			NEWC
			PUSHSLICE xc0000000000000000000000002_
			STSLICER
			STSLICECONST 0
			STSLICECONST 0
			STSLICECONST x1f2c7e24
			;; right
			;; push identifier spent_amount
			PUSH S15
			STUR 128
			;; fee
			;; push identifier right_fee
			PUSH S1
			STUR 128
			;; left
			;; push identifier left_amount
			PUSH S2
			STUR 128
			ENDC
			PUSHINT 0
			SENDRAWMSG
			;; if
			;; get member value
			;; push identifier sender_address
			PUSH S12
			PARSEMSGADDR
			INDEX 3
			PLDU 256
			PUSHCONT {
				;; Remote call IDexPairOperationCallback.dexPairExchangeSuccess
				;; push identifier sender_address
				PUSH S12
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHSLICE x104000000000000000000000000004_
				STSLICER
				STSLICECONST 0
				STSLICECONST 0
				STSLICECONST x04e34150
				;; id
				;; push identifier id
				PUSH S20
				STUR 64
				;; via_account
				FALSE
				STIR 1
				;; result
				FALSE
				;; push identifier spent_amount
				PUSH S16
				;; push identifier right_fee
				PUSH S3
				;; push identifier left_amount
				PUSH S5
				TUPLE 4
				UNTUPLE 4
				BLKSWAP 1, 4
				PUSH S4
				STIR 1
				PUSH S3
				STUR 128
				PUSH S2
				STUR 128
				PUSH S1
				STUR 128
				BLKDROP2 4, 1
				ENDC
				PUSHINT 1
				;; +
				PUSHINT 2
				ADD
				UFITS 8
				SENDRAWMSG
			}
			IF
			;; end if
			;; if
			;; get member value
			;; push identifier next_token_root
			PUSH S4
			PARSEMSGADDR
			INDEX 3
			PLDU 256
			NEQINT 0
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; push identifier next_token_root
				PUSH S4
				;; push identifier right_root
				GETGLOB 15
				SDEQ
				NOT
				;; short-circuiting &&
				DUP
				PUSHCONT {
					DROP
					;; push identifier next_token_root
					PUSH S4
					;; push identifier left_root
					GETGLOB 14
					SDEQ
					NOT
					;; push identifier has_next_payload
					PUSH S4
					AND
					;; short-circuiting &&
					DUP
					PUSHCONT {
						DROP
						;; push identifier next_payload
						PUSH S2
						CTOS
						SBITS
						;; >=
						PUSHINT 128
						GEQ
						;; short-circuiting &&
						DUP
						PUSHCONT {
							DROP
							;; get member value
							CALLREF {
								CALL $message_balance_macro$
							}
							;; >=
							PUSHINT 2000000000
							GEQ
						}
						IF
					}
					IF
				}
				IF
			}
			IF
			PUSHCONT {
				;; push identifier left_root
				GETGLOB 14
				;; push identifier next_token_root
				PUSH S5
				CALLREF {
					CALL $_expectedPairAddress_internal_macro$
				}
				;; decl: next_pair
				;; Remote call IDexPairV2.crossPairExchange
				;; push identifier next_pair
				DUP
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHINT 109
				STZEROES
				STSLICECONST 0
				STSLICECONST 1
				NEWC
				STSLICECONST x2e3effc7
				;; id
				;; push identifier id
				PUSH S22
				STUR 64
				;; prev_pair_version
				;; push identifier current_version
				GETGLOB 12
				STUR 32
				;; prev_pair_left_root
				;; push identifier left_root
				GETGLOB 14
				STSLICER
				;; prev_pair_right_root
				;; push identifier right_root
				GETGLOB 15
				STSLICER
				NEWC
				;; spent_token_root
				;; push identifier left_root
				GETGLOB 14
				STSLICER
				;; spent_amount
				;; push identifier left_amount
				PUSH S5
				STUR 128
				;; sender_public_key
				;; push identifier sender_public_key
				PUSH S17
				STUR 256
				;; sender_address
				;; push identifier sender_address
				PUSH S16
				STSLICER
				NEWC
				;; original_gas_to
				;; push identifier original_gas_to
				PUSH S16
				STSLICER
				;; deploy_wallet_grams
				;; push identifier deploy_wallet_grams
				PUSH S15
				STUR 128
				;; payload
				;; push identifier next_payload
				PUSH S7
				STREFR
				STBREFR
				STBREFR
				STBREFR
				ENDC
				PUSHINT 128
				SENDRAWMSG
				DROP
			}
			PUSHCONT {
				;; Remote call IDexVault.transfer
				;; push identifier vault
				GETGLOB 11
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHINT 109
				STZEROES
				STSLICECONST 0
				STSLICECONST 1
				NEWC
				STSLICECONST x0635c6a0
				;; amount
				;; push identifier left_amount
				PUSH S3
				STUR 128
				;; token_root
				;; push identifier left_root
				GETGLOB 14
				STSLICER
				;; vault_wallet
				;; push identifier vault_left_wallet
				GETGLOB 20
				STSLICER
				;; recipient_public_key
				;; push identifier sender_public_key
				PUSH S15
				STUR 256
				NEWC
				;; recipient_address
				;; push identifier sender_address
				PUSH S15
				STSLICER
				;; deploy_wallet_grams
				;; push identifier deploy_wallet_grams
				PUSH S13
				STUR 128
				;; notify_receiver
				;; push identifier has_next_payload
				PUSH S6
				STIR 1
				;; payload
				;; push identifier next_payload
				PUSH S5
				STREFR
				;; left_root
				;; push identifier left_root
				GETGLOB 14
				STSLICER
				NEWC
				;; right_root
				;; push identifier right_root
				GETGLOB 15
				STSLICER
				;; pair_version
				;; push identifier current_version
				GETGLOB 12
				STUR 32
				;; send_gas_to
				;; push identifier original_gas_to
				PUSH S15
				STSLICER
				STBREFR
				STBREFR
				STBREFR
				ENDC
				PUSHINT 128
				SENDRAWMSG
			}
			IFELSE
			;; end if
		}
		PUSHCONT {
			;; if
			;; get member value
			;; push identifier sender_address
			PUSH S12
			PARSEMSGADDR
			INDEX 3
			PLDU 256
			PUSHCONT {
				;; Remote call IDexPairOperationCallback.dexPairOperationCancelled
				;; push identifier sender_address
				PUSH S12
				NEWC
				STSLICECONST x62_
				STSLICE
				PUSHSLICE x12c000000000000000000000000004_
				STSLICER
				STSLICECONST 0
				STSLICECONST 0
				STSLICECONST x0c0a1906
				;; id
				;; push identifier id
				PUSH S20
				STUR 64
				ENDC
				PUSHINT 1
				;; +
				PUSHINT 2
				ADD
				UFITS 8
				SENDRAWMSG
			}
			IF
			;; end if
			NEWC
			;; decl: result_builder
			; expValue
			DUP
			; end expValue
			;; push identifier id
			PUSH S21
			STUR 64
			; colValue
			NIP
			; end colValue
			;; Remote call IDexVault.transfer
			;; push identifier vault
			GETGLOB 11
			NEWC
			STSLICECONST x62_
			STSLICE
			PUSHINT 109
			STZEROES
			STSLICECONST 0
			STSLICECONST 1
			NEWC
			STSLICECONST x0635c6a0
			;; amount
			;; push identifier spent_amount
			PUSH S17
			STUR 128
			;; token_root
			;; push identifier spent_token_root
			PUSH S18
			STSLICER
			;; vault_wallet
			;; push identifier vault_right_wallet
			GETGLOB 21
			STSLICER
			;; recipient_public_key
			;; push identifier sender_public_key
			PUSH S16
			STUR 256
			NEWC
			;; recipient_address
			;; push identifier sender_address
			PUSH S16
			STSLICER
			;; deploy_wallet_grams
			;; push identifier deploy_wallet_grams
			PUSH S14
			STUR 128
			;; notify_receiver
			TRUE
			STIR 1
			;; payload
			;; push identifier result_builder
			PUSH S3
			ENDC
			STREFR
			;; left_root
			;; push identifier left_root
			GETGLOB 14
			STSLICER
			NEWC
			;; right_root
			;; push identifier right_root
			GETGLOB 15
			STSLICER
			;; pair_version
			;; push identifier current_version
			GETGLOB 12
			STUR 32
			;; send_gas_to
			;; push identifier original_gas_to
			PUSH S16
			STSLICER
			STBREFR
			STBREFR
			STBREFR
			ENDC
			PUSHINT 128
			SENDRAWMSG
			DROP
		}
		IFELSE
		;; end if
		DROP2
	}
	PUSHCONT {
		THROW 112
	}
	IFELSE
	;; end if
}
IFELSE
;; end if
BLKDROP 5
; end function crossPairExchange
; end modifier onlyActive
DROP2
; end modifier onlyPair
BLKDROP 11
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro checkPair
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode call_id
LDU 64
; Decode account_owner
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode 
LDUQ 32
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 32
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: call_id
;; param: account_owner
;; param: 
;; param: send_gas_to
; modifier onlyAccount
;; push identifier account_owner
PUSH S2
NEWC
;; decl: builder
; expValue
DUP
; end expValue
;; push identifier account_owner
PUSH S2
STSLICER
; colValue
NIP
; end colValue
PUSHINT 1
;; push identifier builder
PUSH S1
ENDC
CALLREF {
	CALL $_buildInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
;; decl: expected
;; get member sender
GETGLOB 9
;; push identifier expected
PUSH S1
SDEQ
THROWIFNOT 105
; function checkPair
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
;; Remote call IDexAccount.checkPairCallback
;; get member sender
GETGLOB 9
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x19eb9bf2
;; original_call_id
;; push identifier call_id
PUSH S8
STUR 64
;; left_root
;; push identifier left_root
GETGLOB 14
STSLICER
;; right_root
;; push identifier right_root
GETGLOB 15
STSLICER
;; lp_root
;; push identifier lp_root
GETGLOB 22
STSLICER
NEWC
;; send_gas_to
;; push identifier send_gas_to
PUSH S6
STSLICER
STBREFR
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
; end function checkPair
DROP2
DROP
; end modifier onlyAccount
BLKDROP 4
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_expectedPairAddress_internal
.type	_expectedPairAddress_internal, @function
CALL $_expectedPairAddress_internal_macro$

.macro _expectedPairAddress_internal_macro
;; param: left_root_
;; param: right_root_
; function _expectedPairAddress
NEWC
;; decl: builder
;; if
;; get member value
;; push identifier left_root_
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
;; <
;; get member value
;; push identifier right_root_
PUSH S2
PARSEMSGADDR
INDEX 3
PLDU 256
LESS
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier left_root_
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_root_
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
}
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; push identifier right_root_
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier left_root_
	PUSH S3
	STSLICER
	; colValue
	NIP
	; end colValue
}
IFELSE
;; end if
;; return
PUSHINT 2
;; push identifier builder
PUSH S1
ENDC
CALLREF {
	CALL $_buildInitData_internal_macro$
}
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
NIP
; end function _expectedPairAddress
BLKDROP2 2, 1

.globl	_buildInitData_internal
.type	_buildInitData_internal, @function
CALL $_buildInitData_internal_macro$

.macro _buildInitData_internal_macro
;; param: type_id
;; param: params
; function _buildInitData
;; return
NEWDICT
PUSHINT 0
NEWC
STU 256
PUSHINT 0
ROT
PUSHINT 64
DICTUSETB
;; push identifier root
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
;; push identifier type_id
PUSH S2
NEWC
STU 8
PUSHINT 2
ROT
PUSHINT 64
DICTUSETB
;; push identifier params
PUSH S1
PUSHINT 3
ROT
PUSHINT 64
DICTUSETREF
NEWC
STDICT
ENDC
;; push identifier platform_code
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
; end function _buildInitData
BLKDROP2 2, 1

.macro upgrade
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode code
;; decode TvmCell
LDREF
; Decode new_version
LDU 32
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: code
;; param: new_version
;; param: send_gas_to
; modifier onlyRoot
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 10
SDEQ
THROWIFNOT 101
; function upgrade
;; if
;; push identifier current_version
GETGLOB 12
;; ==
;; push identifier new_version
PUSH S2
EQUAL
;; short-circuiting ||
DUP
PUSHCONT {
	DROP
	;; !
	;; push identifier active
	GETGLOB 16
	NOT
}
IFNOT
PUSHCONT {
	PUSHINT 1000000000
	PUSHINT 0
	RAWRESERVE
	;; transfer()
	;; push identifier send_gas_to
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	;; +
	PUSHINT 2
	ADD
	UFITS 8
	SENDRAWMSG
}
PUSHCONT {
	;; emit PairCodeUpgraded
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x3e8d42be
	;; version
	;; push identifier new_version
	PUSH S2
	STUR 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	NEWC
	;; decl: builder
	; expValue
	DUP
	; end expValue
	;; push identifier root
	GETGLOB 10
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier vault
	GETGLOB 11
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier current_version
	GETGLOB 12
	STUR 32
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier new_version
	PUSH S3
	STUR 32
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier send_gas_to
	PUSH S2
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier platform_code
	GETGLOB 13
	STREFR
	; colValue
	NIP
	; end colValue
	NEWC
	;; decl: tokens_data_builder
	; expValue
	DUP
	; end expValue
	;; push identifier left_root
	GETGLOB 14
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_root
	GETGLOB 15
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier lp_root
	GETGLOB 22
	STSLICER
	; colValue
	NIP
	; end colValue
	NEWC
	;; decl: balances_data_builder
	; expValue
	DUP
	; end expValue
	;; push identifier lp_supply
	GETGLOB 23
	STUR 128
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier left_balance
	GETGLOB 24
	STUR 128
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_balance
	GETGLOB 25
	STUR 128
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier fee_numerator
	GETGLOB 26
	STUR 16
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier fee_denominator
	GETGLOB 27
	STUR 16
	; colValue
	NIP
	; end colValue
	; expValue
	PUSH S1
	; end expValue
	;; push identifier balances_data_builder
	PUSH S1
	STBREFR
	; colValue
	POP S2
	; end colValue
	; expValue
	PUSH S2
	; end expValue
	;; push identifier tokens_data_builder
	PUSH S2
	STBREFR
	; colValue
	POP S3
	; end colValue
	NEWC
	;; decl: pair_wallets_data_builder
	; expValue
	DUP
	; end expValue
	;; push identifier lp_wallet
	GETGLOB 17
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier left_wallet
	GETGLOB 18
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier right_wallet
	GETGLOB 19
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	PUSH S3
	; end expValue
	;; push identifier pair_wallets_data_builder
	PUSH S1
	STBREFR
	; colValue
	POP S4
	; end colValue
	NEWC
	;; decl: vault_wallets_data_builder
	; expValue
	DUP
	; end expValue
	;; push identifier vault_left_wallet
	GETGLOB 20
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	DUP
	; end expValue
	;; push identifier vault_right_wallet
	GETGLOB 21
	STSLICER
	; colValue
	NIP
	; end colValue
	; expValue
	PUSH S4
	; end expValue
	;; push identifier vault_wallets_data_builder
	PUSH S1
	STBREFR
	; colValue
	POP S5
	; end colValue
	;; push identifier code
	PUSH S7
	SETCODE
	;; push identifier code
	PUSH S7
	CTOS
	BLESS
	POP c3
	;; push identifier builder
	PUSH S4
	ENDC
	CALLREF {
		CALL $:onCodeUpgrade$
	}
	BLKDROP 5
}
IFELSE
;; end if
; end function upgrade
; end modifier onlyRoot
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
;; param: upgrade_data
; function onCodeUpgrade
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
;; set default state vars
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 10
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 11
PUSHINT 0
SETGLOB 12
NEWC
ENDC
SETGLOB 13
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 14
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 15
PUSHINT 0
SETGLOB 16
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 17
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 18
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 19
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 20
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 21
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 22
PUSHINT 0
SETGLOB 23
PUSHINT 0
SETGLOB 24
PUSHINT 0
SETGLOB 25
PUSHINT 0
SETGLOB 26
PUSHINT 0
SETGLOB 27
;; end set default state vars
;; push identifier upgrade_data
DUP
CTOS
;; decl: s
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
;; decl: send_gas_to
PUSHINT 0
;; decl: old_version
; expValue
PUSH S2
; end expValue
;; decode address
LDMSGADDR
;; decode address
LDMSGADDR
LDU 32
LDU 32
;; decode address
LDMSGADDR
; colValue
POP S8
; end colValue
REVERSE 5, 0
; expValue
; end expValue
; colValue
SETGLOB 10
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 11
; end colValue
; expValue
; end expValue
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 12
; end colValue
; expValue
; end expValue
; colValue
POP S2
; end colValue
; expValue
PUSH S2
; end expValue
LDREF
; colValue
POP S4
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 13
; end colValue
; expValue
PUSH S2
; end expValue
LDREFRTOS
SWAP
; colValue
POP S4
; end colValue
;; decl: tokens_data_slice
; expValue
DUP
; end expValue
;; decode address
LDMSGADDR
;; decode address
LDMSGADDR
; colValue
POP S3
; end colValue
SWAP
; expValue
; end expValue
; colValue
SETGLOB 14
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 15
; end colValue
;; if
;; push identifier old_version
PUSH S1
EQINT 0
PUSHCONT {
	; expValue
	; end expValue
	PUSHINT 3
	; colValue
	SETGLOB 26
	; end colValue
	; expValue
	; end expValue
	PUSHINT 1000
	; colValue
	SETGLOB 27
	; end colValue
}
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	SETGLOB 16
	; end colValue
}
IFELSE
;; end if
;; if
;; push identifier old_version
PUSH S1
;; >=
PUSHINT 1
GEQ
PUSHCONT {
	; expValue
	DUP
	; end expValue
	;; decode address
	LDMSGADDR
	; colValue
	POP S2
	; end colValue
	; expValue
	; end expValue
	; colValue
	SETGLOB 22
	; end colValue
	; expValue
	DUP
	; end expValue
	LDREFRTOS
	SWAP
	; colValue
	POP S2
	; end colValue
	;; decl: token_balances_data_slice
	; expValue
	DUP
	; end expValue
	LDU 128
	LDU 128
	LDU 128
	LDU 16
	LDU 16
	; colValue
	POP S6
	; end colValue
	REVERSE 5, 0
	; expValue
	; end expValue
	; colValue
	SETGLOB 23
	; end colValue
	; expValue
	; end expValue
	; colValue
	SETGLOB 24
	; end colValue
	; expValue
	; end expValue
	; colValue
	SETGLOB 25
	; end colValue
	; expValue
	; end expValue
	; colValue
	SETGLOB 26
	; end colValue
	; expValue
	; end expValue
	; colValue
	SETGLOB 27
	; end colValue
	; expValue
	PUSH S4
	; end expValue
	LDREFRTOS
	SWAP
	; colValue
	POP S6
	; end colValue
	;; decl: pair_wallets_data_slice
	; expValue
	DUP
	; end expValue
	;; decode address
	LDMSGADDR
	;; decode address
	LDMSGADDR
	;; decode address
	LDMSGADDR
	; colValue
	POP S4
	; end colValue
	XCHG s2
	; expValue
	; end expValue
	; colValue
	SETGLOB 17
	; end colValue
	; expValue
	; end expValue
	; colValue
	SETGLOB 18
	; end colValue
	; expValue
	; end expValue
	; colValue
	SETGLOB 19
	; end colValue
	; expValue
	PUSH S5
	; end expValue
	LDREFRTOS
	SWAP
	; colValue
	POP S7
	; end colValue
	;; decl: vault_wallets_data
	; expValue
	DUP
	; end expValue
	;; decode address
	LDMSGADDR
	;; decode address
	LDMSGADDR
	; colValue
	POP S3
	; end colValue
	SWAP
	; expValue
	; end expValue
	; colValue
	SETGLOB 20
	; end colValue
	; expValue
	; end expValue
	; colValue
	SETGLOB 21
	; end colValue
	BLKDROP 3
}
IF
;; end if
;; transfer()
;; push identifier send_gas_to
PUSH S2
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
;; +
PUSHINT 2
ADD
UFITS 8
SENDRAWMSG
BLKDROP 4
; end function onCodeUpgrade
DROP
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro afterInitialize
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: send_gas_to
; modifier onlyRoot
;; get member sender
GETGLOB 9
;; push identifier root
GETGLOB 10
SDEQ
THROWIFNOT 101
; function afterInitialize
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
;; if
;; get member value
;; push identifier lp_root
GETGLOB 22
PARSEMSGADDR
INDEX 3
PLDU 256
EQINT 0
PUSHCONT {
	;; Remote call IDexVault.addLiquidityToken
	;; push identifier vault
	GETGLOB 11
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x47aa4332
	;; pair
	MYADDR
	STSLICER
	;; left_root
	;; push identifier left_root
	GETGLOB 14
	STSLICER
	;; right_root
	;; push identifier right_root
	GETGLOB 15
	STSLICER
	NEWC
	;; send_gas_to
	;; push identifier send_gas_to
	PUSH S3
	STSLICER
	STBREFR
	STBREFR
	ENDC
	PUSHINT 128
	SENDRAWMSG
}
PUSHCONT {
	;; transfer()
	;; push identifier send_gas_to
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	;; +
	PUSHINT 2
	ADD
	UFITS 8
	SENDRAWMSG
}
IFELSE
;; end if
; end function afterInitialize
; end modifier onlyRoot
DROP
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_configureTokenRootWallets_internal
.type	_configureTokenRootWallets_internal, @function
CALL $_configureTokenRootWallets_internal_macro$

.macro _configureTokenRootWallets_internal_macro
;; param: token_root
;; param: send_gas_to
; function _configureTokenRootWallets
;; Remote call IRootTokenContract.deployEmptyWallet
;; push identifier token_root
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x41dcd6500000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x542b1672
;; deploy_grams
PUSHINT 100000000
STUR 128
;; wallet_public_key
PUSHINT 0
STUR 256
;; owner_address
MYADDR
STSLICER
;; gas_back_address
;; push identifier send_gas_to
PUSH S2
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
;; Remote call IRootTokenContract.sendExpectedWalletAddress
;; push identifier token_root
PUSH S1
NEWC
STSLICECONST x62_
STSLICE
PUSHSLICE x405f5e100000000000000000000000000004_
STSLICER
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x55b3a9fb
;; wallet_public_key_
PUSHINT 0
STUR 256
;; owner_address_
MYADDR
STSLICER
;; to
MYADDR
STSLICER
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
;; if
;; push identifier token_root
PUSH S1
;; push identifier lp_root
GETGLOB 22
SDEQ
PUSHCONT {
	;; Remote call IRootTokenContract.sendExpectedWalletAddress
	;; push identifier token_root
	PUSH S1
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHSLICE x405f5e100000000000000000000000000004_
	STSLICER
	STSLICECONST 0
	STSLICECONST 1
	NEWC
	STSLICECONST x55b3a9fb
	;; wallet_public_key_
	PUSHINT 0
	STUR 256
	;; owner_address_
	;; push identifier vault
	GETGLOB 11
	STSLICER
	;; to
	MYADDR
	STSLICER
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
}
IFNOT
;; end if
; end function _configureTokenRootWallets
DROP2

.macro liquidityTokenRootDeployed
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode lp_root_
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: lp_root_
;; param: send_gas_to
; modifier onlyVault
;; get member sender
GETGLOB 9
;; push identifier vault
GETGLOB 11
SDEQ
THROWIFNOT 115
; function liquidityTokenRootDeployed
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
; expValue
; end expValue
;; push identifier lp_root_
PUSH S1
; colValue
SETGLOB 22
; end colValue
;; push identifier lp_root
GETGLOB 22
;; push identifier send_gas_to
PUSH S1
CALLREF {
	CALL $_configureTokenRootWallets_internal_macro$
}
;; push identifier left_root
GETGLOB 14
;; push identifier send_gas_to
PUSH S1
CALLREF {
	CALL $_configureTokenRootWallets_internal_macro$
}
;; push identifier right_root
GETGLOB 15
;; push identifier send_gas_to
PUSH S1
CALLREF {
	CALL $_configureTokenRootWallets_internal_macro$
}
;; Remote call IDexRoot.onPairCreated
;; push identifier root
GETGLOB 10
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 1
NEWC
STSLICECONST x0915e14b
;; left_root
;; push identifier left_root
GETGLOB 14
STSLICER
;; right_root
;; push identifier right_root
GETGLOB 15
STSLICER
;; send_gas_to
;; push identifier send_gas_to
PUSH S2
STSLICER
STBREFR
ENDC
PUSHINT 128
SENDRAWMSG
; end function liquidityTokenRootDeployed
; end modifier onlyVault
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro liquidityTokenRootNotDeployed
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode 
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode send_gas_to
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: 
;; param: send_gas_to
; modifier onlyVault
;; get member sender
GETGLOB 9
;; push identifier vault
GETGLOB 11
SDEQ
THROWIFNOT 115
; function liquidityTokenRootNotDeployed
;; if
;; !
;; push identifier active
GETGLOB 16
NOT
PUSHCONT {
	;; transfer()
	;; push identifier send_gas_to
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	;; +
	PUSHINT 32
	ADD
	UFITS 8
	SENDRAWMSG
}
PUSHCONT {
	PUSHINT 1000000000
	PUSHINT 0
	RAWRESERVE
	;; transfer()
	;; push identifier send_gas_to
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	ENDC
	PUSHINT 128
	;; +
	PUSHINT 2
	ADD
	UFITS 8
	SENDRAWMSG
}
IFELSE
;; end if
; end function liquidityTokenRootNotDeployed
; end modifier onlyVault
DROP2
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.macro expectedWalletAddressCallback
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
; Decode wallet
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
; Decode wallet_public_key
LDUQ 256
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDU 256
}
IFNOT
; Decode owner_address
LDMSGADDRQ
PUSHCONT {
	;; load next cell
	LDREF
	ENDS
	CTOS
	LDMSGADDR
}
IFNOT
ENDS
;; param: wallet
;; param: wallet_public_key
;; param: owner_address
; function expectedWalletAddressCallback
;; push identifier wallet_public_key
PUSH S1
EQINT 0
THROWIFNOT 100
FALSE
;; decl: need_set_callback
;; if
;; push identifier owner_address
PUSH S1
MYADDR
SDEQ
PUSHCONT {
	;; if
	;; get member sender
	GETGLOB 9
	;; push identifier lp_root
	GETGLOB 22
	SDEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member value
		;; push identifier lp_wallet
		GETGLOB 17
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		EQINT 0
	}
	IF
	PUSHCONT {
		; expValue
		; end expValue
		;; push identifier wallet
		PUSH S3
		; colValue
		SETGLOB 17
		; end colValue
		; expValue
		; end expValue
		TRUE
		; colValue
		NIP
		; end colValue
	}
	PUSHCONT {
		;; if
		;; get member sender
		GETGLOB 9
		;; push identifier left_root
		GETGLOB 14
		SDEQ
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; get member value
			;; push identifier left_wallet
			GETGLOB 18
			PARSEMSGADDR
			INDEX 3
			PLDU 256
			EQINT 0
		}
		IF
		PUSHCONT {
			; expValue
			; end expValue
			;; push identifier wallet
			PUSH S3
			; colValue
			SETGLOB 18
			; end colValue
			; expValue
			; end expValue
			TRUE
			; colValue
			NIP
			; end colValue
		}
		PUSHCONT {
			;; if
			;; get member sender
			GETGLOB 9
			;; push identifier right_root
			GETGLOB 15
			SDEQ
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; get member value
				;; push identifier right_wallet
				GETGLOB 19
				PARSEMSGADDR
				INDEX 3
				PLDU 256
				EQINT 0
			}
			IF
			PUSHCONT {
				; expValue
				; end expValue
				;; push identifier wallet
				PUSH S3
				; colValue
				SETGLOB 19
				; end colValue
				; expValue
				; end expValue
				TRUE
				; colValue
				NIP
				; end colValue
			}
			IF
			;; end if
		}
		IFELSE
		;; end if
	}
	IFELSE
	;; end if
}
IF
;; end if
;; if
;; push identifier owner_address
PUSH S1
;; push identifier vault
GETGLOB 11
SDEQ
PUSHCONT {
	;; if
	;; get member sender
	GETGLOB 9
	;; push identifier left_root
	GETGLOB 14
	SDEQ
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member value
		;; push identifier vault_left_wallet
		GETGLOB 20
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		EQINT 0
	}
	IF
	PUSHCONT {
		; expValue
		; end expValue
		;; push identifier wallet
		PUSH S3
		; colValue
		SETGLOB 20
		; end colValue
	}
	PUSHCONT {
		;; if
		;; get member sender
		GETGLOB 9
		;; push identifier right_root
		GETGLOB 15
		SDEQ
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; get member value
			;; push identifier vault_right_wallet
			GETGLOB 21
			PARSEMSGADDR
			INDEX 3
			PLDU 256
			EQINT 0
		}
		IF
		PUSHCONT {
			; expValue
			; end expValue
			;; push identifier wallet
			PUSH S3
			; colValue
			SETGLOB 21
			; end colValue
		}
		IF
		;; end if
	}
	IFELSE
	;; end if
}
IF
;; end if
;; if
;; get member value
;; push identifier lp_wallet
GETGLOB 17
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
;; short-circuiting &&
DUP
PUSHCONT {
	DROP
	;; get member value
	;; push identifier left_wallet
	GETGLOB 18
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
	;; short-circuiting &&
	DUP
	PUSHCONT {
		DROP
		;; get member value
		;; push identifier right_wallet
		GETGLOB 19
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		NEQINT 0
		;; short-circuiting &&
		DUP
		PUSHCONT {
			DROP
			;; get member value
			;; push identifier vault_left_wallet
			GETGLOB 20
			PARSEMSGADDR
			INDEX 3
			PLDU 256
			NEQINT 0
			;; short-circuiting &&
			DUP
			PUSHCONT {
				DROP
				;; get member value
				;; push identifier vault_right_wallet
				GETGLOB 21
				PARSEMSGADDR
				INDEX 3
				PLDU 256
				NEQINT 0
			}
			IF
		}
		IF
	}
	IF
}
IF
PUSHCONT {
	; expValue
	; end expValue
	TRUE
	; colValue
	SETGLOB 16
	; end colValue
}
IF
;; end if
;; if
;; push identifier need_set_callback
DUP
PUSHCONT {
	;; Remote call ITONTokenWallet.setReceiveCallback
	;; push identifier wallet
	PUSH S3
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 109
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x71eee875
	;; receive_callback
	MYADDR
	STSLICER
	;; allow_non_notifiable
	FALSE
	STIR 1
	ENDC
	PUSHINT 64
	SENDRAWMSG
}
IF
;; end if
DROP
; end function expectedWalletAddressCallback
BLKDROP 3
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	_solveQuadraticEquationPQ_internal
.type	_solveQuadraticEquationPQ_internal, @function
CALL $_solveQuadraticEquationPQ_internal_macro$

.macro _solveQuadraticEquationPQ_internal_macro
;; param: p
;; param: q
;; ret param: retParam@0
PUSHINT 0
; function _solveQuadraticEquationPQ
PUSHCONT {
	;; push identifier p
	PUSH S2
	;; push identifier p
	PUSH S3
	PUSHINT 4
	MULDIV
	UFITS 256
	;; +
	;; push identifier q
	PUSH S2
	ADD
	;; decl: D
	;; push identifier D
	DUP
	CALLREF {
		CALL $_sqrt_internal_macro$
	}
	;; decl: Dsqrt
	;; if
	;; push identifier Dsqrt
	DUP
	;; >
	;; push identifier p
	PUSH S5
	;; /
	PUSHINT 2
	DIV
	GREATER
	PUSHCONT {
		;; return
		;; push identifier Dsqrt
		DUP
		;; -
		;; push identifier p
		PUSH S5
		;; /
		PUSHINT 2
		DIV
		SUB
		UFITS 256
		;; uint128
		UFITS 128
		BLKDROP2 1, 3
		ROTREV
		DROP2
		RET
	}
	PUSHCONT {
		;; return
		;; push identifier p
		PUSH S4
		;; /
		PUSHINT 2
		DIV
		;; -
		;; push identifier Dsqrt
		PUSH S1
		SUB
		UFITS 256
		;; uint128
		UFITS 128
		BLKDROP2 1, 3
		ROTREV
		DROP2
		RET
	}
	CONDSEL
	JMPX
	;; end if
	DROP2
}
CALLX
; end function _solveQuadraticEquationPQ
BLKDROP2 2, 1

.globl	_sqrt_internal
.type	_sqrt_internal, @function
CALL $_sqrt_internal_macro$

.macro _sqrt_internal_macro
;; param: x
;; ret param: retParam@0
PUSHINT 0
; function _sqrt
PUSHCONT {
	;; if
	FALSE ; decl return flag
	;; push identifier x
	PUSH S2
	EQINT 0
	PUSHCONT {
		;; return
		PUSHINT 0
		BLKDROP2 1, 2
		SWAP
		DROP
		PUSHINT 4
		RET
	}
	PUSHCONT {
		;; if
		;; push identifier x
		PUSH S2
		;; <=
		PUSHINT 3
		LEQ
		PUSHCONT {
			;; return
			PUSHINT 1
			BLKDROP2 1, 2
			SWAP
			DROP
			PUSHINT 4
			RET
		}
		IFJMP
		;; end if
	}
	IFELSE
	EQINT 4
	IFRET
	;; end if
	;; push identifier x
	PUSH S1
	;; +
	PUSHINT 1
	ADD
	;; /
	PUSHINT 2
	DIV
	;; decl: z
	;; push identifier x
	PUSH S2
	;; decl: y
	; while
	PUSHCONT {
		;; push identifier z
		PUSH S1
		;; <
		;; push identifier y
		PUSH S1
		LESS
	}
	PUSHCONT {
		; expValue
		; end expValue
		;; push identifier z
		PUSH S1
		; colValue
		NIP
		; end colValue
		; expValue
		; end expValue
		;; push identifier x
		PUSH S3
		;; /
		;; push identifier z
		PUSH S2
		DIV
		;; +
		;; push identifier z
		PUSH S2
		ADD
		;; /
		PUSHINT 2
		DIV
		; colValue
		POP S2
		; end colValue
	}
	WHILE
	; end while
	;; return
	;; push identifier y
	DUP
	BLKDROP2 1, 3
	ROTREV
	DROP2
}
CALLX
; end function _sqrt
NIP

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 14
GETGLOB 15
GETGLOB 17
REVERSE 4, 0
STSLICE
STSLICE
STSLICE
NEWC
GETGLOB 18
GETGLOB 19
GETGLOB 20
REVERSE 4, 0
STSLICE
STSLICE
STSLICE
NEWC
GETGLOB 21
GETGLOB 22
GETGLOB 23
GETGLOB 24
GETGLOB 25
REVERSE 6, 0
STSLICE
STSLICE
STU 128
STU 128
STU 128
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 16
GETGLOB 26
GETGLOB 27
REVERSE 11, 0
STBREF
STBREF
STBREF
STSLICE
STSLICE
STU 32
STREF
STI 1
STU 16
STU 16
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDMSGADDR
LDMSGADDR
SETGLOB 17
SETGLOB 15
SETGLOB 14
LDREFRTOS
LDMSGADDR
LDMSGADDR
SETGLOB 20
SETGLOB 19
SETGLOB 18
LDREFRTOS
LDMSGADDR
LDMSGADDR
LDU 128
LDU 128
PLDU 128
SETGLOB 25
SETGLOB 24
SETGLOB 23
SETGLOB 22
SETGLOB 21
LDMSGADDR
LDMSGADDR
LDU 32
LDREF
LDI 1
LDU 16
PLDU 16
SETGLOB 27
SETGLOB 26
SETGLOB 16
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDMSGADDR
	LDMSGADDR
	SETGLOB 17
	SETGLOB 15
	SETGLOB 14
	LDREFRTOS
	LDMSGADDR
	LDMSGADDR
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	LDREFRTOS
	LDMSGADDR
	LDMSGADDR
	LDU 128
	LDU 128
	PLDU 128
	SETGLOB 25
	SETGLOB 24
	SETGLOB 23
	SETGLOB 22
	SETGLOB 21
	LDMSGADDR
	LDMSGADDR
	LDU 32
	LDREF
	LDI 1
	LDU 16
	PLDU 16
	SETGLOB 27
	SETGLOB 26
	SETGLOB 16
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 10
	; init vault
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 11
	; init current_version
	PUSHINT 0
	SETGLOB 12
	; init platform_code
	NEWC
	ENDC
	SETGLOB 13
	; init left_root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init right_root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; init active
	PUSHINT 0
	SETGLOB 16
	; init lp_wallet
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 17
	; init left_wallet
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 18
	; init right_wallet
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 19
	; init vault_left_wallet
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 20
	; init vault_right_wallet
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 21
	; init lp_root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 22
	; init lp_supply
	PUSHINT 0
	SETGLOB 23
	; init left_balance
	PUSHINT 0
	SETGLOB 24
	; init right_balance
	PUSHINT 0
	SETGLOB 25
	; init fee_numerator
	PUSHINT 0
	SETGLOB 26
	; init fee_denominator
	PUSHINT 0
	SETGLOB 27
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
LDU 4       ; bounced tail
LDMSGADDR   ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
; beg set default params for responsible func
GETGLOB 4
; bounce
TRUE
SETINDEXQ 1
; tons
PUSHINT 10000000
SETINDEXQ 2
; currency
NULL
SETINDEXQ 3
; flag
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
; end set default params for responsible func
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
DUP        ; isEmpty isEmpty
PUSHCONT {
	DROP    ;
	PUSH S1 ; body
	LDU 32  ; funcId body'
	PUSH S1 ; funcId body' funcId
	EQINT 0 ; funcId body' isZero
	DUP     ; funcId body' isZero isZero
	PUSHCONT {
 		; funcId body' isZero
		BLKDROP2 2, 1; isZero
	}
	IF
}
IFNOT
; [funcId body'] doReceive
PUSHCONT {
	CALL $receive_macro$
}
IFJMP
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2 ; funcId and restSlice
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.internal-alias :main_external, -1
.internal :main_external
PUSHINT -1 ; main_external trans id
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 9
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice
	LDU 1 ; signatureSlice hashMsgSlice havePubkey msgSlice
	SWAP  ; signatureSlice hashMsgSlice msgSlice havePubkey
	PUSHCONT {
		LDU 256       ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG s3
		SWAP
	}
	PUSHCONT {
		XCHG s2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
PUSHCONT {
	LDU 1      ; havePubkey msgSlice
	SWAP       ; msgSlice havePubkey
	THROWIF 58 ; msgSlice
}
IFELSE
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU 32  ; expireAt msgSlice
SWAP    ; msgSlice expireAt
NOW     ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
PUSHCONT {
	DROP2 ; funcId and restSlice
	CALLREF {
		CALL $fallback_macro$
	}
}
IF

.macro platform_code
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 13
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xe6d44df5
	PUSH S1
	STREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro lp_wallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 17
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xc1d83fff
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro left_wallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 18
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xf49ba38d
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro right_wallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 19
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x8509bd7a
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro vault_left_wallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 20
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xbb4b926a
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro vault_right_wallet
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 21
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xef92bcfb
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro lp_root
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 22
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x8288c85c
	PUSH S1
	STSLICER
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro lp_supply
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 23
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xa62d4bdc
	PUSH S1
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro left_balance
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 24
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xe53025de
	PUSH S1
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro right_balance
DROP
ENDS
CALLREF {
	CALL $c4_to_c7$
}
;; emitting 1 value
DUP
EQINT -1
PUSHCONT {
	GETGLOB 25
	NEWC
	PUSHSLICE xc0000000000000000000000002_
	STSLICER
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST x971daa54
	PUSH S1
	STUR 128
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 439353572
LEQ
PUSHCONT {
	DUP
	PUSHINT 42518620
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1500968
		EQUAL
		IFJMPREF {
			CALL $getBalances$
		}
		DUP
		PUSHINT 6894650
		EQUAL
		IFJMPREF {
			CALL $buildCrossPairExchangePayload$
		}
		DUP
		PUSHINT 42518620
		EQUAL
		IFJMPREF {
			CALL $lp_root$
		}
	}
	IFJMP
	DUP
	PUSHINT 230901566
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 84524410
		EQUAL
		IFJMPREF {
			CALL $right_wallet$
		}
		DUP
		PUSHINT 115515182
		EQUAL
		IFJMPREF {
			CALL $resetGas$
		}
		DUP
		PUSHINT 230901566
		EQUAL
		IFJMPREF {
			CALL $buildDepositLiquidityPayload$
		}
	}
	IFJMP
	DUP
	PUSHINT 302200776
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 278871569
		EQUAL
		IFJMPREF {
			CALL $expectedWithdrawLiquidity$
		}
		DUP
		PUSHINT 292780380
		EQUAL
		IFJMPREF {
			CALL $expectedWalletAddressCallback$
		}
		DUP
		PUSHINT 302200776
		EQUAL
		IFJMPREF {
			CALL $expectedExchange$
		}
	}
	IFJMP
	DUP
	PUSHINT 439353572
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 387820116
		EQUAL
		IFJMPREF {
			CALL $right_balance$
		}
		DUP
		PUSHINT 439353572
		EQUAL
		IFJMPREF {
			CALL $getTokenRoots$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 1104691199
LEQ
PUSHCONT {
	DUP
	PUSHINT 654630305
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 565050858
		EQUAL
		IFJMPREF {
			CALL $isActive$
		}
		DUP
		PUSHINT 640502748
		EQUAL
		IFJMPREF {
			CALL $lp_supply$
		}
		DUP
		PUSHINT 654630305
		EQUAL
		IFJMPREF {
			CALL $buildExchangePayload$
		}
	}
	IFJMP
	DUP
	PUSHINT 775880647
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 721356139
		EQUAL
		IFJMPREF {
			CALL $afterInitialize$
		}
		DUP
		PUSHINT 766070063
		EQUAL
		IFJMPREF {
			CALL $getVersion$
		}
		DUP
		PUSHINT 775880647
		EQUAL
		IFJMPREF {
			CALL $crossPairExchange$
		}
	}
	IFJMP
	DUP
	PUSHINT 994808426
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 782424727
		EQUAL
		IFJMPREF {
			CALL $expectedSpendAmount$
		}
		DUP
		PUSHINT 915529415
		EQUAL
		IFJMPREF {
			CALL $setFeeParams$
		}
		DUP
		PUSHINT 994808426
		EQUAL
		IFJMPREF {
			CALL $vault_left_wallet$
		}
	}
	IFJMP
	DUP
	PUSHINT 1104691199
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1025233701
		EQUAL
		IFJMPREF {
			CALL $getVault$
		}
		DUP
		PUSHINT 1104691199
		EQUAL
		IFJMPREF {
			CALL $lp_wallet$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 1725189621
LEQ
PUSHCONT {
	DUP
	PUSHINT 1417804635
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1125423194
		EQUAL
		IFJMPREF {
			CALL $liquidityTokenRootDeployed$
		}
		DUP
		PUSHINT 1367902022
		EQUAL
		IFJMPREF {
			CALL $liquidityTokenRootNotDeployed$
		}
		DUP
		PUSHINT 1417804635
		EQUAL
		IFJMPREF {
			CALL $withdrawLiquidity$
		}
	}
	IFJMP
	DUP
	PUSHINT 1497440185
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1439800549
		EQUAL
		IFJMPREF {
			CALL $expectedDepositLiquidity$
		}
		DUP
		PUSHINT 1490576934
		EQUAL
		IFJMPREF {
			CALL $getFeeParams$
		}
		DUP
		PUSHINT 1497440185
		EQUAL
		IFJMPREF {
			CALL $tokensReceivedCallback$
		}
	}
	IFJMP
	DUP
	PUSHINT 1688565960
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1602680363
		EQUAL
		IFJMPREF {
			CALL $buildWithdrawLiquidityPayload$
		}
		DUP
		PUSHINT 1631898885
		EQUAL
		IFJMPREF {
			CALL $getVaultWallets$
		}
		DUP
		PUSHINT 1688565960
		EQUAL
		IFJMPREF {
			CALL $upgrade$
		}
	}
	IFJMP
	DUP
	PUSHINT 1725189621
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1697654238
		EQUAL
		IFJMPREF {
			CALL $left_balance$
		}
		DUP
		PUSHINT 1725189621
		EQUAL
		IFJMPREF {
			CALL $platform_code$
		}
	}
	IFJMP
}
IFJMP
DUP
PUSHINT 2129746131
LEQ
PUSHCONT {
	DUP
	PUSHINT 1789196393
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1756716863
		EQUAL
		IFJMPREF {
			CALL $constructor$
		}
		DUP
		PUSHINT 1789196393
		EQUAL
		IFJMPREF {
			CALL $exchange$
		}
	}
	IFJMP
	DUP
	PUSHINT 1871887611
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1844892595
		EQUAL
		IFJMPREF {
			CALL $getTokenWallets$
		}
		DUP
		PUSHINT 1871887611
		EQUAL
		IFJMPREF {
			CALL $vault_right_wallet$
		}
	}
	IFJMP
	DUP
	PUSHINT 1956357005
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 1950458398
		EQUAL
		IFJMPREF {
			CALL $getRoot$
		}
		DUP
		PUSHINT 1956357005
		EQUAL
		IFJMPREF {
			CALL $left_wallet$
		}
	}
	IFJMP
	DUP
	PUSHINT 2129746131
	LEQ
	PUSHCONT {
		DUP
		PUSHINT 2066445604
		EQUAL
		IFJMPREF {
			CALL $checkPair$
		}
		DUP
		PUSHINT 2129746131
		EQUAL
		IFJMPREF {
			CALL $depositLiquidity$
		}
	}
	IFJMP
}
IFJMP
