.macro constructor
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
;; constructor protection
GETGLOB 6
THROWIF 51
PUSHINT 1
SETGLOB 6
;; end constructor protection
; Decode input parameters
ENDS
; constructor NewDexVault
THROW 100
; end constructor NewDexVault
CALLREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
;; param: data
; function onCodeUpgrade
;; set default state vars
PUSHINT 0
SETGLOB 10
NEWC
ENDC
SETGLOB 11
PUSHINT 0
SETGLOB 12
NEWC
ENDC
SETGLOB 13
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 14
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 15
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 16
PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
SETGLOB 17
NEWC
ENDC
SETGLOB 18
;; end set default state vars
;; push identifier data
DUP
CTOS
;; decl: s
; expValue
DUP
; end expValue
;; decode address
LDMSGADDR
;; decode address
LDMSGADDR
; colValue
POP S3
; end colValue
SWAP
; expValue
; end expValue
; colValue
SETGLOB 14
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 17
; end colValue
; expValue
DUP
; end expValue
LDREF
; colValue
POP S2
; end colValue
;; decl: owners_data
;; push identifier owners_data
DUP
CTOS
;; decode address
LDMSGADDR
;; decode address
LDMSGADDR
; colValue
DROP
SWAP
; expValue
; end expValue
; colValue
SETGLOB 15
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 16
; end colValue
; expValue
PUSH S1
; end expValue
LDREF
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 11
; end colValue
; expValue
PUSH S1
; end expValue
LDREF
; colValue
POP S3
; end colValue
; expValue
; end expValue
; colValue
SETGLOB 13
; end colValue
; expValue
; end expValue
TRUE
; colValue
SETGLOB 12
; end colValue
; expValue
; end expValue
PUSHSLICE x4e6577205661756c74
NEWC
STSLICE
ENDC
; colValue
SETGLOB 18
; end colValue
;; transfer()
;; push identifier owner
GETGLOB 15
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 109
STZEROES
STSLICECONST 0
STSLICECONST 0
ENDC
PUSHINT 128
SENDRAWMSG
DROP2
; end function onCodeUpgrade
DROP
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro newFunc
DROP
GETGLOB 1
ISNULL
IFREF {
	CALL $c4_to_c7$
}
; Decode input parameters
ENDS
CALLREF {
	CALL $newFunc_internal_macro$
}
;; emitting 1 value(s)
PUSH S1
EQINT -1
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 96
	STZEROES
	STSLICECONST 0
	STSLICECONST 0
	STSLICECONST xc113206e
	PUSH S1
	STREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
IF
DROP
IFREF {
	CALL $c7_to_c4$
}
TRUE
SETGLOB 7

.globl	newFunc_internal
.type	newFunc_internal, @function
CALL $newFunc_internal_macro$

.macro newFunc_internal_macro
; function newFunc
;; return
;; push identifier newTestField
GETGLOB 18
; end function newFunc

.macro c7_to_c4
GETGLOB 2
NEWC
STU 256
GETGLOB 3
STUR 64
GETGLOB 6
STUR 1
NEWC
GETGLOB 16
GETGLOB 17
XCHG s2
STSLICE
STSLICE
GETGLOB 10
GETGLOB 11
GETGLOB 12
GETGLOB 13
GETGLOB 14
GETGLOB 15
GETGLOB 18
REVERSE 9, 0
STBREF
STU 32
STREF
STI 1
STREF
STSLICE
STSLICE
STREF
ENDC
POP C4

.macro c4_to_c7
PUSHROOT
CTOS        ; c4
LDU 256      ; pubkey c4
LDU 64      ; pubkey timestamp c4
LDU 1       ; pubkey [timestamp] constructor_flag memory
LDREFRTOS
LDMSGADDR
SETGLOB 17
SETGLOB 16
LDU 32
LDREF
LDI 1
LDREF
LDMSGADDR
LDMSGADDR
PLDREF
SETGLOB 18
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
TRUE
SETGLOB 1   ; pubkey [timestamp] constructor_flag
SETGLOB 6   ; pubkey [timestamp]
SETGLOB 3   ; D
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS        ; c4
DUP        ; c4 c4
SBITS      ; c4 bits
GTINT 1    ; c4 bits>1
PUSHCONT {
	LDU 256      ; pubkey c4
	LDU 64      ; pubkey timestamp c4
	LDU 1       ; pubkey [timestamp] constructor_flag memory
	LDREFRTOS
	LDMSGADDR
	SETGLOB 17
	SETGLOB 16
	LDU 32
	LDREF
	LDI 1
	LDREF
	LDMSGADDR
	LDMSGADDR
	PLDREF
	SETGLOB 18
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	TRUE
	SETGLOB 1   ; pubkey [timestamp] constructor_flag
	SETGLOB 6   ; pubkey [timestamp]
	SETGLOB 3   ; D
	SETGLOB 2
}
PUSHCONT {
	PLDDICT   ; D
	; init _nonce
	PUSHINT 1
	PUSH S1
	PUSHINT 64
	DICTUGET
	PUSHCONT {
		PLDU 32
	}
	PUSHCONT {
		PUSHINT 0
	}
	IFELSE
	SETGLOB 10
	; init platform_code
	NEWC
	ENDC
	SETGLOB 11
	; init has_platform_code
	PUSHINT 0
	SETGLOB 12
	; init lp_token_pending_code
	NEWC
	ENDC
	SETGLOB 13
	; init root
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 14
	; init owner
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 15
	; init pending_owner
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 16
	; init token_factory
	PUSHSLICE x8000000000000000000000000000000000000000000000000000000000000000001_
	SETGLOB 17
	; init newTestField
	NEWC
	ENDC
	SETGLOB 18
	; set contract pubkey
	PUSHINT 0
	SWAP
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
	PUSHINT 0 ; constructor_flag
	SETGLOB 6
	TRUE
	SETGLOB 1
}
IFELSE

.internal-alias :main_internal, 0
.internal :main_internal
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Function: main_internal
;; param: contract_balance
;; param: msg_balance
;; param: int_msg_info
;; param: msg_body_slice
PUSHINT 0  ; main_external trans id
PUSH S2
CTOS
PLDU 4
MODPOW2 1
IFRET
PUSH S1    ; body
SEMPTY     ; isEmpty
IFRET
PUSH S1 ; body
LDU 32  ; funcId body'
PUSH S1 ; funcId body' funcId
IFNOTRET
SWAP
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.internal-alias :main_external, -1
.internal :main_external
PUSHINT -1 ; main_external trans id
PUSH S1
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHINT 512
	LDSLICEX ; signatureSlice msgSlice
	DUP      ; signatureSlice msgSlice msgSlice
	HASHSU   ; signatureSlice msgSlice hashMsgSlice
	ROT
	GETGLOB 2
	CHKSIGNU      ; msgSlice isSigned
	THROWIFNOT 40 ; msgSlice
}
IF
LDU 64                         ; timestamp msgSlice
SWAP                           ; msgSlice timestamp
CALL $replay_protection_macro$ ; msgSlice
LDU  32 ; funcId body
SWAP    ; body funcId
CALLREF {
	CALL $public_function_selector$
}
GETGLOB 7
ISNULL
THROWIF 60

.macro platform_code
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 11
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xe6d44df5
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro lp_token_pending_code
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 13
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xba6fedbf
PUSH S1
STREFR
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro root
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 14
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xb7295e20
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro owner
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 15
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xdf0bcfde
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro pending_owner
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 16
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xbe875120
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro token_factory
CALLREF {
	CALL $c4_to_c7$
}
GETGLOB 17
NEWC
PUSHSLICE xc0000000000000000000000002_
STSLICER
STSLICECONST 0
STSLICECONST 0
STSLICECONST xfa58c34a
PUSH S1
STSLICER
ENDC
PUSHINT 0
SENDRAWMSG
TRUE
SETGLOB 7

.macro public_function_selector
DUP
PUSHINT 980413887
LEQ
PUSHCONT {
	DUP
	PUSHINT 925457952
	EQUAL
	IFJMPREF {
		CALL $root$
	}
	DUP
	PUSHINT 980413887
	EQUAL
	IFJMPREF {
		CALL $lp_token_pending_code$
	}
}
IFJMP
DUP
PUSHINT 1091772526
LEQ
PUSHCONT {
	DUP
	PUSHINT 1049055520
	EQUAL
	IFJMPREF {
		CALL $pending_owner$
	}
	DUP
	PUSHINT 1091772526
	EQUAL
	IFJMPREF {
		CALL $newFunc$
	}
}
IFJMP
DUP
PUSHINT 1725189621
LEQ
PUSHCONT {
	DUP
	PUSHINT 1594609630
	EQUAL
	IFJMPREF {
		CALL $owner$
	}
	DUP
	PUSHINT 1725189621
	EQUAL
	IFJMPREF {
		CALL $platform_code$
	}
}
IFJMP
DUP
PUSHINT 2052637514
LEQ
PUSHCONT {
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 2052637514
	EQUAL
	IFJMPREF {
		CALL $token_factory$
	}
}
IFJMP
