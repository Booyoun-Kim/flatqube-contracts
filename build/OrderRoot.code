.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc ../contracts/OrderRoot.tsol, 37
THROW 100
.loc ../contracts/OrderRoot.tsol, 0

.macro onTokenWallet
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 47
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $onTokenWallet_e6d1bd58_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onTokenWallet_e6d1bd58_internal_macro
.loc ../contracts/OrderRoot.tsol, 48
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 11
SDEQ
AND
THROWIFNOT 310
.loc ../contracts/OrderRoot.tsol, 52
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 53
SETGLOB 16
.loc ../contracts/OrderRoot.tsol, 55
GETGLOB 17
GETGLOB 11
MYADDR
GETGLOB 10
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 3
NEWC
STSLICECONST x3b71dce4
STSLICE
ROTREV
NEWC
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 0

.macro onTokenWalletReceive
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 61
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $onTokenWalletReceive_aebd8150_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onTokenWalletReceive_aebd8150_internal_macro
.loc ../contracts/OrderRoot.tsol, 61
DROP
.loc ../contracts/OrderRoot.tsol, 0

.macro on_bounce_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 64
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 65
PLDU 32
.loc ../contracts/OrderRoot.tsol, 67
PUSHINT 837670087
EQUAL
GETGLOB 9
GETGLOB 11
SDEQ
AND
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 71
	GETGLOB 17
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	ADDCONST 32
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 0
}
IF
.loc ../contracts/OrderRoot.tsol, 0
DUP
IFREF {
	CALL $upd_only_time_in_c4$
}

.macro getVersion
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 79
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $getVersion_0d8e6e2c_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2913553711
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 32
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getVersion_0d8e6e2c_internal_macro
.loc ../contracts/OrderRoot.tsol, 80
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
GETGLOB 12
.loc ../contracts/OrderRoot.tsol, 0

.macro getSpentToken
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 83
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $getSpentToken_a7b67db9_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x830316d5
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getSpentToken_a7b67db9_internal_macro
.loc ../contracts/OrderRoot.tsol, 84
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
GETGLOB 11
.loc ../contracts/OrderRoot.tsol, 0

.macro getFactory
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 87
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $getFactory_88cc58e4_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x90d09e2d
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getFactory_88cc58e4_internal_macro
.loc ../contracts/OrderRoot.tsol, 88
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
GETGLOB 10
.loc ../contracts/OrderRoot.tsol, 0

.macro buildPayload
DROP
GETGLOB 6
THROWIFNOT 76
.loc ../contracts/OrderRoot.tsol, 91
OVER
PUSHCONT {
	LDU 64
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 64
}
IFELSE
LDMSGADDR
LDU 128
LDU 128
LDREF
ENDS
CTOS
LDU 256
LDU 256
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $buildPayload_28e36969_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2827922175
	STUR 130
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro buildPayload_28e36969_internal_macro
.loc ../contracts/OrderRoot.tsol, 101
SWAP
NEWC
STU 256
.loc ../contracts/OrderRoot.tsol, 102
STU 256
.loc ../contracts/OrderRoot.tsol, 105
ROLL 4
NEWC
STU 64
.loc ../contracts/OrderRoot.tsol, 106
ROLL 4
STSLICER
.loc ../contracts/OrderRoot.tsol, 107
ROLL 3
STUR 128
.loc ../contracts/OrderRoot.tsol, 108
XCHG S1, S2
STU 128
.loc ../contracts/OrderRoot.tsol, 109
STBREF
.loc ../contracts/OrderRoot.tsol, 111
ENDC
.loc ../contracts/OrderRoot.tsol, 0

.macro onAcceptTokensTransfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 114
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $onAcceptTokensTransfer_e63f2284_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensTransfer_e63f2284_internal_macro
.loc ../contracts/OrderRoot.tsol, 122
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 123
DUP
CTOS
.loc ../contracts/OrderRoot.tsol, 124
PUSHINT 0
.loc ../contracts/OrderRoot.tsol, 125
OVER
SBITS
GTINT 63
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 126
	OVER
	LDU 64
	POP S3
	NIP
	.loc ../contracts/OrderRoot.tsol, 0
}
IF
.loc ../contracts/OrderRoot.tsol, 129
OVER
LDREFRTOS
SWAP
POP S3
.loc ../contracts/OrderRoot.tsol, 131
PUSH S2
SBITS
PUSHINT 523
EQUAL
OVER
SBITS
PUSHPOW2 9
EQUAL
AND
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
	DUP
	PUSHCONT {
		DROP
		GETGLOB 9
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		PUSHINT 2000000000
		GEQ
		GETGLOB 9
		GETGLOB 16
		SDEQ
		AND
	}
	IF
}
IF
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 137
	PUSH S2
	LDMSGADDR
	LDU 128
	LDU 128
	POP S6
	.loc ../contracts/OrderRoot.tsol, 143
	PUSH S3
	LDU 256
	LDU 256
	POP S6
	.loc ../contracts/OrderRoot.tsol, 148
	PUSH S11
	GETGLOB 13
	PUSH S6
	CALLREF {
		CALL $buildState_40f1ecc5_internal_macro$
	}
	.loc ../contracts/OrderRoot.tsol, 149
	GETGLOB 15
	GETGLOB 14
	GETGLOB 18
	BLKSWAP 2, 4
	SWAP
	PUSH S16
	PUSH S8
	ROLL 7
	DUP
	HASHCU
	NEWC
	STSLICECONST x801_
	STU 256
	ENDC
	CTOS
	ROLLREV 8
	PUSH S8
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 3112111703474754619475120804657301188247555
	STUR 143
	OVER
	CALLREF {
		CTOS
		LDI 1
		SWAP
		PUSHCONT {
			LDI 5
			NIP
		}
		IF
		LDI 1
		SWAP
		PUSHCONT {
			LDI 2
			NIP
		}
		IF
		LDOPTREF
		LDOPTREF
		LDDICT
		ENDS
		BLKDROP 3
	}
	STREF
	STSLICECONST 1
	ROLLREV 7
	NEWC
	STSLICECONST x5f5f989a
	STU 128
	STU 128
	STU 256
	STU 256
	ROLLREV 3
	NEWC
	STSLICE
	STREF
	STREF
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 162
	ROT
	PUSH3 S3, S11, S12
	PUSH S4
	PUSHSLICE xc0000000000000000000000001
	NEWC
	STSLICE
	ROLLREV 5
	NEWC
	STSLICECONST x76d626a2
	STSLICE
	ROLLREV 4
	NEWC
	STSLICE
	STU 128
	ROTREV
	NEWC
	STSLICE
	STU 128
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 164
	PUSH S4
	GTINT 0
	PUSHCONT {
		.loc ../contracts/OrderRoot.tsol, 165
		PUSH2 S4, S9
		FALSE
		NEWC
		STSLICECONST x6_
		STI 1
		STSLICECONST x1_
		STSLICE
		PUSHINT 12042311241760164903241885269213816626727588197185005
		STUR 175
		STU 64
		ENDC
		PUSHINT 1
		ADDCONST 2
		UFITS 8
		SENDRAWMSG
		.loc ../contracts/OrderRoot.tsol, 0
	}
	IF
	.loc ../contracts/OrderRoot.tsol, 172
	PUSHINT 200000000
	PUSH S10
	ROLL 4
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 2868722788230934574387753789225109188247553
	STUR 143
	ROTREV
	PUSHSLICE x31edd4c7553285d0
	NEWC
	STSLICE
	STSLICE
	STU 128
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 178
	PUSH S5
	TRUE
	PUSH2 S8, S3
	PUSHINT 200000000
	LEQ
	PUSHCONT {
		PUSH S4
	}
	PUSHCONT {
		PUSHINT 200000000
	}
	IFELSE
	ROLL 4
	PUSH S13
	GETGLOB 9
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 6
	NEWC
	STSLICECONST x73e22143
	STU 128
	STSLICE
	STU 128
	ROLLREV 3
	NEWC
	STSLICE
	STI 1
	STREF
	STBREFR
	STBREFR
	ENDC
	PUSHPOW2 7
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 0
	DROP
}
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 190
	PUSHREF {
		.blob xc0000000000000000000000000327d58fc
	}
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 191
	OVER
	GTINT 0
	PUSHCONT {
		.loc ../contracts/OrderRoot.tsol, 192
		PUSH2 S1, S6
		FALSE
		NEWC
		STSLICECONST x6_
		STI 1
		STSLICECONST x1_
		STSLICE
		PUSHINT 12042311241760164903241885269213816626727588201921448
		STUR 175
		STU 64
		ENDC
		PUSHINT 1
		ADDCONST 2
		UFITS 8
		SENDRAWMSG
		.loc ../contracts/OrderRoot.tsol, 0
	}
	IF
	.loc ../contracts/OrderRoot.tsol, 199
	PUSHREF {
	}
	.loc ../contracts/OrderRoot.tsol, 200
	TRUE
	PUSH S6
	PUSHINT 0
	PUSH2 S10, S11
	GETGLOB 9
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 6
	NEWC
	STSLICECONST x73e22143
	STU 128
	STSLICE
	STU 128
	ROLLREV 3
	NEWC
	STSLICE
	STI 1
	STREF
	STBREFR
	STBREFR
	ENDC
	PUSHPOW2 7
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 0
}
IFELSE
BLKDROP 9
.loc ../contracts/OrderRoot.tsol, 0

.macro expectedAddressOrder
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 215
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 64
LDU 64
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $expectedAddressOrder_046f61e6_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xcd353da6
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro expectedAddressOrder_046f61e6_internal_macro
.loc ../contracts/OrderRoot.tsol, 229
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHPOW2 7
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
ROLL 7
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
ROLL 6
PUSHINT 2
ROT
PUSHINT 64
DICTUSET
ROLL 5
PUSHINT 3
ROT
PUSHINT 64
DICTUSET
ROLL 4
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
ROLL 3
PUSHINT 5
ROT
PUSHINT 64
DICTUSET
ROT
NEWC
STU 64
PUSHINT 6
ROT
PUSHINT 64
DICTUSETB
SWAP
NEWC
STU 64
PUSHINT 7
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
GETGLOB 13
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
.loc ../contracts/OrderRoot.tsol, 0

.globl	buildState_40f1ecc5_internal
.type	buildState_40f1ecc5_internal, @function
CALL $buildState_40f1ecc5_internal_macro$

.macro buildState_40f1ecc5_internal_macro
.loc ../contracts/OrderRoot.tsol, 251
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
MYADDR
PUSHINT 2
ROT
PUSHINT 64
DICTUSET
ROLL 3
PUSHINT 3
ROT
PUSHINT 64
DICTUSET
GETGLOB 11
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
SWAP
PUSHINT 5
ROT
PUSHINT 64
DICTUSET
LTIME
NEWC
STU 64
PUSHINT 6
ROT
PUSHINT 64
DICTUSETB
NOW
NEWC
STU 64
PUSHINT 7
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
SWAP
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc ../contracts/OrderRoot.tsol, 0

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 266
OVER
PUSHCONT {
	LDREF
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDREF
	LDU 32
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $upgrade_fb9d1513_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro upgrade_fb9d1513_internal_macro
.loc ../contracts/OrderRoot.tsol, 40
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 10
SDEQ
AND
THROWIFNOT 312
.loc ../contracts/OrderRoot.tsol, 271
GETGLOB 12
PUSH S2
EQUAL
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 272
	GETPARAM 7
	FIRST
	DEPTH
	ADDCONST -2
	PICK
	SUB
	UFITS 128
	PUSHINT 0
	RAWRESERVE
	.loc ../contracts/OrderRoot.tsol, 273
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
}
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 275
	OVER
	PUSHSLICE xc000000000000000000000000071df5078
	NEWC
	STSLICE
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 278
	GETGLOB 11
	NEWC
	STSLICE
	.loc ../contracts/OrderRoot.tsol, 279
	GETGLOB 10
	STSLICER
	.loc ../contracts/OrderRoot.tsol, 280
	GETGLOB 12
	STUR 32
	.loc ../contracts/OrderRoot.tsol, 281
	GETGLOB 13
	SWAP
	STREF
	.loc ../contracts/OrderRoot.tsol, 282
	GETGLOB 14
	SWAP
	STREF
	.loc ../contracts/OrderRoot.tsol, 283
	GETGLOB 15
	SWAP
	STREF
	.loc ../contracts/OrderRoot.tsol, 286
	GETGLOB 16
	NEWC
	STSLICE
	.loc ../contracts/OrderRoot.tsol, 287
	GETGLOB 17
	STSLICER
	.loc ../contracts/OrderRoot.tsol, 288
	GETGLOB 18
	STSLICER
	.loc ../contracts/OrderRoot.tsol, 289
	STBREFR
	.loc ../contracts/OrderRoot.tsol, 291
	PUSH S3
	SETCODE
	.loc ../contracts/OrderRoot.tsol, 292
	PUSH S3
	CTOS
	DUP
	PUSHSLICE x8adb35
	SDEQ
	PUSHCONT {
		PLDREFIDX 1
		CTOS
	}
	IF
	PLDREF
	CTOS
	BLESS
	POP C3
	.loc ../contracts/OrderRoot.tsol, 294
	ENDC
	CALLREF {
		CALL $:onCodeUpgrade$
	}
}
IFELSE
.loc ../contracts/OrderRoot.tsol, 0
BLKDROP 3

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc ../contracts/OrderRoot.tsol, 299
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 301
CTOS
.loc ../contracts/OrderRoot.tsol, 303
DUP
LDMSGADDR
LDMSGADDR
LDU 32
LDU 32
LDMSGADDR
POP S6
.loc ../contracts/OrderRoot.tsol, 306
ROT
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 307
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 10
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 11
	PUSHINT 0
	SETGLOB 12
	PUSHREF {
	}
	SETGLOB 13
	PUSHREF {
	}
	SETGLOB 14
	PUSHREF {
	}
	SETGLOB 15
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 16
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 17
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 18
	.loc ../contracts/OrderRoot.tsol, 0
}
IFNOT
.loc ../contracts/OrderRoot.tsol, 310
ROLL 3
SETGLOB 10
.loc ../contracts/OrderRoot.tsol, 311
ROT
SETGLOB 11
.loc ../contracts/OrderRoot.tsol, 312
SWAP
SETGLOB 12
.loc ../contracts/OrderRoot.tsol, 313
SETGLOB 17
.loc ../contracts/OrderRoot.tsol, 315
LDREFRTOS
NIP
.loc ../contracts/OrderRoot.tsol, 316
DUP
LDMSGADDR
POP S2
SETGLOB 18
.loc ../contracts/OrderRoot.tsol, 317
DUP
LDREF
POP S2
SETGLOB 13
.loc ../contracts/OrderRoot.tsol, 318
DUP
LDREF
POP S2
SETGLOB 14
.loc ../contracts/OrderRoot.tsol, 319
PLDREF
SETGLOB 15
.loc ../contracts/OrderRoot.tsol, 321
PUSHINT 200000000
MYADDR
GETGLOB 11
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2868722788230934574387753789225109188247553
STUR 143
ROTREV
PUSHSLICE x31edd4c749b2f6d7
NEWC
STSLICE
STSLICE
STU 128
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 330
GETGLOB 17
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 32
LDREF
LDREF
LDREF
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	PUSHREF {
	}
	BLKPUSH 2, 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	BLKPUSH 2, 0
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
ROLLREV 8
NEWC
STSLICE
STU 32
STREF
STREF
STREF
ROLLREV 3
NEWC
STSLICE
ROTREV
NEWC
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFJMPREF {
	OVER
	LDSLICE 32
	NIP
	CALL $on_bounce_macro$
}
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 766070063
LEQ
IFJMPREF {
	DUP
	PUSHINT 50534101
	EQUAL
	IFJMPREF {
		CALL $getSpentToken$
	}
	DUP
	PUSHINT 282107437
	EQUAL
	IFJMPREF {
		CALL $getFactory$
	}
	DUP
	PUSHINT 680438527
	EQUAL
	IFJMPREF {
		CALL $buildPayload$
	}
	DUP
	PUSHINT 766070063
	EQUAL
	IFJMPREF {
		CALL $getVersion$
	}
}
DUP
PUSHINT 1688565960
LEQ
IFJMPREF {
	DUP
	PUSHINT 1236465367
	EQUAL
	IFJMPREF {
		CALL $onTokenWallet$
	}
	DUP
	PUSHINT 1295334822
	EQUAL
	IFJMPREF {
		CALL $expectedAddressOrder$
	}
	DUP
	PUSHINT 1429374416
	EQUAL
	IFJMPREF {
		CALL $onTokenWalletReceive$
	}
	DUP
	PUSHINT 1688565960
	EQUAL
	IFJMPREF {
		CALL $upgrade$
	}
}
DUP
PUSHINT 1893244873
LEQ
IFJMPREF {
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
	DUP
	PUSHINT 1893244873
	EQUAL
	IFJMPREF {
		CALL $onAcceptTokensTransfer$
	}
}

