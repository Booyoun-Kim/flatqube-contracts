.version sol 0.62.0

.macro constructor
DROP
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7_with_init_storage$
}
GETGLOB 6
THROWIF 51
ENDS
.loc ../contracts/OrderRoot.tsol, 39
THROW 100
.loc ../contracts/OrderRoot.tsol, 0

.macro onTokenWallet
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 49
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $onTokenWallet_e6d1bd58_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onTokenWallet_e6d1bd58_internal_macro
.loc ../contracts/OrderRoot.tsol, 50
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 11
SDEQ
AND
THROWIFNOT 310
.loc ../contracts/OrderRoot.tsol, 54
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 55
SETGLOB 15
.loc ../contracts/OrderRoot.tsol, 57
GETGLOB 16
GETGLOB 11
MYADDR
GETGLOB 10
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 1
STUR 111
ROLLREV 3
NEWC
STSLICECONST x3b71dce4
STSLICE
ROTREV
NEWC
STSLICE
SWAP
NEWC
STSLICE
STBREFR
STBREFR
STBREFR
ENDC
PUSHPOW2 7
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 0

.macro onTokenWalletReceive
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 63
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $onTokenWalletReceive_aebd8150_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onTokenWalletReceive_aebd8150_internal_macro
.loc ../contracts/OrderRoot.tsol, 63
DROP
.loc ../contracts/OrderRoot.tsol, 0

.macro on_bounce_macro
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 66
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 67
PLDU 32
.loc ../contracts/OrderRoot.tsol, 69
PUSHINT 837670087
EQUAL
GETGLOB 9
GETGLOB 11
SDEQ
AND
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 73
	GETGLOB 16
	NEWC
	STSLICECONST x42_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	ADDCONST 32
	UFITS 8
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 0
}
IF
.loc ../contracts/OrderRoot.tsol, 0
DUP
IFREF {
	CALL $upd_only_time_in_c4$
}

.macro getFeeParams
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 81
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $getFeeParams_be6fc181_internal_macro$
}
PUSH S2
PUSHCONT {
	PUSH S4
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	XCHG S2
	NEWC
	STSLICECONST xc1d780d1
	SWAP
	UNPAIR
	XCHG S2
	STU 128
	STU 128
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	XCHG S2
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	SWAP
	UNPAIR
	XCHG S2
	STU 128
	STU 128
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getFeeParams_be6fc181_internal_macro
.loc ../contracts/OrderRoot.tsol, 82
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
GETGLOB 18
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
.loc ../contracts/OrderRoot.tsol, 0

.macro getVersion
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 85
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $getVersion_0d8e6e2c_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 2913553711
	STUR 130
	STU 32
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 106
	STZEROES
	GETGLOB 4
	INDEX 5
	STUR 32
	STU 32
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getVersion_0d8e6e2c_internal_macro
.loc ../contracts/OrderRoot.tsol, 86
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
GETGLOB 12
.loc ../contracts/OrderRoot.tsol, 0

.macro getSpentToken
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 89
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $getSpentToken_a7b67db9_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x830316d5
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getSpentToken_a7b67db9_internal_macro
.loc ../contracts/OrderRoot.tsol, 90
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
GETGLOB 11
.loc ../contracts/OrderRoot.tsol, 0

.macro getFactory
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 93
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $getFactory_88cc58e4_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST x90d09e2d
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro getFactory_88cc58e4_internal_macro
.loc ../contracts/OrderRoot.tsol, 94
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
FALSE
SETINDEXQ 1
PUSHINT 64
SETINDEXQ 4
SETGLOB 4
GETGLOB 10
.loc ../contracts/OrderRoot.tsol, 0

.macro setFeeParams
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 97
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDU 128
ROTREV
PAIR
SWAP
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $setFeeParams_c19d7217_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setFeeParams_c19d7217_internal_macro
.loc ../contracts/OrderRoot.tsol, 42
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 10
SDEQ
AND
THROWIFNOT 312
.loc ../contracts/OrderRoot.tsol, 98
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 99
SETGLOB 18
.loc ../contracts/OrderRoot.tsol, 100
GETGLOB 10
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 0

.macro setBeneficiary
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 107
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $setBeneficiary_1c31f710_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro setBeneficiary_1c31f710_internal_macro
.loc ../contracts/OrderRoot.tsol, 42
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 10
SDEQ
AND
THROWIFNOT 312
.loc ../contracts/OrderRoot.tsol, 108
DUP
PARSEMSGADDR
INDEX 3
PLDU 256
THROWIFNOT 323
.loc ../contracts/OrderRoot.tsol, 110
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 111
SETGLOB 19
.loc ../contracts/OrderRoot.tsol, 113
GETGLOB 10
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 0

.macro withdrawFee
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 120
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDU 128
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $withdrawFee_8ff2f4a1_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro withdrawFee_8ff2f4a1_internal_macro
.loc ../contracts/OrderRoot.tsol, 42
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 10
SDEQ
AND
THROWIFNOT 312
.loc ../contracts/OrderRoot.tsol, 121
DEPTH
ADDCONST -2
PICK
PUSHINT 100000000
GEQ
THROWIFNOT 302
.loc ../contracts/OrderRoot.tsol, 123
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 124
PUSHINT 0
ROTREV
REVERSE 4, 1
TUPLE 4
OVER
GETGLOB 20
ROT
CALLREF {
	UNTUPLE 4
	REVERSE 4, 0
	NEWC
	STU 64
	STSLICE
	STU 128
	SWAP
	NEWC
	STSLICE
	STBREFR
}
ENDC
ROTREV
PUSHINT 267
DICTSETREF
SETGLOB 20
.loc ../contracts/OrderRoot.tsol, 125
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2803819077499249229031122585109857988247553
STUR 143
GETGLOB 19
PUSHSLICE x2c160545562c0b7b
NEWC
STSLICE
STSLICE
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 0

.macro onBeneficiaryWallet
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 133
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $onBeneficiaryWallet_306db1e6_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onBeneficiaryWallet_306db1e6_internal_macro
.loc ../contracts/OrderRoot.tsol, 134
GETGLOB 9
GETGLOB 20
PUSHINT 267
DICTGET
NULLSWAPIFNOT
NIP
THROWIFNOT 325
.loc ../contracts/OrderRoot.tsol, 135
GETGLOB 9
GETGLOB 20
PUSHINT 267
DICTGETREF
PUSHCONT {
	CTOS
	CALLREF {
		LDU 64
		LDMSGADDR
		LDU 128
		LDREF
		ENDS
		CTOS
		LDMSGADDR
		ENDS
		TUPLE 4
	}
}
PUSHCONT {
	PUSHINT 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	PUSHINT 0
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	TUPLE 4
}
IFELSE
.loc ../contracts/OrderRoot.tsol, 137
PUSHREF {
}
.loc ../contracts/OrderRoot.tsol, 138
FALSE
PUSH S2
INDEX 3
PUSHINT 0
PUSH S4
SECOND
ROLL 5
THIRD
ROLL 6
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2803819077499249229031122585109857988247553
STUR 143
ROLLREV 6
NEWC
STSLICECONST x73e22143
STU 128
STSLICE
STU 128
ROLLREV 3
NEWC
STSLICE
STI 1
STREF
STBREFR
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 149
GETGLOB 9
GETGLOB 20
PUSHINT 267
DICTDEL
DROP
SETGLOB 20
.loc ../contracts/OrderRoot.tsol, 0

.macro buildPayload
DROP
GETGLOB 6
THROWIFNOT 76
.loc ../contracts/OrderRoot.tsol, 152
OVER
PUSHCONT {
	LDU 64
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDU 64
}
IFELSE
LDMSGADDR
LDU 128
LDU 128
LDREF
ENDS
CTOS
LDU 256
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $buildPayload_b6bbd6bf_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 4215291538
	STUR 130
	STREF
	ENDC
	PUSHINT 0
	SENDRAWMSG
}
PUSHCONT {
	DROP
}
IFELSE
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro buildPayload_b6bbd6bf_internal_macro
.loc ../contracts/OrderRoot.tsol, 160
ROLL 4
NEWC
STU 64
.loc ../contracts/OrderRoot.tsol, 161
ROLL 4
STSLICER
.loc ../contracts/OrderRoot.tsol, 162
ROLL 3
STUR 128
.loc ../contracts/OrderRoot.tsol, 163
XCHG S1, S2
STU 128
.loc ../contracts/OrderRoot.tsol, 164
STU 256
.loc ../contracts/OrderRoot.tsol, 166
ENDC
.loc ../contracts/OrderRoot.tsol, 0

.macro onAcceptTokensTransfer
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 169
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDU 128
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $onAcceptTokensTransfer_e63f2284_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro onAcceptTokensTransfer_e63f2284_internal_macro
.loc ../contracts/OrderRoot.tsol, 177
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 178
DUP
CTOS
.loc ../contracts/OrderRoot.tsol, 179
PUSHINT 0
.loc ../contracts/OrderRoot.tsol, 180
OVER
SBITS
GTINT 63
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 181
	OVER
	LDU 64
	POP S3
	NIP
	.loc ../contracts/OrderRoot.tsol, 0
}
IF
.loc ../contracts/OrderRoot.tsol, 184
OVER
SBITS
PUSHINT 779
EQUAL
DUP
PUSHCONT {
	DROP
	GETGLOB 9
	PARSEMSGADDR
	INDEX 3
	PLDU 256
	NEQINT 0
	DUP
	PUSHCONT {
		DROP
		GETGLOB 9
		PARSEMSGADDR
		INDEX 3
		PLDU 256
		PUSHINT 2000000000
		GEQ
		GETGLOB 9
		GETGLOB 15
		SDEQ
		AND
	}
	IF
}
IF
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 189
	OVER
	LDMSGADDR
	LDU 128
	LDU 128
	LDU 256
	POP S6
	.loc ../contracts/OrderRoot.tsol, 192
	PUSH S3
	GETGLOB 13
	CALLREF {
		CALL $buildCode_ba45f7b8_internal_macro$
	}
	.loc ../contracts/OrderRoot.tsol, 197
	PUXC S10, S-1
	PUSH S5
	CALLREF {
		CALL $buildState_40f1ecc5_internal_macro$
	}
	.loc ../contracts/OrderRoot.tsol, 198
	GETGLOB 14
	GETGLOB 19
	GETGLOB 18
	GETGLOB 17
	ROLL 5
	PUSH2 S15, S7
	ROLL 7
	DUP
	HASHCU
	NEWC
	STSLICECONST x801_
	STU 256
	ENDC
	CTOS
	ROLLREV 8
	PUSH S8
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 3112111703474754619475120804657301188247555
	STUR 143
	OVER
	CALLREF {
		CTOS
		LDI 1
		SWAP
		PUSHCONT {
			LDI 5
			NIP
		}
		IF
		LDI 1
		SWAP
		PUSHCONT {
			LDI 2
			NIP
		}
		IF
		LDOPTREF
		LDOPTREF
		LDDICT
		ENDS
		BLKDROP 3
	}
	STREF
	STSLICECONST 1
	ROLLREV 7
	NEWC
	STSLICECONST x694b8887
	STU 128
	STU 128
	STU 256
	ROLLREV 4
	NEWC
	STSLICE
	SWAP
	UNPAIR
	XCHG S2
	STU 128
	STU 128
	ROTREV
	NEWC
	STSLICE
	STREF
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 211
	ROT
	PUSH3 S3, S10, S11
	PUSH S4
	PUSHSLICE xc0000000000000000000000001
	NEWC
	STSLICE
	ROLLREV 5
	NEWC
	STSLICECONST x76d626a2
	STSLICE
	ROLLREV 4
	NEWC
	STSLICE
	STU 128
	ROTREV
	NEWC
	STSLICE
	STU 128
	STBREFR
	STBREFR
	STBREFR
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 213
	PUSH S3
	GTINT 0
	PUSHCONT {
		.loc ../contracts/OrderRoot.tsol, 214
		PUSH2 S3, S8
		FALSE
		NEWC
		STSLICECONST x6_
		STI 1
		STSLICECONST x1_
		STSLICE
		PUSHINT 12042311241760164903241885269213816626727588197185005
		STUR 175
		STU 64
		ENDC
		PUSHINT 1
		ADDCONST 2
		UFITS 8
		SENDRAWMSG
		.loc ../contracts/OrderRoot.tsol, 0
	}
	IF
	.loc ../contracts/OrderRoot.tsol, 221
	PUSHINT 200000000
	PUSH S9
	ROLL 4
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 2868722788230934574387753789225109188247553
	STUR 143
	ROTREV
	PUSHSLICE x31edd4c7553285d0
	NEWC
	STSLICE
	STSLICE
	STU 128
	STBREFR
	ENDC
	PUSHINT 1
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 227
	PUSH S4
	TRUE
	PUSH2 S7, S3
	PUSHINT 200000000
	LEQ
	PUSHCONT {
		PUSH S4
	}
	PUSHCONT {
		PUSHINT 200000000
	}
	IFELSE
	ROLL 4
	PUSH S12
	GETGLOB 9
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 6
	NEWC
	STSLICECONST x73e22143
	STU 128
	STSLICE
	STU 128
	ROLLREV 3
	NEWC
	STSLICE
	STI 1
	STREF
	STBREFR
	STBREFR
	ENDC
	PUSHPOW2 7
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 0
	DROP
}
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 239
	PUSHREF {
		.blob xc0000000000000000000000000327d58fc
	}
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 240
	DUP
	GTINT 0
	PUSHCONT {
		.loc ../contracts/OrderRoot.tsol, 241
		PUSH2 S0, S5
		FALSE
		NEWC
		STSLICECONST x6_
		STI 1
		STSLICECONST x1_
		STSLICE
		PUSHINT 12042311241760164903241885269213816626727588201921448
		STUR 175
		STU 64
		ENDC
		PUSHINT 1
		ADDCONST 2
		UFITS 8
		SENDRAWMSG
		.loc ../contracts/OrderRoot.tsol, 0
	}
	IF
	.loc ../contracts/OrderRoot.tsol, 248
	PUSHREF {
	}
	.loc ../contracts/OrderRoot.tsol, 249
	TRUE
	PUSH S5
	PUSHINT 0
	PUSH2 S9, S10
	GETGLOB 9
	FALSE
	NEWC
	STSLICECONST x6_
	STI 1
	STSLICECONST x1_
	STSLICE
	PUSHINT 1
	STUR 111
	ROLLREV 6
	NEWC
	STSLICECONST x73e22143
	STU 128
	STSLICE
	STU 128
	ROLLREV 3
	NEWC
	STSLICE
	STI 1
	STREF
	STBREFR
	STBREFR
	ENDC
	PUSHPOW2 7
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 0
}
IFELSE
BLKDROP 8
.loc ../contracts/OrderRoot.tsol, 0

.macro expectedAddressOrder
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 264
LDU 32
GETGLOB 4
ROT
SETINDEXQ 5
SETGLOB 4
OVER
PUSHCONT {
	LDREF
	ENDS
	CTOS
}
IF
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 64
LDU 64
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $expectedAddressOrder_046f61e6_internal_macro$
}
OVER
PUSHCONT {
	PUSH S3
	CTOS
	LDU 2
	LDMSGADDR
	DROP
	NIP
	NEWC
	STSLICECONST xc
	STSLICE
	PUSHINT 1
	STUR 98
	SWAP
	NEWC
	STSLICECONST xcd353da6
	STSLICE
	STBREFR
	ENDC
	PUSHINT 0
}
PUSHCONT {
	GETGLOB 4
	DUP
	INDEX 3
	OVER
	THIRD
	GETGLOB 9
	ROLL 3
	SECOND
	NEWC
	STSLICECONST x2_
	STI 1
	STSLICECONST x1_
	STSLICE
	SWAP
	STGRAMS
	STDICT
	PUSHINT 1
	STUR 106
	SWAP
	NEWC
	GETGLOB 4
	INDEX 5
	STUR 32
	STSLICE
	STBREFR
	ENDC
	GETGLOB 4
	INDEX 4
}
IFELSE
SENDRAWMSG
IFREF {
	CALL $upd_only_time_in_c4$
}
THROW 0

.macro expectedAddressOrder_046f61e6_internal_macro
.loc ../contracts/OrderRoot.tsol, 275
PUSH S5
NEWC
STSLICE
.loc ../contracts/OrderRoot.tsol, 276
PUSH S3
STSLICER
.loc ../contracts/OrderRoot.tsol, 282
GETGLOB 4
PUSHINT 0
SETINDEXQ 2
PUSHPOW2 7
SETINDEXQ 4
FALSE
SETINDEXQ 1
SETGLOB 4
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
ROLL 8
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
ROLL 7
PUSHINT 2
ROT
PUSHINT 64
DICTUSET
ROLL 6
PUSHINT 3
ROT
PUSHINT 64
DICTUSET
ROLL 5
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
ROLL 4
PUSHINT 5
ROT
PUSHINT 64
DICTUSET
ROLL 3
NEWC
STU 64
PUSHINT 6
ROT
PUSHINT 64
DICTUSETB
ROT
NEWC
STU 64
PUSHINT 7
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
GETGLOB 13
CTOS
ROT
ENDC

CALLREF {
	PUSH S1
	PUSHSLICE x8adb35
	SDEQ
	PUSHREFCONT {
		SWAP      ; salt sliceCode
		LDREF
		LDREF
		DROP         ; salt selfCallCode usualSelector
		XCHG S1, S2  ; selfCallCode salt usualSelector
		CTOS         ; selfCallCode salt usualSelector
		CALLREF {
			
			LDREFRTOS  ; selfCallCode salt restUsualSelector intSelector

			PUSHSLICE xF4A4_
			SDBEGINSX
			LDDICT     ; selfCallCode salt restUsualSelector dict intSelector
			LDU 10
			NIP
			DUP
			SREFS      ; selfCallCode salt restUsualSelector dict intSelector refs
			PUSHCONT {
				LDREF
			}
			PUSHCONT {
				PUSHREF {
				}
				SWAP
			}
			IFELSE
		                ; selfCallCode salt restUsualSelector dict version intSelector
			PUSHSLICE xF4A1
			SDBEGINSX
			DROP
			            ; selfCallCode salt restUsualSelector dict version
			SWAP        ; selfCallCode salt restUsualSelector version dict
			NEWC        ; selfCallCode salt restUsualSelector version dict builder
			STSLICECONST xF4A4_ ; DICTPUSHCONST
			STDICT
			PUSHINT 32
			STUR 10
			STSLICECONST xF4A1 ; DICTUGETJMP
			STREF       ; selfCallCode salt restUsualSelector builder
			XCHG S1, S2 ; selfCallCode restUsualSelector salt builder
			STREF       ; selfCallCode restUsualSelector builder
			NEWC        ; selfCallCode restUsualSelector builder usualBuilder
			STBREF      ; selfCallCode restUsualSelector usualBuilder
			STSLICE     ; selfCallCode usualBuilder

		}
		NEWC        ; selfCallCode usualBuilder mainBuilder
		STSLICECONST x8adb35
		XCHG S1, S2 ; usualBuilder selfCallCode mainBuilder
		STREF
		STBREF
		ENDC
	}
	PUSHREFCONT {
		SWAP
		CALLREF {
			
			LDREFRTOS  ; selfCallCode salt restUsualSelector intSelector

			PUSHSLICE xF4A4_
			SDBEGINSX
			LDDICT     ; selfCallCode salt restUsualSelector dict intSelector
			LDU 10
			NIP
			DUP
			SREFS      ; selfCallCode salt restUsualSelector dict intSelector refs
			PUSHCONT {
				LDREF
			}
			PUSHCONT {
				PUSHREF {
				}
				SWAP
			}
			IFELSE
		                ; selfCallCode salt restUsualSelector dict version intSelector
			PUSHSLICE xF4A1
			SDBEGINSX
			DROP
			            ; selfCallCode salt restUsualSelector dict version
			SWAP        ; selfCallCode salt restUsualSelector version dict
			NEWC        ; selfCallCode salt restUsualSelector version dict builder
			STSLICECONST xF4A4_ ; DICTPUSHCONST
			STDICT
			PUSHINT 32
			STUR 10
			STSLICECONST xF4A1 ; DICTUGETJMP
			STREF       ; selfCallCode salt restUsualSelector builder
			XCHG S1, S2 ; selfCallCode restUsualSelector salt builder
			STREF       ; selfCallCode restUsualSelector builder
			NEWC        ; selfCallCode restUsualSelector builder usualBuilder
			STBREF      ; selfCallCode restUsualSelector usualBuilder
			STSLICE     ; selfCallCode usualBuilder

		}
		ENDC
	}
	IFELSE
}
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
HASHCU
NEWC
STSLICECONST x801_
STU 256
ENDC
CTOS
.loc ../contracts/OrderRoot.tsol, 0

.globl	buildCode_ba45f7b8_internal
.type	buildCode_ba45f7b8_internal, @function
CALL $buildCode_ba45f7b8_internal_macro$

.macro buildCode_ba45f7b8_internal_macro
.loc ../contracts/OrderRoot.tsol, 304
MYADDR
NEWC
STSLICE
.loc ../contracts/OrderRoot.tsol, 305
XCHG S1, S2
STSLICE
.loc ../contracts/OrderRoot.tsol, 306
SWAP
CTOS
SWAP
ENDC

CALLREF {
	PUSH S1
	PUSHSLICE x8adb35
	SDEQ
	PUSHREFCONT {
		SWAP      ; salt sliceCode
		LDREF
		LDREF
		DROP         ; salt selfCallCode usualSelector
		XCHG S1, S2  ; selfCallCode salt usualSelector
		CTOS         ; selfCallCode salt usualSelector
		CALLREF {
			
			LDREFRTOS  ; selfCallCode salt restUsualSelector intSelector

			PUSHSLICE xF4A4_
			SDBEGINSX
			LDDICT     ; selfCallCode salt restUsualSelector dict intSelector
			LDU 10
			NIP
			DUP
			SREFS      ; selfCallCode salt restUsualSelector dict intSelector refs
			PUSHCONT {
				LDREF
			}
			PUSHCONT {
				PUSHREF {
				}
				SWAP
			}
			IFELSE
		                ; selfCallCode salt restUsualSelector dict version intSelector
			PUSHSLICE xF4A1
			SDBEGINSX
			DROP
			            ; selfCallCode salt restUsualSelector dict version
			SWAP        ; selfCallCode salt restUsualSelector version dict
			NEWC        ; selfCallCode salt restUsualSelector version dict builder
			STSLICECONST xF4A4_ ; DICTPUSHCONST
			STDICT
			PUSHINT 32
			STUR 10
			STSLICECONST xF4A1 ; DICTUGETJMP
			STREF       ; selfCallCode salt restUsualSelector builder
			XCHG S1, S2 ; selfCallCode restUsualSelector salt builder
			STREF       ; selfCallCode restUsualSelector builder
			NEWC        ; selfCallCode restUsualSelector builder usualBuilder
			STBREF      ; selfCallCode restUsualSelector usualBuilder
			STSLICE     ; selfCallCode usualBuilder

		}
		NEWC        ; selfCallCode usualBuilder mainBuilder
		STSLICECONST x8adb35
		XCHG S1, S2 ; usualBuilder selfCallCode mainBuilder
		STREF
		STBREF
		ENDC
	}
	PUSHREFCONT {
		SWAP
		CALLREF {
			
			LDREFRTOS  ; selfCallCode salt restUsualSelector intSelector

			PUSHSLICE xF4A4_
			SDBEGINSX
			LDDICT     ; selfCallCode salt restUsualSelector dict intSelector
			LDU 10
			NIP
			DUP
			SREFS      ; selfCallCode salt restUsualSelector dict intSelector refs
			PUSHCONT {
				LDREF
			}
			PUSHCONT {
				PUSHREF {
				}
				SWAP
			}
			IFELSE
		                ; selfCallCode salt restUsualSelector dict version intSelector
			PUSHSLICE xF4A1
			SDBEGINSX
			DROP
			            ; selfCallCode salt restUsualSelector dict version
			SWAP        ; selfCallCode salt restUsualSelector version dict
			NEWC        ; selfCallCode salt restUsualSelector version dict builder
			STSLICECONST xF4A4_ ; DICTPUSHCONST
			STDICT
			PUSHINT 32
			STUR 10
			STSLICECONST xF4A1 ; DICTUGETJMP
			STREF       ; selfCallCode salt restUsualSelector builder
			XCHG S1, S2 ; selfCallCode restUsualSelector salt builder
			STREF       ; selfCallCode restUsualSelector builder
			NEWC        ; selfCallCode restUsualSelector builder usualBuilder
			STBREF      ; selfCallCode restUsualSelector usualBuilder
			STSLICE     ; selfCallCode usualBuilder

		}
		ENDC
	}
	IFELSE
}
.loc ../contracts/OrderRoot.tsol, 0

.globl	buildState_40f1ecc5_internal
.type	buildState_40f1ecc5_internal, @function
CALL $buildState_40f1ecc5_internal_macro$

.macro buildState_40f1ecc5_internal_macro
.loc ../contracts/OrderRoot.tsol, 314
PUSHINT 0
NEWC
STU 256
PUSHINT 0
NEWDICT
PUSHINT 64
DICTUSETB
GETGLOB 10
PUSHINT 1
ROT
PUSHINT 64
DICTUSET
MYADDR
PUSHINT 2
ROT
PUSHINT 64
DICTUSET
ROLL 3
PUSHINT 3
ROT
PUSHINT 64
DICTUSET
GETGLOB 11
PUSHINT 4
ROT
PUSHINT 64
DICTUSET
SWAP
PUSHINT 5
ROT
PUSHINT 64
DICTUSET
LTIME
NEWC
STU 64
PUSHINT 6
ROT
PUSHINT 64
DICTUSETB
NOW
NEWC
STU 64
PUSHINT 7
ROT
PUSHINT 64
DICTUSETB
NEWC
STDICT
ENDC
SWAP
NEWC
STSLICECONST x2_
STOPTREF
STOPTREF
STZERO
ENDC
.loc ../contracts/OrderRoot.tsol, 0

.macro upgrade
DROP
GETGLOB 6
THROWIFNOT 76
GETGLOB 2
ISNULL
IFREF {
	CALL $c4_to_c7$
}
.loc ../contracts/OrderRoot.tsol, 329
OVER
PUSHCONT {
	LDREF
	LDU 32
	LDREF
	ENDS
	CTOS
}
PUSHCONT {
	LDREF
	LDU 32
}
IFELSE
LDMSGADDR
ENDS
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $upgrade_fb9d1513_internal_macro$
}
DROP
CALLREF {
	CALL $c7_to_c4$
}
THROW 0

.macro upgrade_fb9d1513_internal_macro
.loc ../contracts/OrderRoot.tsol, 42
GETGLOB 9
PARSEMSGADDR
INDEX 3
PLDU 256
NEQINT 0
GETGLOB 9
GETGLOB 10
SDEQ
AND
THROWIFNOT 312
.loc ../contracts/OrderRoot.tsol, 334
GETGLOB 12
PUSH S2
EQUAL
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 335
	GETPARAM 7
	FIRST
	DEPTH
	ADDCONST -2
	PICK
	SUB
	UFITS 128
	PUSHINT 0
	RAWRESERVE
	.loc ../contracts/OrderRoot.tsol, 336
	DUP
	NEWC
	STSLICECONST x62_
	STSLICE
	PUSHINT 111
	STZEROES
	ENDC
	PUSHPOW2 7
	ADDCONST 2
	UFITS 8
	SENDRAWMSG
}
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 338
	OVER
	PUSHSLICE xc000000000000000000000000071df5078
	NEWC
	STSLICE
	STU 32
	ENDC
	PUSHINT 0
	SENDRAWMSG
	.loc ../contracts/OrderRoot.tsol, 341
	GETGLOB 11
	NEWC
	STSLICE
	.loc ../contracts/OrderRoot.tsol, 342
	GETGLOB 10
	STSLICER
	.loc ../contracts/OrderRoot.tsol, 343
	GETGLOB 12
	STUR 32
	.loc ../contracts/OrderRoot.tsol, 344
	GETGLOB 13
	SWAP
	STREF
	.loc ../contracts/OrderRoot.tsol, 345
	GETGLOB 14
	SWAP
	STREF
	.loc ../contracts/OrderRoot.tsol, 348
	GETGLOB 15
	NEWC
	STSLICE
	.loc ../contracts/OrderRoot.tsol, 349
	GETGLOB 16
	STSLICER
	.loc ../contracts/OrderRoot.tsol, 350
	GETGLOB 17
	STSLICER
	.loc ../contracts/OrderRoot.tsol, 351
	STBREFR
	.loc ../contracts/OrderRoot.tsol, 353
	PUSH S3
	SETCODE
	.loc ../contracts/OrderRoot.tsol, 354
	PUSH S3
	CTOS
	DUP
	PUSHSLICE x8adb35
	SDEQ
	PUSHCONT {
		PLDREFIDX 1
		CTOS
	}
	IF
	PLDREF
	CTOS
	BLESS
	POP C3
	.loc ../contracts/OrderRoot.tsol, 356
	ENDC
	CALLREF {
		CALL $:onCodeUpgrade$
	}
}
IFELSE
.loc ../contracts/OrderRoot.tsol, 0
BLKDROP 3

.internal-alias :onCodeUpgrade, 2
.internal :onCodeUpgrade
.loc ../contracts/OrderRoot.tsol, 361
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 363
CTOS
.loc ../contracts/OrderRoot.tsol, 365
DUP
LDMSGADDR
LDMSGADDR
LDU 32
LDU 32
LDMSGADDR
POP S6
.loc ../contracts/OrderRoot.tsol, 368
ROT
PUSHCONT {
	.loc ../contracts/OrderRoot.tsol, 369
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 10
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 11
	PUSHINT 0
	SETGLOB 12
	PUSHREF {
	}
	SETGLOB 13
	PUSHREF {
	}
	SETGLOB 14
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 15
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 16
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 17
	PUSHINT 0
	DUP
	PAIR
	SETGLOB 18
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	SETGLOB 19
	NEWDICT
	SETGLOB 20
	.loc ../contracts/OrderRoot.tsol, 0
}
IFNOT
.loc ../contracts/OrderRoot.tsol, 372
PUSH S3
SETGLOB 10
.loc ../contracts/OrderRoot.tsol, 373
ROLL 3
SETGLOB 19
.loc ../contracts/OrderRoot.tsol, 374
ROT
SETGLOB 11
.loc ../contracts/OrderRoot.tsol, 375
SWAP
SETGLOB 12
.loc ../contracts/OrderRoot.tsol, 376
SETGLOB 16
.loc ../contracts/OrderRoot.tsol, 378
LDREFRTOS
NIP
.loc ../contracts/OrderRoot.tsol, 379
DUP
LDMSGADDR
POP S2
SETGLOB 17
.loc ../contracts/OrderRoot.tsol, 380
DUP
LDREF
POP S2
SETGLOB 13
.loc ../contracts/OrderRoot.tsol, 381
DUP
LDREF
POP S2
SETGLOB 14
.loc ../contracts/OrderRoot.tsol, 383
LDU 128
PLDU 128
.loc ../contracts/OrderRoot.tsol, 384
PAIR
SETGLOB 18
.loc ../contracts/OrderRoot.tsol, 385
PUSHINT 1000000000
PUSHINT 0
RAWRESERVE
.loc ../contracts/OrderRoot.tsol, 387
PUSHINT 200000000
MYADDR
GETGLOB 11
NEWC
STSLICECONST x62_
STSLICE
PUSHINT 2868722788230934574387753789225109188247553
STUR 143
ROTREV
PUSHSLICE x31edd4c749b2f6d7
NEWC
STSLICE
STSLICE
STU 128
STBREFR
ENDC
PUSHINT 1
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 396
GETGLOB 16
NEWC
STSLICECONST x42_
STSLICE
PUSHINT 111
STZEROES
ENDC
PUSHPOW2 7
ADDCONST 2
UFITS 8
SENDRAWMSG
.loc ../contracts/OrderRoot.tsol, 0
CALLREF {
	CALL $c7_to_c4$
}
COMMIT
THROW 0

.macro c4_to_c7
PUSHROOT
CTOS
LDU 256 ; pubkey c4
LDU 64 ; pubkey timestamp c4
LDU 1 ; ctor flag
NIP
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 32
LDREF
LDREF
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDREF
ENDS
CTOS
LDMSGADDR
LDU 128
LDU 128
ROTREV
PAIR
SWAP
LDREF
ENDS
CTOS
LDMSGADDR
LDDICT
ENDS
SETGLOB 20
SETGLOB 19
SETGLOB 18
SETGLOB 17
SETGLOB 16
SETGLOB 15
SETGLOB 14
SETGLOB 13
SETGLOB 12
SETGLOB 11
SETGLOB 10
SETGLOB 3
SETGLOB 2

.macro c4_to_c7_with_init_storage
PUSHROOT
CTOS
SBITS
GTINT 1
PUSHCONT {
	PUSHINT 0
	PUSHROOT
	CTOS
	PLDDICT ; D
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	DUP
	PUSHINT 0
	PUSHREF {
	}
	DUP
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	BLKPUSH 2, 0
	PUSHINT 0
	DUP
	PAIR
	PUSHREFSLICE {
		.blob x8000000000000000000000000000000000000000000000000000000000000000001_
	}
	NEWDICT
	SETGLOB 20
	SETGLOB 19
	SETGLOB 18
	SETGLOB 17
	SETGLOB 16
	SETGLOB 15
	SETGLOB 14
	SETGLOB 13
	SETGLOB 12
	SETGLOB 11
	SETGLOB 10
	PUSHINT 64
	DICTUGET
	THROWIFNOT 61
	PLDU 256
	SETGLOB 2
	PUSHINT 0 ; timestamp
	SETGLOB 3
}
IFREFELSE {
	CALL $c4_to_c7$
}

.macro c7_to_c4
GETGLOB 20
GETGLOB 19
GETGLOB 18
GETGLOB 17
GETGLOB 16
GETGLOB 15
GETGLOB 14
GETGLOB 13
GETGLOB 12
GETGLOB 11
GETGLOB 10
GETGLOB 3
GETGLOB 2
NEWC
STU 256
STU 64
STONE
STSLICE
ROLLREV 10
NEWC
STSLICE
STU 32
STREF
STREF
ROLLREV 6
NEWC
STSLICE
ROLLREV 5
NEWC
STSLICE
ROLLREV 4
NEWC
STSLICE
SWAP
UNPAIR
XCHG S2
STU 128
STU 128
ROTREV
NEWC
STSLICE
STDICT
STBREFR
STBREFR
STBREFR
STBREFR
STBREFR
ENDC
POPROOT

.macro upd_only_time_in_c4
PUSHROOT
CTOS
LDU 256
LDU 64
NIP
GETGLOB 3
ROT
NEWC
STU 256
STU 64
STSLICE
ENDC
POPROOT

.internal-alias :main_internal, 0
.internal :main_internal
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSH S2
CTOS
LDU 4 ; bounced tail
LDMSGADDR ; bounced src tail
DROP
SETGLOB 9
MODPOW2 1
GETGLOB 4
TRUE
SETINDEXQ 1
PUSHINT 10000000
SETINDEXQ 2
NULL
SETINDEXQ 3
PUSHINT 0
SETINDEXQ 4
SETGLOB 4
IFJMPREF {
	OVER
	LDSLICE 32
	NIP
	CALL $on_bounce_macro$
}
OVER
SEMPTY ; isEmpty
IFJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
OVER
LDUQ 32  ; [funcId] body' ok
THROWIFNOT 60
OVER
IFNOTJMPREF {
	GETGLOB 6
	THROWIFNOT 76
}
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.internal-alias :main_external, -1
.internal :main_external
PUSHROOT
CTOS
SBITS
NEQINT 1
SETGLOB 6
PUSHREFSLICE {
	.blob x8000000000000000000000000000000000000000000000000000000000000000001_
}
SETGLOB 9
OVER
CALLREF {
	CALL $c4_to_c7_with_init_storage$
}
LDU 1 ; haveSign msgSlice
SWAP
PUSHCONT {
	PUSHPOW2 9
	LDSLICEX ; signatureSlice msgSlice
	DUP
	HASHSU ; signatureSlice msgSlice hashMsgSlice
	SWAP
	LDU 1 ; signatureSlice hashMsgSlice hasPubkey msgSlice
	SWAP
	PUSHCONT {
		LDU 256 ; signatureSlice hashMsgSlice pubkey msgSlice
		XCHG S3
		SWAP
	}
	PUSHCONT {
		XCHG S2
		GETGLOB 2
	}
	IFELSE
	CHKSIGNU ; msgSlice isSigned
	THROWIFNOT 40
}
PUSHCONT {
	LDU 1 ; hasPubkey msgSlice
	SWAP
	THROWIF 58
}
IFELSE
LDU 64 ; timestamp msgSlice
SWAP
CALL $replay_protection_macro$
LDU 32 ; expireAt msgSlice
SWAP
NOW ; msgSlice expireAt now
GREATER ; msgSlice expireAt>now
THROWIFNOT 57
LDU 32 ; funcId body
SWAP
CALLREF {
	CALL $public_function_selector$
}
THROW 60

.macro public_function_selector
DUP
PUSHINT 399110834
LEQ
IFJMPREF {
	DUP
	PUSHINT 50534101
	EQUAL
	IFJMPREF {
		CALL $getSpentToken$
	}
	DUP
	PUSHINT 177853184
	EQUAL
	IFJMPREF {
		CALL $setFeeParams$
	}
	DUP
	PUSHINT 282107437
	EQUAL
	IFJMPREF {
		CALL $getFactory$
	}
	DUP
	PUSHINT 399110834
	EQUAL
	IFJMPREF {
		CALL $setBeneficiary$
	}
}
DUP
PUSHINT 1295334822
LEQ
IFJMPREF {
	DUP
	PUSHINT 766070063
	EQUAL
	IFJMPREF {
		CALL $getVersion$
	}
	DUP
	PUSHINT 1104642257
	EQUAL
	IFJMPREF {
		CALL $getFeeParams$
	}
	DUP
	PUSHINT 1236465367
	EQUAL
	IFJMPREF {
		CALL $onTokenWallet$
	}
	DUP
	PUSHINT 1295334822
	EQUAL
	IFJMPREF {
		CALL $expectedAddressOrder$
	}
}
DUP
PUSHINT 1756716863
LEQ
IFJMPREF {
	DUP
	PUSHINT 1429374416
	EQUAL
	IFJMPREF {
		CALL $onTokenWalletReceive$
	}
	DUP
	PUSHINT 1445727099
	EQUAL
	IFJMPREF {
		CALL $onBeneficiaryWallet$
	}
	DUP
	PUSHINT 1688565960
	EQUAL
	IFJMPREF {
		CALL $upgrade$
	}
	DUP
	PUSHINT 1756716863
	EQUAL
	IFJMPREF {
		CALL $constructor$
	}
}
DUP
PUSHINT 2067807890
LEQ
IFJMPREF {
	DUP
	PUSHINT 1782066272
	EQUAL
	IFJMPREF {
		CALL $withdrawFee$
	}
	DUP
	PUSHINT 1893244873
	EQUAL
	IFJMPREF {
		CALL $onAcceptTokensTransfer$
	}
	DUP
	PUSHINT 2067807890
	EQUAL
	IFJMPREF {
		CALL $buildPayload$
	}
}

